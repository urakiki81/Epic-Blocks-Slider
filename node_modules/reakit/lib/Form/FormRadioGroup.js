'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-8f9a8751.js');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('reakit-utils/shallowEqual');
require('../Box/Box.js');
var React = require('react');
require('reakit-utils/useLiveRef');
require('reakit-utils/useIsomorphicEffect');
require('reakit-utils/useSealedState');
require('reakit-utils/applyState');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
var CompositeState = require('../CompositeState-a8d7b460.js');
require('../Group/Group.js');
require('reakit-utils/useUpdateEffect');
require('reakit-utils/isPromise');
require('reakit-utils/isEmpty');
require('reakit-utils/isPlainObject');
var FormState = require('./FormState.js');
require('reakit-utils/isObject');
require('./utils/setAllIn.js');
require('./utils/getIn.js');
require('reakit-utils/toArray');
require('reakit-utils/isInteger');
require('./utils/setIn.js');
var getInputId = require('../getInputId-cbd3bbcc.js');
require('../getLabelId-eba7e47b.js');
require('../shouldShowError-ed9ccbd4.js');
var FormGroup = require('./FormGroup.js');

var FormRadioGroupContext = React.createContext(null);
var unstable_useFormRadioGroup = createHook.createHook({
  name: "FormRadioGroup",
  compose: FormGroup.unstable_useFormGroup,
  useState: FormState.unstable_useFormState,
  keys: ["name"],
  useOptions: function useOptions(options, _ref) {
    var name = _ref.name;
    return _rollupPluginBabelHelpers._objectSpread2(_rollupPluginBabelHelpers._objectSpread2({}, options), {}, {
      name: options.name || name
    });
  },
  useProps: function useProps(options, _ref2) {
    var htmlWrapElement = _ref2.wrapElement,
        htmlProps = _rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref2, ["wrapElement"]);

    var id = getInputId.getInputId(options.name, options.baseId);
    var composite = CompositeState.useCompositeState({
      baseId: id,
      loop: true
    });
    var providerValue = React.useMemo(function () {
      return composite;
    }, Object.values(composite));
    var wrapElement = React.useCallback(function (element) {
      element = /*#__PURE__*/React.createElement(FormRadioGroupContext.Provider, {
        value: providerValue
      }, element);

      if (htmlWrapElement) {
        return htmlWrapElement(element);
      }

      return element;
    }, [providerValue, htmlWrapElement]);
    return _rollupPluginBabelHelpers._objectSpread2({
      role: "radiogroup",
      wrapElement: wrapElement
    }, htmlProps);
  }
});
var unstable_FormRadioGroup = createComponent.createComponent({
  as: "fieldset",
  useHook: unstable_useFormRadioGroup
});

exports.FormRadioGroupContext = FormRadioGroupContext;
exports.unstable_FormRadioGroup = unstable_FormRadioGroup;
exports.unstable_useFormRadioGroup = unstable_useFormRadioGroup;
