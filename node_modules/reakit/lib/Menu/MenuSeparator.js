'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-8f9a8751.js');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('reakit-utils/shallowEqual');
require('../Box/Box.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/isSelfTarget');
require('reakit-utils/useIsomorphicEffect');
require('reakit-utils/hasFocusWithin');
require('reakit-utils/isPortalEvent');
require('reakit-utils/getActiveElement');
require('reakit-utils/tabbable');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('reakit-utils/useSealedState');
require('reakit-system/useCreateElement');
require('reakit-utils/createOnKeyDown');
require('reakit-utils/getDocument');
require('reakit-utils/fireEvent');
require('reakit-utils/fireKeyboardEvent');
require('reakit-utils/applyState');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('../CompositeState-a8d7b460.js');
require('../Composite/Composite.js');
require('../Group/Group.js');
require('../Id/Id.js');
require('../Composite/CompositeGroup.js');
require('reakit-utils/isTextField');
require('../setTextFieldValue-fc0d2717.js');
require('../Composite/CompositeItem.js');
require('../Composite/CompositeItemWidget.js');
require('../Disclosure/DisclosureState.js');
require('reakit-utils/removeItemFromArray');
require('../MenuContext-45622aab.js');
require('../Dialog/DialogState.js');
require('@popperjs/core');
require('../Popover/PopoverState.js');
require('./MenuBarState.js');
var MenuState = require('./MenuState.js');
var Separator = require('../Separator/Separator.js');

var useMenuSeparator = createHook.createHook({
  name: "MenuSeparator",
  compose: Separator.useSeparator,
  useState: MenuState.useMenuState,
  useOptions: function useOptions(_ref) {
    var _ref$orientation = _ref.orientation,
        orientation = _ref$orientation === void 0 ? "vertical" : _ref$orientation,
        options = _rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref, ["orientation"]);

    return _rollupPluginBabelHelpers._objectSpread2({
      orientation: orientation === "vertical" ? "horizontal" : "vertical"
    }, options);
  }
});
var MenuSeparator = createComponent.createComponent({
  as: "hr",
  memo: true,
  useHook: useMenuSeparator
});

exports.MenuSeparator = MenuSeparator;
exports.useMenuSeparator = useMenuSeparator;
