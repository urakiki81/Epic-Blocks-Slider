'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../_rollupPluginBabelHelpers-8f9a8751.js');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('reakit-utils/shallowEqual');
require('../Box/Box.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
var reakitWarning = require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/isSelfTarget');
require('reakit-utils/useIsomorphicEffect');
require('reakit-utils/hasFocusWithin');
require('reakit-utils/isPortalEvent');
require('reakit-utils/getActiveElement');
require('reakit-utils/tabbable');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('../Button/Button.js');
require('reakit-utils/useSealedState');
require('reakit-system/useCreateElement');
require('reakit-utils/createOnKeyDown');
require('reakit-utils/getDocument');
require('reakit-utils/fireEvent');
require('reakit-utils/fireKeyboardEvent');
require('reakit-utils/applyState');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('../CompositeState-a8d7b460.js');
require('../Composite/Composite.js');
require('../Group/Group.js');
require('../Id/Id.js');
require('../Composite/CompositeGroup.js');
require('reakit-utils/isTextField');
require('../setTextFieldValue-fc0d2717.js');
require('../Composite/CompositeItem.js');
require('../Composite/CompositeItemWidget.js');
require('../Disclosure/DisclosureState.js');
require('reakit-utils/removeItemFromArray');
require('../MenuContext-45622aab.js');
require('../Dialog/DialogState.js');
require('../Disclosure/Disclosure.js');
require('../Dialog/DialogDisclosure.js');
require('@popperjs/core');
require('../Popover/PopoverState.js');
require('./MenuBarState.js');
require('./MenuState.js');
require('../Popover/PopoverDisclosure.js');
require('../findVisibleSubmenu-d8b7eeab.js');
var MenuButton = require('./MenuButton.js');

var useMenuDisclosure = createHook.createHook({
  name: "MenuDisclosure",
  compose: MenuButton.useMenuButton,
  useProps: function useProps(_, htmlProps) {
    process.env.NODE_ENV !== "production" ? reakitWarning.useWarning(true, "`MenuDisclosure` has been renamed to `MenuButton`. Using `<MenuDisclosure />` will no longer work in future versions.", "See https://reakit.io/docs/menu") : void 0;
    return htmlProps;
  }
});
var MenuDisclosure = createComponent.createComponent({
  as: "button",
  useHook: useMenuDisclosure
});

exports.MenuDisclosure = MenuDisclosure;
exports.useMenuDisclosure = useMenuDisclosure;
