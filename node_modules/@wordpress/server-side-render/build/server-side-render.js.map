{"version":3,"sources":["@wordpress/server-side-render/src/server-side-render.js"],"names":["rendererPath","block","attributes","urlQueryArgs","context","ServerSideRender","props","state","response","isStillMounted","fetch","prevProps","setState","httpMethod","isPostRequest","urlAttributes","path","data","fetchRequest","currentFetchRequest","method","then","rendered","catch","error","errorMsg","message","className","EmptyResponsePlaceholder","ErrorResponsePlaceholder","LoadingResponsePlaceholder","Component","defaultProps","errorMessage"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isEqual, debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, RawHTML } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Placeholder, Spinner } from '@wordpress/components';\n\nexport function rendererPath( block, attributes = null, urlQueryArgs = {} ) {\n\treturn addQueryArgs( `/wp/v2/block-renderer/${ block }`, {\n\t\tcontext: 'edit',\n\t\t...( null !== attributes ? { attributes } : {} ),\n\t\t...urlQueryArgs,\n\t} );\n}\n\nexport class ServerSideRender extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tresponse: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isStillMounted = true;\n\t\tthis.fetch( this.props );\n\t\t// Only debounce once the initial fetch occurs to ensure that the first\n\t\t// renders show data as soon as possible.\n\t\tthis.fetch = debounce( this.fetch, 500 );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isStillMounted = false;\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! isEqual( prevProps, this.props ) ) {\n\t\t\tthis.fetch( this.props );\n\t\t}\n\t}\n\n\tfetch( props ) {\n\t\tif ( ! this.isStillMounted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( null !== this.state.response ) {\n\t\t\tthis.setState( { response: null } );\n\t\t}\n\t\tconst {\n\t\t\tblock,\n\t\t\tattributes = null,\n\t\t\thttpMethod = 'GET',\n\t\t\turlQueryArgs = {},\n\t\t} = props;\n\n\t\t// If httpMethod is 'POST', send the attributes in the request body instead of the URL.\n\t\t// This allows sending a larger attributes object than in a GET request, where the attributes are in the URL.\n\t\tconst isPostRequest = 'POST' === httpMethod;\n\t\tconst urlAttributes = isPostRequest ? null : attributes;\n\t\tconst path = rendererPath( block, urlAttributes, urlQueryArgs );\n\t\tconst data = isPostRequest ? { attributes } : null;\n\n\t\t// Store the latest fetch request so that when we process it, we can\n\t\t// check if it is the current request, to avoid race conditions on slow networks.\n\t\tconst fetchRequest = ( this.currentFetchRequest = apiFetch( {\n\t\t\tpath,\n\t\t\tdata,\n\t\t\tmethod: isPostRequest ? 'POST' : 'GET',\n\t\t} )\n\t\t\t.then( ( response ) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.isStillMounted &&\n\t\t\t\t\tfetchRequest === this.currentFetchRequest &&\n\t\t\t\t\tresponse\n\t\t\t\t) {\n\t\t\t\t\tthis.setState( { response: response.rendered } );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.isStillMounted &&\n\t\t\t\t\tfetchRequest === this.currentFetchRequest\n\t\t\t\t) {\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\tresponse: {\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\terrorMsg: error.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} ) );\n\t\treturn fetchRequest;\n\t}\n\n\trender() {\n\t\tconst response = this.state.response;\n\t\tconst {\n\t\t\tclassName,\n\t\t\tEmptyResponsePlaceholder,\n\t\t\tErrorResponsePlaceholder,\n\t\t\tLoadingResponsePlaceholder,\n\t\t} = this.props;\n\n\t\tif ( response === '' ) {\n\t\t\treturn (\n\t\t\t\t<EmptyResponsePlaceholder\n\t\t\t\t\tresponse={ response }\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if ( ! response ) {\n\t\t\treturn (\n\t\t\t\t<LoadingResponsePlaceholder\n\t\t\t\t\tresponse={ response }\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if ( response.error ) {\n\t\t\treturn (\n\t\t\t\t<ErrorResponsePlaceholder\n\t\t\t\t\tresponse={ response }\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<RawHTML key=\"html\" className={ className }>\n\t\t\t\t{ response }\n\t\t\t</RawHTML>\n\t\t);\n\t}\n}\n\nServerSideRender.defaultProps = {\n\tEmptyResponsePlaceholder: ( { className } ) => (\n\t\t<Placeholder className={ className }>\n\t\t\t{ __( 'Block rendered as empty.' ) }\n\t\t</Placeholder>\n\t),\n\tErrorResponsePlaceholder: ( { response, className } ) => {\n\t\tconst errorMessage = sprintf(\n\t\t\t// translators: %s: error message describing the problem\n\t\t\t__( 'Error loading block: %s' ),\n\t\t\tresponse.errorMsg\n\t\t);\n\t\treturn (\n\t\t\t<Placeholder className={ className }>{ errorMessage }</Placeholder>\n\t\t);\n\t},\n\tLoadingResponsePlaceholder: ( { className } ) => {\n\t\treturn (\n\t\t\t<Placeholder className={ className }>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t},\n};\n\nexport default ServerSideRender;\n"]}