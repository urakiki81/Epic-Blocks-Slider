{"version":3,"sources":["@wordpress/date/src/index.js"],"names":["WP_ZONE","VALID_UTC_OFFSET","settings","l10n","locale","months","monthsShort","weekdays","weekdaysShort","meridiem","am","pm","AM","PM","relative","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","formats","time","date","datetime","datetimeAbbreviated","timezone","offset","string","abbr","setSettings","dateSettings","currentLocale","momentLib","updateLocale","parentLocale","hour","minute","isLowercase","longDateFormat","LT","LTS","L","LL","LLL","LLLL","relativeTime","setupWPTimezone","__experimentalGetSettings","tz","add","pack","name","abbrs","untils","offsets","MINUTE_IN_SECONDS","HOUR_IN_MINUTES","HOUR_IN_SECONDS","formatMap","D","j","l","N","S","momentDate","num","format","withOrdinal","replace","w","z","parseInt","W","F","n","t","daysInMonth","isLeapYear","o","Y","a","A","B","timezoned","utcOffset","seconds","minutes","hours","g","G","H","i","u","v","e","I","isDST","O","P","T","Z","sign","parts","substring","split","c","r","U","dateFormat","dateValue","Date","char","newFormat","length","push","join","dateMoment","buildMoment","gmdate","utc","dateI18n","gmdateI18n","undefined","isInTheFuture","now","momentObject","isAfter","getDate","dateString","toDate","isUTCOffset","test"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport momentLib from 'moment';\nimport 'moment-timezone/moment-timezone';\nimport 'moment-timezone/moment-timezone-utils';\n\n/** @typedef {import('moment').Moment} Moment */\n\nconst WP_ZONE = 'WP';\n\n// This regular expression tests positive for UTC offsets as described in ISO 8601.\n// See: https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\nconst VALID_UTC_OFFSET = /^[+-][0-1][0-9](:?[0-9][0-9])?$/;\n\n// Changes made here will likely need to be made in `lib/client-assets.php` as\n// well because it uses the `setSettings()` function to change these settings.\nlet settings = {\n\tl10n: {\n\t\tlocale: 'en',\n\t\tmonths: [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December',\n\t\t],\n\t\tmonthsShort: [\n\t\t\t'Jan',\n\t\t\t'Feb',\n\t\t\t'Mar',\n\t\t\t'Apr',\n\t\t\t'May',\n\t\t\t'Jun',\n\t\t\t'Jul',\n\t\t\t'Aug',\n\t\t\t'Sep',\n\t\t\t'Oct',\n\t\t\t'Nov',\n\t\t\t'Dec',\n\t\t],\n\t\tweekdays: [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Tuesday',\n\t\t\t'Wednesday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday',\n\t\t],\n\t\tweekdaysShort: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ],\n\t\tmeridiem: { am: 'am', pm: 'pm', AM: 'AM', PM: 'PM' },\n\t\trelative: {\n\t\t\tfuture: '%s from now',\n\t\t\tpast: '%s ago',\n\t\t\ts: 'a few seconds',\n\t\t\tss: '%d seconds',\n\t\t\tm: 'a minute',\n\t\t\tmm: '%d minutes',\n\t\t\th: 'an hour',\n\t\t\thh: '%d hours',\n\t\t\td: 'a day',\n\t\t\tdd: '%d days',\n\t\t\tM: 'a month',\n\t\t\tMM: '%d months',\n\t\t\ty: 'a year',\n\t\t\tyy: '%d years',\n\t\t},\n\t},\n\tformats: {\n\t\ttime: 'g: i a',\n\t\tdate: 'F j, Y',\n\t\tdatetime: 'F j, Y g: i a',\n\t\tdatetimeAbbreviated: 'M j, Y g: i a',\n\t},\n\ttimezone: { offset: '0', string: '', abbr: '' },\n};\n\n/**\n * Adds a locale to moment, using the format supplied by `wp_localize_script()`.\n *\n * @param {Object} dateSettings Settings, including locale data.\n */\nexport function setSettings( dateSettings ) {\n\tsettings = dateSettings;\n\n\t// Backup and restore current locale.\n\tconst currentLocale = momentLib.locale();\n\tmomentLib.updateLocale( dateSettings.l10n.locale, {\n\t\t// Inherit anything missing from the default locale.\n\t\tparentLocale: currentLocale,\n\t\tmonths: dateSettings.l10n.months,\n\t\tmonthsShort: dateSettings.l10n.monthsShort,\n\t\tweekdays: dateSettings.l10n.weekdays,\n\t\tweekdaysShort: dateSettings.l10n.weekdaysShort,\n\t\tmeridiem( hour, minute, isLowercase ) {\n\t\t\tif ( hour < 12 ) {\n\t\t\t\treturn isLowercase\n\t\t\t\t\t? dateSettings.l10n.meridiem.am\n\t\t\t\t\t: dateSettings.l10n.meridiem.AM;\n\t\t\t}\n\t\t\treturn isLowercase\n\t\t\t\t? dateSettings.l10n.meridiem.pm\n\t\t\t\t: dateSettings.l10n.meridiem.PM;\n\t\t},\n\t\tlongDateFormat: {\n\t\t\tLT: dateSettings.formats.time,\n\t\t\tLTS: null,\n\t\t\tL: null,\n\t\t\tLL: dateSettings.formats.date,\n\t\t\tLLL: dateSettings.formats.datetime,\n\t\t\tLLLL: null,\n\t\t},\n\t\t// From human_time_diff?\n\t\t// Set to `(number, withoutSuffix, key, isFuture) => {}` instead.\n\t\trelativeTime: dateSettings.l10n.relative,\n\t} );\n\tmomentLib.locale( currentLocale );\n\n\tsetupWPTimezone();\n}\n\n/**\n * Returns the currently defined date settings.\n *\n * @return {Object} Settings, including locale data.\n */\nexport function __experimentalGetSettings() {\n\treturn settings;\n}\n\nfunction setupWPTimezone() {\n\t// Create WP timezone based off dateSettings.\n\tmomentLib.tz.add(\n\t\tmomentLib.tz.pack( {\n\t\t\tname: WP_ZONE,\n\t\t\tabbrs: [ WP_ZONE ],\n\t\t\tuntils: [ null ],\n\t\t\toffsets: [ -settings.timezone.offset * 60 || 0 ],\n\t\t} )\n\t);\n}\n\n// Date constants.\n/**\n * Number of seconds in one minute.\n *\n * @type {number}\n */\nconst MINUTE_IN_SECONDS = 60;\n/**\n * Number of minutes in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_MINUTES = 60;\n/**\n * Number of seconds in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;\n\n/**\n * Map of PHP formats to Moment.js formats.\n *\n * These are used internally by {@link wp.date.format}, and are either\n * a string representing the corresponding Moment.js format code, or a\n * function which returns the formatted string.\n *\n * This should only be used through {@link wp.date.format}, not\n * directly.\n *\n * @type {Object}\n */\nconst formatMap = {\n\t// Day\n\td: 'DD',\n\tD: 'ddd',\n\tj: 'D',\n\tl: 'dddd',\n\tN: 'E',\n\n\t/**\n\t * Gets the ordinal suffix.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tS( momentDate ) {\n\t\t// Do - D\n\t\tconst num = momentDate.format( 'D' );\n\t\tconst withOrdinal = momentDate.format( 'Do' );\n\t\treturn withOrdinal.replace( num, '' );\n\t},\n\n\tw: 'd',\n\t/**\n\t * Gets the day of the year (zero-indexed).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tz( momentDate ) {\n\t\t// DDD - 1\n\t\treturn '' + parseInt( momentDate.format( 'DDD' ), 10 ) - 1;\n\t},\n\n\t// Week\n\tW: 'W',\n\n\t// Month\n\tF: 'MMMM',\n\tm: 'MM',\n\tM: 'MMM',\n\tn: 'M',\n\t/**\n\t * Gets the days in the month.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tt( momentDate ) {\n\t\treturn momentDate.daysInMonth();\n\t},\n\n\t// Year\n\t/**\n\t * Gets whether the current year is a leap year.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tL( momentDate ) {\n\t\treturn momentDate.isLeapYear() ? '1' : '0';\n\t},\n\to: 'GGGG',\n\tY: 'YYYY',\n\ty: 'YY',\n\n\t// Time\n\ta: 'a',\n\tA: 'A',\n\t/**\n\t * Gets the current time in Swatch Internet Time (.beats).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tB( momentDate ) {\n\t\tconst timezoned = momentLib( momentDate ).utcOffset( 60 );\n\t\tconst seconds = parseInt( timezoned.format( 's' ), 10 ),\n\t\t\tminutes = parseInt( timezoned.format( 'm' ), 10 ),\n\t\t\thours = parseInt( timezoned.format( 'H' ), 10 );\n\t\treturn parseInt(\n\t\t\t( seconds +\n\t\t\t\tminutes * MINUTE_IN_SECONDS +\n\t\t\t\thours * HOUR_IN_SECONDS ) /\n\t\t\t\t86.4,\n\t\t\t10\n\t\t);\n\t},\n\tg: 'h',\n\tG: 'H',\n\th: 'hh',\n\tH: 'HH',\n\ti: 'mm',\n\ts: 'ss',\n\tu: 'SSSSSS',\n\tv: 'SSS',\n\t// Timezone\n\te: 'zz',\n\t/**\n\t * Gets whether the timezone is in DST currently.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tI( momentDate ) {\n\t\treturn momentDate.isDST() ? '1' : '0';\n\t},\n\tO: 'ZZ',\n\tP: 'Z',\n\tT: 'z',\n\t/**\n\t * Gets the timezone offset in seconds.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tZ( momentDate ) {\n\t\t// Timezone offset in seconds.\n\t\tconst offset = momentDate.format( 'Z' );\n\t\tconst sign = offset[ 0 ] === '-' ? -1 : 1;\n\t\tconst parts = offset.substring( 1 ).split( ':' );\n\t\treturn (\n\t\t\tsign *\n\t\t\t( parts[ 0 ] * HOUR_IN_MINUTES + parts[ 1 ] ) *\n\t\t\tMINUTE_IN_SECONDS\n\t\t);\n\t},\n\t// Full date/time\n\tc: 'YYYY-MM-DDTHH:mm:ssZ', // .toISOString\n\tr: 'ddd, D MMM YYYY HH:mm:ss ZZ',\n\tU: 'X',\n};\n\n/**\n * Formats a date. Does not alter the date's timezone.\n *\n * @param {string}                  dateFormat PHP-style formatting string.\n *                                             See php.net/date.\n * @param {Date|string|Moment|null} dateValue  Date object or string,\n *                                             parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function format( dateFormat, dateValue = new Date() ) {\n\tlet i, char;\n\tlet newFormat = [];\n\tconst momentDate = momentLib( dateValue );\n\tfor ( i = 0; i < dateFormat.length; i++ ) {\n\t\tchar = dateFormat[ i ];\n\t\t// Is this an escape?\n\t\tif ( '\\\\' === char ) {\n\t\t\t// Add next character, then move on.\n\t\t\ti++;\n\t\t\tnewFormat.push( '[' + dateFormat[ i ] + ']' );\n\t\t\tcontinue;\n\t\t}\n\t\tif ( char in formatMap ) {\n\t\t\tif ( typeof formatMap[ char ] !== 'string' ) {\n\t\t\t\t// If the format is a function, call it.\n\t\t\t\tnewFormat.push( '[' + formatMap[ char ]( momentDate ) + ']' );\n\t\t\t} else {\n\t\t\t\t// Otherwise, add as a formatting string.\n\t\t\t\tnewFormat.push( formatMap[ char ] );\n\t\t\t}\n\t\t} else {\n\t\t\tnewFormat.push( '[' + char + ']' );\n\t\t}\n\t}\n\t// Join with [] between to separate characters, and replace\n\t// unneeded separators with static text.\n\tnewFormat = newFormat.join( '[]' );\n\treturn momentDate.format( newFormat );\n}\n\n/**\n * Formats a date (like `date()` in PHP).\n *\n * @param {string}                  dateFormat PHP-style formatting string.\n *                                             See php.net/date.\n * @param {Date|string|Moment|null} dateValue  Date object or string, parsable\n *                                             by moment.js.\n * @param {string|number|null}      timezone   Timezone to output result in or a\n *                                             UTC offset. Defaults to timezone from\n *                                             site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date in English.\n */\nexport function date( dateFormat, dateValue = new Date(), timezone ) {\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `date()` in PHP), in the UTC timezone.\n *\n * @param {string}                  dateFormat PHP-style formatting string.\n *                                             See php.net/date.\n * @param {Date|string|Moment|null} dateValue  Date object or string,\n *                                             parsable by moment.js.\n *\n * @return {string} Formatted date in English.\n */\nexport function gmdate( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale.\n *\n * Backward Compatibility Notice: if `timezone` is set to `true`, the function\n * behaves like `gmdateI18n`.\n *\n * @param {string}                     dateFormat PHP-style formatting string.\n *                                                See php.net/date.\n * @param {Date|string|Moment|null}    dateValue  Date object or string, parsable by\n *                                                moment.js.\n * @param {string|number|boolean|null} timezone   Timezone to output result in or a\n *                                                UTC offset. Defaults to timezone from\n *                                                site. Notice: `boolean` is effectively\n *                                                deprecated, but still supported for\n *                                                backward compatibility reasons.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date.\n */\nexport function dateI18n( dateFormat, dateValue = new Date(), timezone ) {\n\tif ( true === timezone ) {\n\t\treturn gmdateI18n( dateFormat, dateValue );\n\t}\n\n\tif ( false === timezone ) {\n\t\ttimezone = undefined;\n\t}\n\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale\n * and using the UTC timezone.\n *\n * @param {string}                  dateFormat PHP-style formatting string.\n *                                             See php.net/date.\n * @param {Date|string|Moment|null} dateValue  Date object or string,\n *                                             parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function gmdateI18n( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Check whether a date is considered in the future according to the WordPress settings.\n *\n * @param {string} dateValue Date String or Date object in the Defined WP Timezone.\n *\n * @return {boolean} Is in the future.\n */\nexport function isInTheFuture( dateValue ) {\n\tconst now = momentLib.tz( WP_ZONE );\n\tconst momentObject = momentLib.tz( dateValue, WP_ZONE );\n\n\treturn momentObject.isAfter( now );\n}\n\n/**\n * Create and return a JavaScript Date Object from a date string in the WP timezone.\n *\n * @param {string?} dateString Date formatted in the WP timezone.\n *\n * @return {Date} Date\n */\nexport function getDate( dateString ) {\n\tif ( ! dateString ) {\n\t\treturn momentLib.tz( WP_ZONE ).toDate();\n\t}\n\n\treturn momentLib.tz( dateString, WP_ZONE ).toDate();\n}\n\n/**\n * Creates a moment instance using the given timezone or, if none is provided, using global settings.\n *\n * @param {Date|string|Moment|null} dateValue Date object or string, parsable\n *                                            by moment.js.\n * @param {string|number|null}      timezone  Timezone to output result in or a\n *                                            UTC offset. Defaults to timezone from\n *                                            site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {Moment} a moment instance.\n */\nfunction buildMoment( dateValue, timezone = '' ) {\n\tconst dateMoment = momentLib( dateValue );\n\n\tif ( timezone && ! isUTCOffset( timezone ) ) {\n\t\treturn dateMoment.tz( timezone );\n\t}\n\n\tif ( timezone && isUTCOffset( timezone ) ) {\n\t\treturn dateMoment.utcOffset( timezone );\n\t}\n\n\tif ( settings.timezone.string ) {\n\t\treturn dateMoment.tz( settings.timezone.string );\n\t}\n\n\treturn dateMoment.utcOffset( settings.timezone.offset );\n}\n\n/**\n * Returns whether a certain UTC offset is valid or not.\n *\n * @param {number|string} offset a UTC offset.\n *\n * @return {boolean} whether a certain UTC offset is valid or not.\n */\nfunction isUTCOffset( offset ) {\n\tif ( 'number' === typeof offset ) {\n\t\treturn true;\n\t}\n\n\treturn VALID_UTC_OFFSET.test( offset );\n}\n\nsetupWPTimezone();\n"]}