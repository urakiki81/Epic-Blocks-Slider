{"version":3,"sources":["@wordpress/api-fetch/src/index.js"],"names":["DEFAULT_HEADERS","Accept","DEFAULT_OPTIONS","credentials","middlewares","userLocaleMiddleware","namespaceEndpointMiddleware","httpV1Middleware","fetchAllMiddleware","registerMiddleware","middleware","unshift","checkStatus","response","status","defaultFetchHandler","nextOptions","url","path","data","parse","remainingOptions","body","headers","JSON","stringify","responsePromise","window","fetch","then","value","Promise","resolve","catch","code","message","fetchHandler","setFetchHandler","newFetchHandler","apiFetch","options","enhancedHandler","reduceRight","next","workingOptions","error","reject","nonceEndpoint","text","nonceMiddleware","nonce","use","createNonceMiddleware","createPreloadingMiddleware","createRootURLMiddleware","mediaUploadMiddleware"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport {\n\tparseResponseAndNormalizeError,\n\tparseAndThrowError,\n} from './utils/response';\n\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_HEADERS = {\n\t// The backend uses the Accept header as a condition for considering an\n\t// incoming request as a REST request.\n\t//\n\t// See: https://core.trac.wordpress.org/ticket/44534\n\tAccept: 'application/json, */*;q=0.1',\n};\n\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_OPTIONS = {\n\tcredentials: 'include',\n};\n\nconst middlewares = [\n\tuserLocaleMiddleware,\n\tnamespaceEndpointMiddleware,\n\thttpV1Middleware,\n\tfetchAllMiddleware,\n];\n\nfunction registerMiddleware( middleware ) {\n\tmiddlewares.unshift( middleware );\n}\n\nconst checkStatus = ( response ) => {\n\tif ( response.status >= 200 && response.status < 300 ) {\n\t\treturn response;\n\t}\n\n\tthrow response;\n};\n\nconst defaultFetchHandler = ( nextOptions ) => {\n\tconst { url, path, data, parse = true, ...remainingOptions } = nextOptions;\n\tlet { body, headers } = nextOptions;\n\n\t// Merge explicitly-provided headers with default values.\n\theaders = { ...DEFAULT_HEADERS, ...headers };\n\n\t// The `data` property is a shorthand for sending a JSON body.\n\tif ( data ) {\n\t\tbody = JSON.stringify( data );\n\t\theaders[ 'Content-Type' ] = 'application/json';\n\t}\n\n\tconst responsePromise = window.fetch( url || path, {\n\t\t...DEFAULT_OPTIONS,\n\t\t...remainingOptions,\n\t\tbody,\n\t\theaders,\n\t} );\n\n\treturn (\n\t\tresponsePromise\n\t\t\t// Return early if fetch errors. If fetch error, there is most likely no\n\t\t\t// network connection. Unfortunately fetch just throws a TypeError and\n\t\t\t// the message might depend on the browser.\n\t\t\t.then(\n\t\t\t\t( value ) =>\n\t\t\t\t\tPromise.resolve( value )\n\t\t\t\t\t\t.then( checkStatus )\n\t\t\t\t\t\t.catch( ( response ) =>\n\t\t\t\t\t\t\tparseAndThrowError( response, parse )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then( ( response ) =>\n\t\t\t\t\t\t\tparseResponseAndNormalizeError( response, parse )\n\t\t\t\t\t\t),\n\t\t\t\t() => {\n\t\t\t\t\tthrow {\n\t\t\t\t\t\tcode: 'fetch_error',\n\t\t\t\t\t\tmessage: __( 'You are probably offline.' ),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t)\n\t);\n};\n\nlet fetchHandler = defaultFetchHandler;\n\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {Function} newFetchHandler The new fetch handler\n */\nfunction setFetchHandler( newFetchHandler ) {\n\tfetchHandler = newFetchHandler;\n}\n\nfunction apiFetch( options ) {\n\t// creates a nested function chain that calls all middlewares and finally the `fetchHandler`,\n\t// converting `middlewares = [ m1, m2, m3 ]` into:\n\t// ```\n\t// opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );\n\t// ```\n\tconst enhancedHandler = middlewares.reduceRight( ( next, middleware ) => {\n\t\treturn ( workingOptions ) => middleware( workingOptions, next );\n\t}, fetchHandler );\n\n\treturn enhancedHandler( options ).catch( ( error ) => {\n\t\tif ( error.code !== 'rest_cookie_invalid_nonce' ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\n\t\t// If the nonce is invalid, refresh it and try again.\n\t\treturn window\n\t\t\t.fetch( apiFetch.nonceEndpoint )\n\t\t\t.then( checkStatus )\n\t\t\t.then( ( data ) => data.text() )\n\t\t\t.then( ( text ) => {\n\t\t\t\tapiFetch.nonceMiddleware.nonce = text;\n\t\t\t\treturn apiFetch( options );\n\t\t\t} );\n\t} );\n}\n\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\n\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\n\nexport default apiFetch;\n"]}