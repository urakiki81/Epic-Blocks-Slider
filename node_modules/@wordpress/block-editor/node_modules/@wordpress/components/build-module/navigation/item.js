import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
import { noop } from 'lodash';
/**
 * WordPress dependencies
 */

import { Icon, chevronRight } from '@wordpress/icons';
/**
 * Internal dependencies
 */

import Button from '../button';
import { useNavigationContext } from './context';
import { ItemBadgeUI, ItemTitleUI, ItemUI } from './styles/navigation-styles';
export default function NavigationItem(_ref) {
  var badge = _ref.badge,
      children = _ref.children,
      className = _ref.className,
      href = _ref.href,
      item = _ref.item,
      navigateToMenu = _ref.navigateToMenu,
      _ref$onClick = _ref.onClick,
      onClick = _ref$onClick === void 0 ? noop : _ref$onClick,
      title = _ref.title,
      props = _objectWithoutProperties(_ref, ["badge", "children", "className", "href", "item", "navigateToMenu", "onClick", "title"]);

  var _useNavigationContext = useNavigationContext(),
      activeItem = _useNavigationContext.activeItem,
      setActiveItem = _useNavigationContext.setActiveItem,
      setActiveMenu = _useNavigationContext.setActiveMenu;

  var classes = classnames('components-navigation__item', className, {
    'is-active': item && activeItem === item
  });

  var onItemClick = function onItemClick() {
    if (navigateToMenu) {
      setActiveMenu(navigateToMenu);
    } else if (!href) {
      setActiveItem(item);
    }

    onClick();
  };

  return createElement(ItemUI, {
    className: classes
  }, createElement(Button, _extends({
    href: href,
    onClick: onItemClick
  }, props), title && createElement(ItemTitleUI, {
    className: "components-navigation__item-title",
    variant: "body.small",
    as: "span"
  }, title), children, badge && createElement(ItemBadgeUI, {
    className: "components-navigation__item-badge"
  }, badge), navigateToMenu && createElement(Icon, {
    icon: chevronRight
  })));
}
//# sourceMappingURL=item.js.map