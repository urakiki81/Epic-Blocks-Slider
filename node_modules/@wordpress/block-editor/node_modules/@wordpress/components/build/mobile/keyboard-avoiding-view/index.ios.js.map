{"version":3,"sources":["@wordpress/components/src/mobile/keyboard-avoiding-view/index.ios.js"],"names":["AnimatedKeyboardAvoidingView","Animated","createAnimatedComponent","IOSKeyboardAvoidingView","MIN_HEIGHT","KeyboardAvoidingView","parentHeight","style","withAnimatedHeight","otherProps","resizeObserver","sizes","isKeyboardOpen","setIsKeyboardOpen","safeAreaBottomInset","setSafeAreaBottomInset","height","animatedHeight","Value","current","Dimensions","get","fullHeight","keyboardVerticalOffset","SafeArea","getSafeAreaInsetsForRootView","then","safeAreaInsets","bottom","addEventListener","onSafeAreaInsetsUpdate","Keyboard","addListener","onKeyboardWillShow","onKeyboardWillHide","removeEventListener","removeListener","endCoordinates","setValue","duration","startCoordinates","animatedListenerId","value","timing","toValue","useNativeDriver","start","marginBottom","top","styles","animatedChildStyle","defaultChildStyle","children"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tKeyboardAvoidingView as IOSKeyboardAvoidingView,\n\tAnimated,\n\tKeyboard,\n\tDimensions,\n\tView,\n} from 'react-native';\nimport SafeArea from 'react-native-safe-area';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { useResizeObserver } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\n\nconst AnimatedKeyboardAvoidingView = Animated.createAnimatedComponent(\n\tIOSKeyboardAvoidingView\n);\n\nconst MIN_HEIGHT = 44;\n\nexport const KeyboardAvoidingView = ( {\n\tparentHeight,\n\tstyle,\n\twithAnimatedHeight = false,\n\t...otherProps\n} ) => {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ isKeyboardOpen, setIsKeyboardOpen ] = useState( false );\n\tconst [ safeAreaBottomInset, setSafeAreaBottomInset ] = useState( 0 );\n\tconst { height = 0 } = sizes || {};\n\n\tconst animatedHeight = useRef( new Animated.Value( MIN_HEIGHT ) ).current;\n\n\tconst { height: fullHeight } = Dimensions.get( 'window' );\n\tconst keyboardVerticalOffset = fullHeight - parentHeight;\n\n\tuseEffect( () => {\n\t\tSafeArea.getSafeAreaInsetsForRootView().then(\n\t\t\t( { safeAreaInsets } ) => {\n\t\t\t\tsetSafeAreaBottomInset( safeAreaInsets.bottom );\n\t\t\t}\n\t\t);\n\t\tSafeArea.addEventListener(\n\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\tonSafeAreaInsetsUpdate\n\t\t);\n\t\tKeyboard.addListener( 'keyboardWillShow', onKeyboardWillShow );\n\t\tKeyboard.addListener( 'keyboardWillHide', onKeyboardWillHide );\n\n\t\treturn () => {\n\t\t\tSafeArea.removeEventListener(\n\t\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\t\tonSafeAreaInsetsUpdate\n\t\t\t);\n\t\t\tKeyboard.removeListener( 'keyboardWillShow', onKeyboardWillShow );\n\t\t\tKeyboard.removeListener( 'keyboardWillHide', onKeyboardWillHide );\n\t\t};\n\t}, [] );\n\n\tfunction onSafeAreaInsetsUpdate( { safeAreaInsets } ) {\n\t\tsetSafeAreaBottomInset( safeAreaInsets.bottom );\n\t}\n\n\tfunction onKeyboardWillShow( { endCoordinates } ) {\n\t\tsetIsKeyboardOpen( true );\n\t\tanimatedHeight.setValue( endCoordinates.height + MIN_HEIGHT );\n\t}\n\n\tfunction onKeyboardWillHide( { duration, startCoordinates } ) {\n\t\tconst animatedListenerId = animatedHeight.addListener(\n\t\t\t( { value } ) => {\n\t\t\t\tif ( value < startCoordinates.height / 3 ) {\n\t\t\t\t\tsetIsKeyboardOpen( false );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tAnimated.timing( animatedHeight, {\n\t\t\ttoValue: MIN_HEIGHT,\n\t\t\tduration,\n\t\t\tuseNativeDriver: false,\n\t\t} ).start( () => {\n\t\t\tanimatedHeight.removeListener( animatedListenerId );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<AnimatedKeyboardAvoidingView\n\t\t\t{ ...otherProps }\n\t\t\tbehavior=\"padding\"\n\t\t\tkeyboardVerticalOffset={ keyboardVerticalOffset }\n\t\t\tstyle={\n\t\t\t\twithAnimatedHeight\n\t\t\t\t\t? [\n\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theight: animatedHeight,\n\t\t\t\t\t\t\t\tmarginBottom: isKeyboardOpen\n\t\t\t\t\t\t\t\t\t? -safeAreaBottomInset\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: style\n\t\t\t}\n\t\t>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\t{\n\t\t\t\t\t\ttop: -height + MIN_HEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\tstyles.animatedChildStyle,\n\t\t\t\t\t! withAnimatedHeight && styles.defaultChildStyle,\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ resizeObserver }\n\t\t\t\t{ otherProps.children }\n\t\t\t</View>\n\t\t</AnimatedKeyboardAvoidingView>\n\t);\n};\n\nexport default KeyboardAvoidingView;\n"]}