{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-list-item.native.js"],"names":["View","Component","withSelect","compose","ReadableContentView","WIDE_ALIGNMENTS","ALIGNMENT_BREAKPOINTS","BlockListBlock","BlockInsertionPoint","styles","stretchStyle","flex","BlockListItem","arguments","onLayout","bind","state","blockWidth","nativeEvent","layout","width","setState","props","blockAlignment","marginHorizontal","parentBlockAlignment","alignments","full","wide","medium","readableContentViewStyle","hasParents","isFullWidth","fullAlignment","paddingHorizontal","fullAlignmentPadding","paddingLeft","clientId","isReadOnly","shouldShowInsertionPointBefore","shouldShowInsertionPointAfter","contentResizeMode","shouldShowInnerBlockAppender","restProps","getContentStyles","getMarginHorizontal","select","rootClientId","isStackedHorizontally","getBlockOrder","getBlockInsertionPoint","isBlockInsertionPointVisible","getSettings","getBlockParents","__unstableGetBlockWithoutInnerBlocks","blockClientIds","insertionPoint","blockInsertionPointIsVisible","length","index","readOnly","block","attributes","align","parents","parentBlock"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport {\n\tReadableContentView,\n\tWIDE_ALIGNMENTS,\n\tALIGNMENT_BREAKPOINTS,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockListBlock from './block';\nimport BlockInsertionPoint from './insertion-point';\nimport styles from './block-list-item.native.scss';\n\nconst stretchStyle = {\n\tflex: 1,\n};\n\nexport class BlockListItem extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onLayout = this.onLayout.bind( this );\n\n\t\tthis.state = {\n\t\t\tblockWidth: 0,\n\t\t};\n\t}\n\n\tonLayout( { nativeEvent } ) {\n\t\tconst { layout } = nativeEvent;\n\t\tconst { blockWidth } = this.state;\n\n\t\tif ( blockWidth !== layout.width ) {\n\t\t\tthis.setState( { blockWidth: layout.width } );\n\t\t}\n\t}\n\n\tgetMarginHorizontal() {\n\t\tconst {\n\t\t\tblockAlignment,\n\t\t\tmarginHorizontal,\n\t\t\tparentBlockAlignment,\n\t\t} = this.props;\n\t\tconst { blockWidth } = this.state;\n\n\t\tif ( blockAlignment === WIDE_ALIGNMENTS.alignments.full ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( blockAlignment === WIDE_ALIGNMENTS.alignments.wide ) {\n\t\t\treturn marginHorizontal;\n\t\t}\n\n\t\tif (\n\t\t\tparentBlockAlignment === WIDE_ALIGNMENTS.alignments.full &&\n\t\t\tblockWidth <= ALIGNMENT_BREAKPOINTS.medium\n\t\t) {\n\t\t\treturn marginHorizontal * 2;\n\t\t}\n\n\t\treturn marginHorizontal;\n\t}\n\n\tgetContentStyles( readableContentViewStyle ) {\n\t\tconst { blockAlignment, hasParents } = this.props;\n\t\tconst isFullWidth = blockAlignment === WIDE_ALIGNMENTS.alignments.full;\n\n\t\treturn [\n\t\t\treadableContentViewStyle,\n\t\t\tisFullWidth &&\n\t\t\t\t! hasParents && {\n\t\t\t\t\twidth: styles.fullAlignment.width,\n\t\t\t\t},\n\t\t\tisFullWidth &&\n\t\t\t\thasParents && {\n\t\t\t\t\tpaddingHorizontal: styles.fullAlignmentPadding.paddingLeft,\n\t\t\t\t},\n\t\t];\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tblockAlignment,\n\t\t\tclientId,\n\t\t\tisReadOnly,\n\t\t\tshouldShowInsertionPointBefore,\n\t\t\tshouldShowInsertionPointAfter,\n\t\t\tcontentResizeMode,\n\t\t\tshouldShowInnerBlockAppender,\n\t\t\t...restProps\n\t\t} = this.props;\n\t\tconst readableContentViewStyle =\n\t\t\tcontentResizeMode === 'stretch' && stretchStyle;\n\n\t\treturn (\n\t\t\t<ReadableContentView\n\t\t\t\talign={ blockAlignment }\n\t\t\t\tstyle={ readableContentViewStyle }\n\t\t\t>\n\t\t\t\t<View\n\t\t\t\t\tstyle={ this.getContentStyles( readableContentViewStyle ) }\n\t\t\t\t\tpointerEvents={ isReadOnly ? 'box-only' : 'auto' }\n\t\t\t\t\tonLayout={ this.onLayout }\n\t\t\t\t>\n\t\t\t\t\t{ shouldShowInsertionPointBefore && (\n\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t) }\n\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\tkey={ clientId }\n\t\t\t\t\t\tshowTitle={ false }\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t\tmarginHorizontal={ this.getMarginHorizontal() }\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! shouldShowInnerBlockAppender() &&\n\t\t\t\t\t\tshouldShowInsertionPointAfter && (\n\t\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t</ReadableContentView>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect(\n\t\t( select, { rootClientId, isStackedHorizontally, clientId } ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockInsertionPoint,\n\t\t\t\tisBlockInsertionPointVisible,\n\t\t\t\tgetSettings,\n\t\t\t\tgetBlockParents,\n\t\t\t\t__unstableGetBlockWithoutInnerBlocks,\n\t\t\t} = select( 'core/block-editor' );\n\n\t\t\tconst blockClientIds = getBlockOrder( rootClientId );\n\t\t\tconst insertionPoint = getBlockInsertionPoint();\n\t\t\tconst blockInsertionPointIsVisible = isBlockInsertionPointVisible();\n\t\t\tconst shouldShowInsertionPointBefore =\n\t\t\t\t! isStackedHorizontally &&\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if list is empty, show the insertion point (via the default appender)\n\t\t\t\t( blockClientIds.length === 0 ||\n\t\t\t\t\t// or if the insertion point is right before the denoted block\n\t\t\t\t\tblockClientIds[ insertionPoint.index ] === clientId );\n\n\t\t\tconst shouldShowInsertionPointAfter =\n\t\t\t\t! isStackedHorizontally &&\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if the insertion point is at the end of the list\n\t\t\t\tblockClientIds.length === insertionPoint.index &&\n\t\t\t\t// and the denoted block is the last one on the list, show the indicator at the end of the block\n\t\t\t\tblockClientIds[ insertionPoint.index - 1 ] === clientId;\n\n\t\t\tconst isReadOnly = getSettings().readOnly;\n\n\t\t\tconst block = __unstableGetBlockWithoutInnerBlocks( clientId );\n\t\t\tconst { attributes } = block || {};\n\t\t\tconst { align } = attributes || {};\n\t\t\tconst parents = getBlockParents( clientId, true );\n\t\t\tconst hasParents = !! parents.length;\n\t\t\tconst parentBlock = hasParents\n\t\t\t\t? __unstableGetBlockWithoutInnerBlocks( parents[ 0 ] )\n\t\t\t\t: {};\n\t\t\tconst { align: parentBlockAlignment } =\n\t\t\t\tparentBlock?.attributes || {};\n\n\t\t\treturn {\n\t\t\t\tshouldShowInsertionPointBefore,\n\t\t\t\tshouldShowInsertionPointAfter,\n\t\t\t\tisReadOnly,\n\t\t\t\thasParents,\n\t\t\t\tblockAlignment: align,\n\t\t\t\tparentBlockAlignment,\n\t\t\t};\n\t\t}\n\t),\n] )( BlockListItem );\n"]}