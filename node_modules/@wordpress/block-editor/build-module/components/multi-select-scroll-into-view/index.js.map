{"version":3,"sources":["@wordpress/block-editor/src/components/multi-select-scroll-into-view/index.js"],"names":["scrollIntoView","useEffect","useSelect","getScrollContainer","getBlockDOMNode","MultiSelectScrollIntoView","selector","select","getBlockSelectionEnd","hasMultiSelection","isMultiSelecting","selectionEnd","isMultiSelection","extentNode","scrollContainer","onlyScrollIfNeeded"],"mappings":"AAAA;;;AAGA,OAAOA,cAAP,MAA2B,sBAA3B;AAEA;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA;;;;AAGA,SAASC,eAAT,QAAgC,iBAAhC;AAEA;;;;;AAIA,eAAe,SAASC,yBAAT,GAAqC;AACnD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAEC,MAAF,EAAc;AAAA,kBAK1BA,MAAM,CAAE,mBAAF,CALoB;AAAA,QAE7BC,oBAF6B,WAE7BA,oBAF6B;AAAA,QAG7BC,iBAH6B,WAG7BA,iBAH6B;AAAA,QAI7BC,gBAJ6B,WAI7BA,gBAJ6B;;AAO9B,WAAO;AACNC,MAAAA,YAAY,EAAEH,oBAAoB,EAD5B;AAENI,MAAAA,gBAAgB,EAAEH,iBAAiB,EAF7B;AAGNC,MAAAA,gBAAgB,EAAEA,gBAAgB;AAH5B,KAAP;AAKA,GAZD;;AADmD,mBAcUR,SAAS,CACrEI,QADqE,EAErE,EAFqE,CAdnB;AAAA,MAc3CM,gBAd2C,cAc3CA,gBAd2C;AAAA,MAczBD,YAdyB,cAczBA,YAdyB;AAAA,MAcXD,gBAdW,cAcXA,gBAdW;;AAmBnDT,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEU,YAAF,IAAkBD,gBAAlB,IAAsC,CAAEE,gBAA7C,EAAgE;AAC/D;AACA;;AAED,QAAMC,UAAU,GAAGT,eAAe,CAAEO,YAAF,CAAlC;;AAEA,QAAK,CAAEE,UAAP,EAAoB;AACnB;AACA;;AAED,QAAMC,eAAe,GAAGX,kBAAkB,CAAEU,UAAF,CAA1C,CAXgB,CAahB;AACA;;AACA,QAAK,CAAEC,eAAP,EAAyB;AACxB;AACA;;AAEDd,IAAAA,cAAc,CAAEa,UAAF,EAAcC,eAAd,EAA+B;AAC5CC,MAAAA,kBAAkB,EAAE;AADwB,KAA/B,CAAd;AAGA,GAtBQ,EAsBN,CAAEH,gBAAF,EAAoBD,YAApB,EAAkCD,gBAAlC,CAtBM,CAAT;AAwBA,SAAO,IAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport scrollIntoView from 'dom-scroll-into-view';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { getScrollContainer } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { getBlockDOMNode } from '../../utils/dom';\n\n/**\n * Scrolls the multi block selection end into view if not in view already. This\n * is important to do after selection by keyboard.\n */\nexport default function MultiSelectScrollIntoView() {\n\tconst selector = ( select ) => {\n\t\tconst {\n\t\t\tgetBlockSelectionEnd,\n\t\t\thasMultiSelection,\n\t\t\tisMultiSelecting,\n\t\t} = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tselectionEnd: getBlockSelectionEnd(),\n\t\t\tisMultiSelection: hasMultiSelection(),\n\t\t\tisMultiSelecting: isMultiSelecting(),\n\t\t};\n\t};\n\tconst { isMultiSelection, selectionEnd, isMultiSelecting } = useSelect(\n\t\tselector,\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( ! selectionEnd || isMultiSelecting || ! isMultiSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extentNode = getBlockDOMNode( selectionEnd );\n\n\t\tif ( ! extentNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst scrollContainer = getScrollContainer( extentNode );\n\n\t\t// If there's no scroll container, it follows that there's no scrollbar\n\t\t// and thus there's no need to try to scroll into view.\n\t\tif ( ! scrollContainer ) {\n\t\t\treturn;\n\t\t}\n\n\t\tscrollIntoView( extentNode, scrollContainer, {\n\t\t\tonlyScrollIfNeeded: true,\n\t\t} );\n\t}, [ isMultiSelection, selectionEnd, isMultiSelecting ] );\n\n\treturn null;\n}\n"]}