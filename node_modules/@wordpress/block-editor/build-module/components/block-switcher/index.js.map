{"version":3,"sources":["@wordpress/block-editor/src/components/block-switcher/index.js"],"names":["castArray","filter","mapKeys","orderBy","uniq","map","__","_n","sprintf","DropdownMenu","ToolbarButton","ToolbarGroup","ToolbarItem","MenuGroup","Popover","getBlockType","getPossibleBlockTransformations","switchToBlockType","cloneBlock","getBlockFromExample","Component","withSelect","withDispatch","compose","stack","BlockIcon","BlockStyles","BlockPreview","BlockTransformationsMenu","PreviewBlockPopover","hoveredBlock","hoveredClassName","hoveredBlockType","name","example","attributes","className","innerBlocks","BlockSwitcher","arguments","state","onHoverClassName","bind","setState","props","blocks","onTransform","inserterItems","hasBlockStyles","Array","isArray","length","itemsByName","possibleBlockTransformations","block","frecency","isSelectionOfSameType","icon","sourceBlockName","blockType","hasPossibleBlockTransformations","blockSwitcherLabel","toggleProps","position","isAlternate","orientation","onClose","clientId","select","clientIds","getBlocksByClientId","getBlockRootClientId","getInserterItems","getBlockStyles","rootClientId","firstBlock","styles","dispatch","ownProps","replaceBlocks"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, filter, mapKeys, orderBy, uniq, map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tToolbarButton,\n\tToolbarGroup,\n\tToolbarItem,\n\tMenuGroup,\n\tPopover,\n} from '@wordpress/components';\nimport {\n\tgetBlockType,\n\tgetPossibleBlockTransformations,\n\tswitchToBlockType,\n\tcloneBlock,\n\tgetBlockFromExample,\n} from '@wordpress/blocks';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { stack } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport BlockIcon from '../block-icon';\nimport BlockStyles from '../block-styles';\nimport BlockPreview from '../block-preview';\nimport BlockTransformationsMenu from './block-transformations-menu';\n\nfunction PreviewBlockPopover( { hoveredBlock, hoveredClassName } ) {\n\tconst hoveredBlockType = getBlockType( hoveredBlock.name );\n\treturn (\n\t\t<div className=\"block-editor-block-switcher__popover__preview__parent\">\n\t\t\t<div className=\"block-editor-block-switcher__popover__preview__container\">\n\t\t\t\t<Popover\n\t\t\t\t\tclassName=\"block-editor-block-switcher__preview__popover\"\n\t\t\t\t\tposition=\"bottom right\"\n\t\t\t\t\tfocusOnMount={ false }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"block-editor-block-switcher__preview\">\n\t\t\t\t\t\t<div className=\"block-editor-block-switcher__preview-title\">\n\t\t\t\t\t\t\t{ __( 'Preview' ) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<BlockPreview\n\t\t\t\t\t\t\tviewportWidth={ 500 }\n\t\t\t\t\t\t\tblocks={\n\t\t\t\t\t\t\t\thoveredBlockType.example\n\t\t\t\t\t\t\t\t\t? getBlockFromExample( hoveredBlock.name, {\n\t\t\t\t\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\t\t\t\t\t...hoveredBlockType.example\n\t\t\t\t\t\t\t\t\t\t\t\t\t.attributes,\n\t\t\t\t\t\t\t\t\t\t\t\tclassName: hoveredClassName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tinnerBlocks:\n\t\t\t\t\t\t\t\t\t\t\t\thoveredBlockType.example\n\t\t\t\t\t\t\t\t\t\t\t\t\t.innerBlocks,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t\t\t: cloneBlock( hoveredBlock, {\n\t\t\t\t\t\t\t\t\t\t\tclassName: hoveredClassName,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Popover>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport class BlockSwitcher extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\thoveredClassName: null,\n\t\t};\n\t\tthis.onHoverClassName = this.onHoverClassName.bind( this );\n\t}\n\n\tonHoverClassName( className ) {\n\t\tthis.setState( { hoveredClassName: className } );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tblocks,\n\t\t\tonTransform,\n\t\t\tinserterItems,\n\t\t\thasBlockStyles,\n\t\t} = this.props;\n\t\tconst { hoveredClassName } = this.state;\n\n\t\tif ( ! Array.isArray( blocks ) || ! blocks.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [ hoveredBlock ] = blocks;\n\t\tconst itemsByName = mapKeys( inserterItems, ( { name } ) => name );\n\t\tconst possibleBlockTransformations = orderBy(\n\t\t\tfilter(\n\t\t\t\tgetPossibleBlockTransformations( blocks ),\n\t\t\t\t( block ) => block && !! itemsByName[ block.name ]\n\t\t\t),\n\t\t\t( block ) => itemsByName[ block.name ].frecency,\n\t\t\t'desc'\n\t\t);\n\n\t\t// When selection consists of blocks of multiple types, display an\n\t\t// appropriate icon to communicate the non-uniformity.\n\t\tconst isSelectionOfSameType =\n\t\t\tuniq( map( blocks, 'name' ) ).length === 1;\n\n\t\tlet icon;\n\t\tif ( isSelectionOfSameType ) {\n\t\t\tconst sourceBlockName = hoveredBlock.name;\n\t\t\tconst blockType = getBlockType( sourceBlockName );\n\t\t\ticon = blockType.icon;\n\t\t} else {\n\t\t\ticon = stack;\n\t\t}\n\n\t\tconst hasPossibleBlockTransformations = !! possibleBlockTransformations.length;\n\n\t\tif ( ! hasBlockStyles && ! hasPossibleBlockTransformations ) {\n\t\t\treturn (\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclassName=\"block-editor-block-switcher__no-switcher-icon\"\n\t\t\t\t\t\ttitle={ __( 'Block icon' ) }\n\t\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t);\n\t\t}\n\n\t\tconst blockSwitcherLabel =\n\t\t\t1 === blocks.length\n\t\t\t\t? __( 'Change block type or style' )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t/* translators: %s: number of blocks. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'Change type of %d block',\n\t\t\t\t\t\t\t'Change type of %d blocks',\n\t\t\t\t\t\t\tblocks.length\n\t\t\t\t\t\t),\n\t\t\t\t\t\tblocks.length\n\t\t\t\t  );\n\n\t\treturn (\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarItem>\n\t\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher\"\n\t\t\t\t\t\t\tlabel={ blockSwitcherLabel }\n\t\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\t\tposition: 'bottom right',\n\t\t\t\t\t\t\t\tisAlternate: true,\n\t\t\t\t\t\t\t\tclassName:\n\t\t\t\t\t\t\t\t\t'block-editor-block-switcher__popover',\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__toggle\"\n\t\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttoggleProps={ toggleProps }\n\t\t\t\t\t\t\tmenuProps={ { orientation: 'both' } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ ( { onClose } ) =>\n\t\t\t\t\t\t\t\t( hasBlockStyles ||\n\t\t\t\t\t\t\t\t\thasPossibleBlockTransformations ) && (\n\t\t\t\t\t\t\t\t\t<div className=\"block-editor-block-switcher__container\">\n\t\t\t\t\t\t\t\t\t\t{ hasPossibleBlockTransformations && (\n\t\t\t\t\t\t\t\t\t\t\t<BlockTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__transforms__menugroup\"\n\t\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tonSelect={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonTransform( blocks, name );\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t{ hasBlockStyles && (\n\t\t\t\t\t\t\t\t\t\t\t<MenuGroup\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Styles' ) }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__styles__menugroup\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{ hoveredClassName !== null && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PreviewBlockPopover\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoveredBlock={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thoveredBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoveredClassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thoveredClassName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\t<BlockStyles\n\t\t\t\t\t\t\t\t\t\t\t\t\tclientId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoveredBlock.clientId\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSwitch={ onClose }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonHoverClassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onHoverClassName\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\titemRole=\"menuitem\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t) }\n\t\t\t\t</ToolbarItem>\n\t\t\t</ToolbarGroup>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { clientIds } ) => {\n\t\tconst {\n\t\t\tgetBlocksByClientId,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetInserterItems,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getBlockStyles } = select( 'core/blocks' );\n\t\tconst rootClientId = getBlockRootClientId(\n\t\t\tcastArray( clientIds )[ 0 ]\n\t\t);\n\t\tconst blocks = getBlocksByClientId( clientIds );\n\t\tconst firstBlock = blocks && blocks.length === 1 ? blocks[ 0 ] : null;\n\t\tconst styles = firstBlock && getBlockStyles( firstBlock.name );\n\t\treturn {\n\t\t\tblocks,\n\t\t\tinserterItems: getInserterItems( rootClientId ),\n\t\t\thasBlockStyles: styles && styles.length > 0,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tonTransform( blocks, name ) {\n\t\t\tdispatch( 'core/block-editor' ).replaceBlocks(\n\t\t\t\townProps.clientIds,\n\t\t\t\tswitchToBlockType( blocks, name )\n\t\t\t);\n\t\t},\n\t} ) )\n)( BlockSwitcher );\n"]}