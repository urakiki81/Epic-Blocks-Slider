{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/index.js"],"names":["classnames","useViewportMatch","forwardRef","useRef","useSelect","getBlockType","withBlockContentContext","ButtonBlockAppender","DefaultBlockAppender","useNestedSettingsUpdate","useInnerBlockTemplateSync","getBlockContext","BlockList","BlockContextProvider","useBlockEditContext","useBlockSync","UncontrolledInnerBlocks","props","clientId","allowedBlocks","template","templateLock","forwardedRef","templateInsertUpdatesSelection","captureToolbars","__experimentalCaptureToolbars","orientation","isSmallScreen","select","getBlock","isBlockSelected","hasSelectedInnerBlock","isNavigationMode","theBlock","block","hasOverlay","name","enableClickThrough","classes","blockList","blockType","providesContext","context","attributes","__experimentalTagName","ControlledInnerBlocks","ForwardedInnerBlocks","ref","fallbackRef","allProps","value","onChange","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, withBlockContentContext } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ButtonBlockAppender from './button-block-appender';\nimport DefaultBlockAppender from './default-block-appender';\nimport useNestedSettingsUpdate from './use-nested-settings-update';\nimport useInnerBlockTemplateSync from './use-inner-block-template-sync';\nimport getBlockContext from './get-block-context';\n\n/**\n * Internal dependencies\n */\nimport BlockList from '../block-list';\nimport { BlockContextProvider } from '../block-context';\nimport { useBlockEditContext } from '../block-edit/context';\nimport useBlockSync from '../provider/use-block-sync';\n\n/**\n * InnerBlocks is a component which allows a single block to have multiple blocks\n * as children. The UncontrolledInnerBlocks component is used whenever the inner\n * blocks are not controlled by another entity. In other words, it is normally\n * used for inner blocks in the post editor\n *\n * @param {Object} props The component props.\n */\nfunction UncontrolledInnerBlocks( props ) {\n\tconst {\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\tforwardedRef,\n\t\ttemplateInsertUpdatesSelection,\n\t\t__experimentalCaptureToolbars: captureToolbars,\n\t\torientation,\n\t} = props;\n\n\tconst isSmallScreen = useViewportMatch( 'medium', '<' );\n\n\tconst { hasOverlay, block, enableClickThrough } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlock,\n\t\t\tisBlockSelected,\n\t\t\thasSelectedInnerBlock,\n\t\t\tisNavigationMode,\n\t\t} = select( 'core/block-editor' );\n\t\tconst theBlock = getBlock( clientId );\n\t\treturn {\n\t\t\tblock: theBlock,\n\t\t\thasOverlay:\n\t\t\t\ttheBlock.name !== 'core/template' &&\n\t\t\t\t! isBlockSelected( clientId ) &&\n\t\t\t\t! hasSelectedInnerBlock( clientId, true ),\n\t\t\tenableClickThrough: isNavigationMode() || isSmallScreen,\n\t\t};\n\t} );\n\n\tuseNestedSettingsUpdate(\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplateLock,\n\t\tcaptureToolbars,\n\t\torientation\n\t);\n\n\tuseInnerBlockTemplateSync(\n\t\tclientId,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection\n\t);\n\n\tconst classes = classnames( {\n\t\t'has-overlay': enableClickThrough && hasOverlay,\n\t\t'is-capturing-toolbar': captureToolbars,\n\t} );\n\n\tlet blockList = (\n\t\t<BlockList\n\t\t\t{ ...props }\n\t\t\tref={ forwardedRef }\n\t\t\trootClientId={ clientId }\n\t\t\tclassName={ classes }\n\t\t/>\n\t);\n\n\t// Wrap context provider if (and only if) block has context to provide.\n\tconst blockType = getBlockType( block.name );\n\tif ( blockType && blockType.providesContext ) {\n\t\tconst context = getBlockContext( block.attributes, blockType );\n\n\t\tblockList = (\n\t\t\t<BlockContextProvider value={ context }>\n\t\t\t\t{ blockList }\n\t\t\t</BlockContextProvider>\n\t\t);\n\t}\n\n\tif ( props.__experimentalTagName ) {\n\t\treturn blockList;\n\t}\n\n\treturn <div className=\"block-editor-inner-blocks\">{ blockList }</div>;\n}\n\n/**\n * The controlled inner blocks component wraps the uncontrolled inner blocks\n * component with the blockSync hook. This keeps the innerBlocks of the block in\n * the block-editor store in sync with the blocks of the controlling entity. An\n * example of an inner block controller is a template part block, which provides\n * its own blocks from the template part entity data source.\n *\n * @param {Object} props The component props.\n */\nfunction ControlledInnerBlocks( props ) {\n\tuseBlockSync( props );\n\treturn <UncontrolledInnerBlocks { ...props } />;\n}\n\n/**\n * Wrapped InnerBlocks component which detects whether to use the controlled or\n * uncontrolled variations of the InnerBlocks component. This is the component\n * which should be used throughout the application.\n */\nconst ForwardedInnerBlocks = forwardRef( ( props, ref ) => {\n\tconst { clientId } = useBlockEditContext();\n\tconst fallbackRef = useRef();\n\n\tconst allProps = {\n\t\tclientId,\n\t\tforwardedRef: ref || fallbackRef,\n\t\t...props,\n\t};\n\n\t// Detects if the InnerBlocks should be controlled by an incoming value.\n\tif ( props.value && props.onChange ) {\n\t\treturn <ControlledInnerBlocks { ...allProps } />;\n\t}\n\treturn <UncontrolledInnerBlocks { ...allProps } />;\n} );\n\n// Expose default appender placeholders as components.\nForwardedInnerBlocks.DefaultBlockAppender = DefaultBlockAppender;\nForwardedInnerBlocks.ButtonBlockAppender = ButtonBlockAppender;\n\nForwardedInnerBlocks.Content = withBlockContentContext(\n\t( { BlockContent } ) => <BlockContent />\n);\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport default ForwardedInnerBlocks;\n"]}