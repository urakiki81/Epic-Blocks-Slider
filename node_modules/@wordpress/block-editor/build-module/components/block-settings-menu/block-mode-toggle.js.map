{"version":3,"sources":["@wordpress/block-editor/src/components/block-settings-menu/block-mode-toggle.js"],"names":["noop","__","MenuItem","getBlockType","hasBlockSupport","withSelect","withDispatch","compose","BlockModeToggle","blockType","mode","onToggleMode","small","isCodeEditingEnabled","label","select","clientId","getBlock","getBlockMode","getSettings","block","codeEditingEnabled","name","dispatch","onToggle","toggleBlockMode"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,SAASC,eAAT,OAMH;AAAA,MALHC,SAKG,QALHA,SAKG;AAAA,MAJHC,IAIG,QAJHA,IAIG;AAAA,MAHHC,YAGG,QAHHA,YAGG;AAAA,wBAFHC,KAEG;AAAA,MAFHA,KAEG,2BAFK,KAEL;AAAA,mCADHC,oBACG;AAAA,MADHA,oBACG,sCADoB,IACpB;;AACH,MACC,CAAET,eAAe,CAAEK,SAAF,EAAa,MAAb,EAAqB,IAArB,CAAjB,IACA,CAAEI,oBAFH,EAGE;AACD,WAAO,IAAP;AACA;;AAED,MAAMC,KAAK,GACVJ,IAAI,KAAK,QAAT,GAAoBT,EAAE,CAAE,cAAF,CAAtB,GAA2CA,EAAE,CAAE,eAAF,CAD9C;AAGA,SAAO,cAAC,QAAD;AAAU,IAAA,OAAO,EAAGU;AAApB,KAAqC,CAAEC,KAAF,IAAWE,KAAhD,CAAP;AACA;AAED,eAAeP,OAAO,CAAE,CACvBF,UAAU,CAAE,UAAEU,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBACSD,MAAM,CACrD,mBADqD,CADf;AAAA,MAC/BE,QAD+B,WAC/BA,QAD+B;AAAA,MACrBC,YADqB,WACrBA,YADqB;AAAA,MACPC,WADO,WACPA,WADO;;AAIvC,MAAMC,KAAK,GAAGH,QAAQ,CAAED,QAAF,CAAtB;AACA,MAAMH,oBAAoB,GAAGM,WAAW,GAAGE,kBAA3C;AAEA,SAAO;AACNX,IAAAA,IAAI,EAAEQ,YAAY,CAAEF,QAAF,CADZ;AAENP,IAAAA,SAAS,EAAEW,KAAK,GAAGjB,YAAY,CAAEiB,KAAK,CAACE,IAAR,CAAf,GAAgC,IAF1C;AAGNT,IAAAA,oBAAoB,EAApBA;AAHM,GAAP;AAKA,CAZS,CADa,EAcvBP,YAAY,CAAE,UAAEiB,QAAF;AAAA,6BAAcC,QAAd;AAAA,MAAcA,QAAd,+BAAyBxB,IAAzB;AAAA,MAA+BgB,QAA/B,SAA+BA,QAA/B;AAAA,SAAiD;AAC9DL,IAAAA,YAD8D,0BAC/C;AACdY,MAAAA,QAAQ,CAAE,mBAAF,CAAR,CAAgCE,eAAhC,CAAiDT,QAAjD;AACAQ,MAAAA,QAAQ;AACR;AAJ6D,GAAjD;AAAA,CAAF,CAdW,CAAF,CAAP,CAoBVhB,eApBU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem } from '@wordpress/components';\nimport { getBlockType, hasBlockSupport } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\nexport function BlockModeToggle( {\n\tblockType,\n\tmode,\n\tonToggleMode,\n\tsmall = false,\n\tisCodeEditingEnabled = true,\n} ) {\n\tif (\n\t\t! hasBlockSupport( blockType, 'html', true ) ||\n\t\t! isCodeEditingEnabled\n\t) {\n\t\treturn null;\n\t}\n\n\tconst label =\n\t\tmode === 'visual' ? __( 'Edit as HTML' ) : __( 'Edit visually' );\n\n\treturn <MenuItem onClick={ onToggleMode }>{ ! small && label }</MenuItem>;\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlock, getBlockMode, getSettings } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\t\tconst block = getBlock( clientId );\n\t\tconst isCodeEditingEnabled = getSettings().codeEditingEnabled;\n\n\t\treturn {\n\t\t\tmode: getBlockMode( clientId ),\n\t\t\tblockType: block ? getBlockType( block.name ) : null,\n\t\t\tisCodeEditingEnabled,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { onToggle = noop, clientId } ) => ( {\n\t\tonToggleMode() {\n\t\t\tdispatch( 'core/block-editor' ).toggleBlockMode( clientId );\n\t\t\tonToggle();\n\t\t},\n\t} ) ),\n] )( BlockModeToggle );\n"]}