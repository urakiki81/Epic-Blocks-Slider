{"version":3,"sources":["@wordpress/block-editor/src/components/block-patterns-list/index.js"],"names":["useMemo","parse","ENTER","SPACE","VisuallyHidden","useInstanceId","BlockPreview","BlockPattern","pattern","onClick","content","viewportWidth","blocks","instanceId","descriptionId","event","keyCode","title","description","undefined","BlockPatternPlaceholder","BlockPatternList","blockPatterns","shownPatterns","onClickPattern","map","isShown","includes","name"],"mappings":";;AAAA;;;AAGA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,qBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA;;;;AAGA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,SAASC,YAAT,OAA8C;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,QAAY,QAAZA,OAAY;AAAA,MACrCC,OADqC,GACVF,OADU,CACrCE,OADqC;AAAA,MAC5BC,aAD4B,GACVH,OADU,CAC5BG,aAD4B;AAE7C,MAAMC,MAAM,GAAGZ,OAAO,CAAE;AAAA,WAAMC,KAAK,CAAES,OAAF,CAAX;AAAA,GAAF,EAA0B,CAAEA,OAAF,CAA1B,CAAtB;AACA,MAAMG,UAAU,GAAGR,aAAa,CAAEE,YAAF,CAAhC;AACA,MAAMO,aAAa,gEAA0DD,UAA1D,CAAnB;AAEA,SACC;AACC,IAAA,SAAS,EAAC,wCADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,OAAO,EAAG;AAAA,aAAMJ,QAAO,CAAED,OAAF,EAAWI,MAAX,CAAb;AAAA,KAHX;AAIC,IAAA,SAAS,EAAG,mBAAEG,KAAF,EAAa;AACxB,UAAKb,KAAK,KAAKa,KAAK,CAACC,OAAhB,IAA2Bb,KAAK,KAAKY,KAAK,CAACC,OAAhD,EAA0D;AACzDP,QAAAA,QAAO,CAAED,OAAF,EAAWI,MAAX,CAAP;AACA;AACD,KARF;AASC,IAAA,QAAQ,EAAG,CATZ;AAUC,kBAAaJ,OAAO,CAACS,KAVtB;AAWC,wBAAmBT,OAAO,CAACU,WAAR,GAAsBJ,aAAtB,GAAsCK;AAX1D,KAaC,cAAC,YAAD;AAAc,IAAA,MAAM,EAAGP,MAAvB;AAAgC,IAAA,aAAa,EAAGD;AAAhD,IAbD,EAcC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,OAAO,CAACS,KADX,CAdD,EAiBG,CAAC,CAAET,OAAO,CAACU,WAAX,IACD,cAAC,cAAD;AAAgB,IAAA,EAAE,EAAGJ;AAArB,KACGN,OAAO,CAACU,WADX,CAlBF,CADD;AAyBA;;AAED,SAASE,uBAAT,GAAmC;AAClC,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,IADD;AAGA;;AAED,SAASC,gBAAT,QAA8E;AAAA,MAAjDC,aAAiD,SAAjDA,aAAiD;AAAA,MAAlCC,aAAkC,SAAlCA,aAAkC;AAAA,MAAnBC,cAAmB,SAAnBA,cAAmB;AAC7E,SAAOF,aAAa,CAACG,GAAd,CAAmB,UAAEjB,OAAF,EAAe;AACxC,QAAMkB,OAAO,GAAGH,aAAa,CAACI,QAAd,CAAwBnB,OAAxB,CAAhB;AACA,WAAOkB,OAAO,GACb,cAAC,YAAD;AACC,MAAA,GAAG,EAAGlB,OAAO,CAACoB,IADf;AAEC,MAAA,OAAO,EAAGpB,OAFX;AAGC,MAAA,OAAO,EAAGgB;AAHX,MADa,GAOb,cAAC,uBAAD;AAAyB,MAAA,GAAG,EAAGhB,OAAO,CAACoB;AAAvC,MAPD;AASA,GAXM,CAAP;AAYA;;AAED,eAAeP,gBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { parse } from '@wordpress/blocks';\nimport { ENTER, SPACE } from '@wordpress/keycodes';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockPreview from '../block-preview';\n\nfunction BlockPattern( { pattern, onClick } ) {\n\tconst { content, viewportWidth } = pattern;\n\tconst blocks = useMemo( () => parse( content ), [ content ] );\n\tconst instanceId = useInstanceId( BlockPattern );\n\tconst descriptionId = `block-editor-block-patterns-list__item-description-${ instanceId }`;\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"block-editor-block-patterns-list__item\"\n\t\t\trole=\"button\"\n\t\t\tonClick={ () => onClick( pattern, blocks ) }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( ENTER === event.keyCode || SPACE === event.keyCode ) {\n\t\t\t\t\tonClick( pattern, blocks );\n\t\t\t\t}\n\t\t\t} }\n\t\t\ttabIndex={ 0 }\n\t\t\taria-label={ pattern.title }\n\t\t\taria-describedby={ pattern.description ? descriptionId : undefined }\n\t\t>\n\t\t\t<BlockPreview blocks={ blocks } viewportWidth={ viewportWidth } />\n\t\t\t<div className=\"block-editor-block-patterns-list__item-title\">\n\t\t\t\t{ pattern.title }\n\t\t\t</div>\n\t\t\t{ !! pattern.description && (\n\t\t\t\t<VisuallyHidden id={ descriptionId }>\n\t\t\t\t\t{ pattern.description }\n\t\t\t\t</VisuallyHidden>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction BlockPatternPlaceholder() {\n\treturn (\n\t\t<div className=\"block-editor-block-patterns-list__item is-placeholder\" />\n\t);\n}\n\nfunction BlockPatternList( { blockPatterns, shownPatterns, onClickPattern } ) {\n\treturn blockPatterns.map( ( pattern ) => {\n\t\tconst isShown = shownPatterns.includes( pattern );\n\t\treturn isShown ? (\n\t\t\t<BlockPattern\n\t\t\t\tkey={ pattern.name }\n\t\t\t\tpattern={ pattern }\n\t\t\t\tonClick={ onClickPattern }\n\t\t\t/>\n\t\t) : (\n\t\t\t<BlockPatternPlaceholder key={ pattern.name } />\n\t\t);\n\t} );\n}\n\nexport default BlockPatternList;\n"]}