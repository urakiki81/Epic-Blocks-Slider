{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/reusable-blocks-tab.js"],"names":["withSpokenMessages","useMemo","useEffect","__","_n","sprintf","addQueryArgs","BlockTypesList","searchBlockItems","InserterPanel","InserterNoResults","useBlockTypesState","ReusableBlocksList","debouncedSpeak","filterValue","onHover","onInsert","rootClientId","items","categories","collections","onSelectItem","filteredItems","reusableItems","filter","category","resultsFoundMessage","length","ReusableBlocksTab","post_type"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { withSpokenMessages } from '@wordpress/components';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport { searchBlockItems } from './search-items';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useBlockTypesState from './hooks/use-block-types-state';\n\nfunction ReusableBlocksList( {\n\tdebouncedSpeak,\n\tfilterValue,\n\tonHover,\n\tonInsert,\n\trootClientId,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst filteredItems = useMemo( () => {\n\t\tconst reusableItems = items.filter(\n\t\t\t( { category } ) => category === 'reusable'\n\t\t);\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn reusableItems;\n\t\t}\n\t\treturn searchBlockItems(\n\t\t\treusableItems,\n\t\t\tcategories,\n\t\t\tcollections,\n\t\t\tfilterValue\n\t\t);\n\t}, [ filterValue, items, categories, collections ] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', filteredItems.length ),\n\t\t\tfilteredItems.length\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tif ( filteredItems.length === 0 ) {\n\t\treturn <InserterNoResults />;\n\t}\n\n\treturn (\n\t\t<InserterPanel\n\t\t\ttitle={\n\t\t\t\tfilterValue ? __( 'Search Results' ) : __( 'Reusable blocks' )\n\t\t\t}\n\t\t>\n\t\t\t<BlockTypesList\n\t\t\t\titems={ filteredItems }\n\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\tonHover={ onHover }\n\t\t\t\tlabel={\n\t\t\t\t\tfilterValue\n\t\t\t\t\t\t? __( 'Search Results' )\n\t\t\t\t\t\t: __( 'Reusable blocks' )\n\t\t\t\t}\n\t\t\t/>\n\t\t</InserterPanel>\n\t);\n}\n\n// The unwrapped component is only exported for use by unit tests.\n/**\n * List of reusable blocks shown in the \"Reusable\" tab of the inserter.\n *\n * @param {Object}   props                Component props.\n * @param {?string}  props.rootClientId   Client id of block to insert into.\n * @param {Function} props.onInsert       Callback to run when item is inserted.\n * @param {Function} props.onHover        Callback to run when item is hovered.\n * @param {?string}  props.filterValue    Search term.\n * @param {Function} props.debouncedSpeak Debounced speak function.\n *\n * @return {WPComponent} The component.\n */\nexport function ReusableBlocksTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tfilterValue,\n\tdebouncedSpeak,\n} ) {\n\treturn (\n\t\t<>\n\t\t\t<ReusableBlocksList\n\t\t\t\tdebouncedSpeak={ debouncedSpeak }\n\t\t\t\tfilterValue={ filterValue }\n\t\t\t\tonHover={ onHover }\n\t\t\t\tonInsert={ onInsert }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t/>\n\t\t\t<div className=\"block-editor-inserter__manage-reusable-blocks-container\">\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"block-editor-inserter__manage-reusable-blocks\"\n\t\t\t\t\thref={ addQueryArgs( 'edit.php', {\n\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Manage all reusable blocks' ) }\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default withSpokenMessages( ReusableBlocksTab );\n"]}