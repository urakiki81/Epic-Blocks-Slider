{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"names":["map","findIndex","flow","sortBy","groupBy","isEmpty","orderBy","__","_x","_n","sprintf","withSpokenMessages","useMemo","useEffect","useSelect","BlockTypesList","ChildBlocks","__experimentalInserterMenuExtension","searchBlockItems","InserterPanel","InserterNoResults","useBlockTypesState","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","BlockTypesTab","rootClientId","onInsert","onHover","filterValue","debouncedSpeak","showMostUsedBlocks","items","categories","collections","onSelectItem","hasChildItems","select","getBlockName","getChildBlockNames","rootBlockName","length","filteredItems","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","getCategoryIndex","slug","itemList","itemsPerCollection","result","Object","keys","forEach","namespace","resultsFoundMessage","hasItems","categoryItems","title","icon","collection","collectionItems","onSelect","fills"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tmap,\n\tfindIndex,\n\tflow,\n\tsortBy,\n\tgroupBy,\n\tisEmpty,\n\torderBy,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, _n, sprintf } from '@wordpress/i18n';\nimport { withSpokenMessages } from '@wordpress/components';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport ChildBlocks from './child-blocks';\nimport __experimentalInserterMenuExtension from '../inserter-menu-extension';\nimport { searchBlockItems } from './search-items';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useBlockTypesState from './hooks/use-block-types-state';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tfilterValue,\n\tdebouncedSpeak,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst hasChildItems = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockName } = select( 'core/block-editor' );\n\t\t\tconst { getChildBlockNames } = select( 'core/blocks' );\n\t\t\tconst rootBlockName = getBlockName( rootClientId );\n\n\t\t\treturn !! getChildBlockNames( rootBlockName ).length;\n\t\t},\n\t\t[ rootClientId ]\n\t);\n\n\tconst filteredItems = useMemo( () => {\n\t\treturn searchBlockItems( items, categories, collections, filterValue );\n\t}, [ filterValue, items, categories, collections ] );\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, [ 'frecency' ], [ 'desc' ] ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn filteredItems.filter( ( item ) => ! item.category );\n\t}, [ filteredItems ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\tconst getCategoryIndex = ( item ) => {\n\t\t\treturn findIndex(\n\t\t\t\tcategories,\n\t\t\t\t( category ) => category.slug === item.category\n\t\t\t);\n\t\t};\n\n\t\treturn flow(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) => sortBy( itemList, getCategoryIndex ),\n\t\t\t( itemList ) => groupBy( itemList, 'category' )\n\t\t)( filteredItems );\n\t}, [ filteredItems, categories ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = filteredItems.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ filteredItems, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', filteredItems.length ),\n\t\t\tfilteredItems.length\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tconst hasItems = ! isEmpty( filteredItems );\n\n\treturn (\n\t\t<div>\n\t\t\t{ hasChildItems && (\n\t\t\t\t<ChildBlocks rootClientId={ rootClientId }>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t// Pass along every block, as useBlockTypesState() and\n\t\t\t\t\t\t// getInserterItems() will have already filtered out\n\t\t\t\t\t\t// non-child blocks.\n\t\t\t\t\t\titems={ filteredItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Child Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</ChildBlocks>\n\t\t\t) }\n\n\t\t\t{ showMostUsedBlocks &&\n\t\t\t\t! hasChildItems &&\n\t\t\t\t!! suggestedItems.length &&\n\t\t\t\t! filterValue && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t{ ! hasChildItems &&\n\t\t\t\tmap( categories, ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t{ ! hasChildItems && !! uncategorizedItems.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ ! hasChildItems &&\n\t\t\t\tmap( collections, ( collection, namespace ) => {\n\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t<__experimentalInserterMenuExtension.Slot\n\t\t\t\tfillProps={ {\n\t\t\t\t\tonSelect: onSelectItem,\n\t\t\t\t\tonHover,\n\t\t\t\t\tfilterValue,\n\t\t\t\t\thasItems,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ ( fills ) => {\n\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\treturn fills;\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\treturn <InserterNoResults />;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t} }\n\t\t\t</__experimentalInserterMenuExtension.Slot>\n\t\t</div>\n\t);\n}\n\nexport default withSpokenMessages( BlockTypesTab );\n"]}