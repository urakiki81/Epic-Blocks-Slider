{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu-item.native.js"],"names":["View","TouchableHighlight","Text","Component","Icon","withPreferredColorScheme","__","styles","MenuItem","arguments","onPress","bind","props","onSelect","item","getStylesFromColorScheme","itemWidth","maxWidth","modalIconWrapperStyle","modalIconWrapper","modalIconWrapperDark","modalIconStyle","modalIcon","modalIconDark","modalItemLabelStyle","modalItemLabel","modalItemLabelDark","clipboardBlockStyles","clipboardBlock","clipboardBlockDark","isClipboardBlock","id","touchableArea","title","modalItem","width","icon","src","fill"],"mappings":";;;;;;;;;;;;AAAA;;;AAGA,SAASA,IAAT,EAAeC,kBAAf,EAAmCC,IAAnC,QAA+C,cAA/C;AAEA;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,Q;;;;;AACL,sBAAc;AAAA;;AAAA;;AACb,+BAAUC,SAAV;AAEA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAHa;AAIb;;;;8BAES;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACDC,QADC,eACDA,QADC;AAAA,UACSC,IADT,eACSA,IADT;AAETD,MAAAA,QAAQ,CAAEC,IAAF,CAAR;AACA;;;6BAEQ;AAAA,yBAMJ,KAAKF,KAND;AAAA,UAEPG,wBAFO,gBAEPA,wBAFO;AAAA,UAGPD,IAHO,gBAGPA,IAHO;AAAA,UAIPE,SAJO,gBAIPA,SAJO;AAAA,UAKPC,QALO,gBAKPA,QALO;AAQR,UAAMC,qBAAqB,GAAGH,wBAAwB,CACrDR,MAAM,CAACY,gBAD8C,EAErDZ,MAAM,CAACa,oBAF8C,CAAtD;AAIA,UAAMC,cAAc,GAAGN,wBAAwB,CAC9CR,MAAM,CAACe,SADuC,EAE9Cf,MAAM,CAACgB,aAFuC,CAA/C;AAIA,UAAMC,mBAAmB,GAAGT,wBAAwB,CACnDR,MAAM,CAACkB,cAD4C,EAEnDlB,MAAM,CAACmB,kBAF4C,CAApD;AAKA,UAAMC,oBAAoB,GAAGZ,wBAAwB,CACpDR,MAAM,CAACqB,cAD6C,EAEpDrB,MAAM,CAACsB,kBAF6C,CAArD;AAKA,UAAMC,gBAAgB,GAAGhB,IAAI,CAACiB,EAAL,KAAY,WAArC;AAEA,aACC,cAAC,kBAAD;AACC,QAAA,KAAK,EAAGxB,MAAM,CAACyB,aADhB;AAEC,QAAA,aAAa,EAAC,aAFf;AAGC,QAAA,aAAa,EAAG,GAHjB;AAIC,QAAA,kBAAkB,EAAGlB,IAAI,CAACmB,KAJ3B;AAKC,QAAA,OAAO,EAAG,KAAKvB;AALhB,SAOC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAG,CAAEH,MAAM,CAAC2B,SAAT,EAAoB;AAAEC,UAAAA,KAAK,EAAElB;AAAT,SAApB;AAAd,SACC,cAAC,IAAD;AACC,QAAA,KAAK,EAAG,CACPC,qBADO,EAEPF,SAAS,IAAI;AACZmB,UAAAA,KAAK,EAAEnB;AADK,SAFN,EAKPc,gBAAgB,IAAIH,oBALb;AADT,SASC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGN;AAAd,SACC,cAAC,IAAD;AACC,QAAA,IAAI,EAAGP,IAAI,CAACsB,IAAL,CAAUC,GAAV,IAAiBvB,IAAI,CAACsB,IAD9B;AAEC,QAAA,IAAI,EAAGf,cAAc,CAACiB,IAFvB;AAGC,QAAA,IAAI,EAAGjB,cAAc,CAACc;AAHvB,QADD,CATD,CADD,EAkBC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGX;AAAd,SACGM,gBAAgB,GAAGxB,EAAE,CAAE,cAAF,CAAL,GAA0BQ,IAAI,CAACmB,KADlD,CAlBD,CAPD,CADD;AAgCA;;;;EAxEqB9B,S;;AA2EvB,eAAeE,wBAAwB,CAAEG,QAAF,CAAvC","sourcesContent":["/**\n * External dependencies\n */\nimport { View, TouchableHighlight, Text } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { Icon } from '@wordpress/components';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nclass MenuItem extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onPress = this.onPress.bind( this );\n\t}\n\n\tonPress() {\n\t\tconst { onSelect, item } = this.props;\n\t\tonSelect( item );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tgetStylesFromColorScheme,\n\t\t\titem,\n\t\t\titemWidth,\n\t\t\tmaxWidth,\n\t\t} = this.props;\n\n\t\tconst modalIconWrapperStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIconWrapper,\n\t\t\tstyles.modalIconWrapperDark\n\t\t);\n\t\tconst modalIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIcon,\n\t\t\tstyles.modalIconDark\n\t\t);\n\t\tconst modalItemLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalItemLabel,\n\t\t\tstyles.modalItemLabelDark\n\t\t);\n\n\t\tconst clipboardBlockStyles = getStylesFromColorScheme(\n\t\t\tstyles.clipboardBlock,\n\t\t\tstyles.clipboardBlockDark\n\t\t);\n\n\t\tconst isClipboardBlock = item.id === 'clipboard';\n\n\t\treturn (\n\t\t\t<TouchableHighlight\n\t\t\t\tstyle={ styles.touchableArea }\n\t\t\t\tunderlayColor=\"transparent\"\n\t\t\t\tactiveOpacity={ 0.5 }\n\t\t\t\taccessibilityLabel={ item.title }\n\t\t\t\tonPress={ this.onPress }\n\t\t\t>\n\t\t\t\t<View style={ [ styles.modalItem, { width: maxWidth } ] }>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\tmodalIconWrapperStyle,\n\t\t\t\t\t\t\titemWidth && {\n\t\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tisClipboardBlock && clipboardBlockStyles,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<View style={ modalIconStyle }>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\ticon={ item.icon.src || item.icon }\n\t\t\t\t\t\t\t\tfill={ modalIconStyle.fill }\n\t\t\t\t\t\t\t\tsize={ modalIconStyle.width }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Text style={ modalItemLabelStyle }>\n\t\t\t\t\t\t{ isClipboardBlock ? __( 'Copied block' ) : item.title }\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableHighlight>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( MenuItem );\n"]}