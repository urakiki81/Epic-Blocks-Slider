{"version":3,"sources":["@wordpress/block-editor/src/components/navigable-toolbar/index.js"],"names":["NavigableMenu","Toolbar","useState","useRef","useLayoutEffect","useEffect","useCallback","deprecated","focus","useShortcut","useUpdateLayoutEffect","effect","deps","mounted","current","hasOnlyToolbarItem","elements","dataProp","some","element","dataset","focusFirstTabbableIn","container","tabbable","find","firstTabbable","useIsAccessibleToolbar","ref","initialAccessibleToolbarState","isAccessibleToolbar","setIsAccessibleToolbar","determineIsAccessibleToolbar","tabbables","onlyToolbarItem","alternative","link","observer","window","MutationObserver","observe","childList","subtree","disconnect","useToolbarFocus","focusOnMount","initialFocusOnMount","focusToolbar","bindGlobal","eventName","NavigableToolbar","children","props","wrapper"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { NavigableMenu, Toolbar } from '@wordpress/components';\nimport {\n\tuseState,\n\tuseRef,\n\tuseLayoutEffect,\n\tuseEffect,\n\tuseCallback,\n} from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\nimport { focus } from '@wordpress/dom';\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\n\nfunction useUpdateLayoutEffect( effect, deps ) {\n\tconst mounted = useRef( false );\n\tuseLayoutEffect( () => {\n\t\tif ( mounted.current ) {\n\t\t\treturn effect();\n\t\t}\n\t\tmounted.current = true;\n\t}, deps );\n}\n\nfunction hasOnlyToolbarItem( elements ) {\n\tconst dataProp = 'toolbarItem';\n\treturn ! elements.some( ( element ) => ! ( dataProp in element.dataset ) );\n}\n\nfunction focusFirstTabbableIn( container ) {\n\tconst [ firstTabbable ] = focus.tabbable.find( container );\n\tif ( firstTabbable ) {\n\t\tfirstTabbable.focus();\n\t}\n}\n\nfunction useIsAccessibleToolbar( ref ) {\n\t/*\n\t * By default, we'll assume the starting accessible state of the Toolbar\n\t * is true, as it seems to be the most common case.\n\t *\n\t * Transitioning from an (initial) false to true state causes the\n\t * <Toolbar /> component to mount twice, which is causing undesired\n\t * side-effects. These side-effects appear to only affect certain\n\t * E2E tests.\n\t *\n\t * This was initial discovered in this pull-request:\n\t * https://github.com/WordPress/gutenberg/pull/23425\n\t */\n\tconst initialAccessibleToolbarState = true;\n\n\t// By default, it's gonna render NavigableMenu. If all the tabbable elements\n\t// inside the toolbar are ToolbarItem components (or derived components like\n\t// ToolbarButton), then we can wrap them with the accessible Toolbar\n\t// component.\n\tconst [ isAccessibleToolbar, setIsAccessibleToolbar ] = useState(\n\t\tinitialAccessibleToolbarState\n\t);\n\n\tconst determineIsAccessibleToolbar = useCallback( () => {\n\t\tconst tabbables = focus.tabbable.find( ref.current );\n\t\tconst onlyToolbarItem = hasOnlyToolbarItem( tabbables );\n\t\tif ( ! onlyToolbarItem ) {\n\t\t\tdeprecated( 'Using custom components as toolbar controls', {\n\t\t\t\talternative: 'ToolbarItem or ToolbarButton components',\n\t\t\t\tlink:\n\t\t\t\t\t'https://developer.wordpress.org/block-editor/components/toolbar-button/#inside-blockcontrols',\n\t\t\t} );\n\t\t}\n\t\tsetIsAccessibleToolbar( onlyToolbarItem );\n\t}, [] );\n\n\tuseLayoutEffect( determineIsAccessibleToolbar, [] );\n\n\tuseUpdateLayoutEffect( () => {\n\t\t// Toolbar buttons may be rendered asynchronously, so we use\n\t\t// MutationObserver to check if the toolbar subtree has been modified\n\t\tconst observer = new window.MutationObserver(\n\t\t\tdetermineIsAccessibleToolbar\n\t\t);\n\t\tobserver.observe( ref.current, { childList: true, subtree: true } );\n\t\treturn () => observer.disconnect();\n\t}, [ isAccessibleToolbar ] );\n\n\treturn isAccessibleToolbar;\n}\n\nfunction useToolbarFocus( ref, focusOnMount, isAccessibleToolbar ) {\n\t// Make sure we don't use modified versions of this prop\n\tconst [ initialFocusOnMount ] = useState( focusOnMount );\n\n\tconst focusToolbar = useCallback( () => {\n\t\tfocusFirstTabbableIn( ref.current );\n\t}, [] );\n\n\tuseShortcut( 'core/block-editor/focus-toolbar', focusToolbar, {\n\t\tbindGlobal: true,\n\t\teventName: 'keydown',\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( initialFocusOnMount ) {\n\t\t\tfocusToolbar();\n\t\t}\n\t}, [ isAccessibleToolbar, initialFocusOnMount, focusToolbar ] );\n}\n\nfunction NavigableToolbar( { children, focusOnMount, ...props } ) {\n\tconst wrapper = useRef();\n\tconst isAccessibleToolbar = useIsAccessibleToolbar( wrapper );\n\n\tuseToolbarFocus( wrapper, focusOnMount, isAccessibleToolbar );\n\n\tif ( isAccessibleToolbar ) {\n\t\treturn (\n\t\t\t<Toolbar\n\t\t\t\tlabel={ props[ 'aria-label' ] }\n\t\t\t\tref={ wrapper }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</Toolbar>\n\t\t);\n\t}\n\n\treturn (\n\t\t<NavigableMenu\n\t\t\torientation=\"horizontal\"\n\t\t\trole=\"toolbar\"\n\t\t\tref={ wrapper }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</NavigableMenu>\n\t);\n}\n\nexport default NavigableToolbar;\n"]}