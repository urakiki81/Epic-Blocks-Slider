{"version":3,"sources":["@wordpress/block-editor/src/components/colors/use-colors.js"],"names":["memoize","classnames","kebabCase","camelCase","castArray","startCase","isFunction","__","useSelect","useDispatch","useCallback","useMemo","useEffect","Children","cloneElement","useState","InspectorControls","useBlockEditContext","ColorPanel","window","getComputedStyle","Node","DEFAULT_COLORS","COMMON_COLOR_LABELS","textColor","backgroundColor","InspectorControlsColorPanel","props","__experimentalUseColors","colorConfigs","panelTitle","colorPanelProps","contrastCheckers","panelChildren","colorDetector","targetRef","backgroundColorTargetRef","textColorTargetRef","deps","clientId","select","getBlockAttributes","getSettings","colors","attributes","settingsColors","updateBlockAttributes","setAttributes","newAttributes","createComponent","name","property","className","color","colorValue","customColor","children","componentClassName","style","componentStyle","colorStyle","extraProps","map","child","maxSize","length","createSetColor","newColor","find","_color","undefined","slug","detectedBackgroundColor","setDetectedBackgroundColor","detectedColor","setDetectedColor","needsBackgroundColor","needsColor","current","backgroundColorNode","parentNode","nodeType","ELEMENT_NODE","reduce","acc","colorConfig","colorSettings","components","panelLabel","label","componentName","replace","__color","displayName","setColor","value","onChange","wrappedColorPanelProps","title","initialOpen"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\nimport { kebabCase, camelCase, castArray, startCase, isFunction } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tChildren,\n\tcloneElement,\n\tuseState,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../inspector-controls';\nimport { useBlockEditContext } from '../block-edit';\nimport ColorPanel from './color-panel';\n\n/**\n * Browser dependencies\n */\nconst { getComputedStyle, Node } = window;\n\nconst DEFAULT_COLORS = [];\n\nconst COMMON_COLOR_LABELS = {\n\ttextColor: __( 'Text Color' ),\n\tbackgroundColor: __( 'Background Color' ),\n};\n\nconst InspectorControlsColorPanel = ( props ) => (\n\t<InspectorControls>\n\t\t<ColorPanel { ...props } />\n\t</InspectorControls>\n);\n\nexport default function __experimentalUseColors(\n\tcolorConfigs,\n\t{\n\t\tpanelTitle = __( 'Color settings' ),\n\t\tcolorPanelProps,\n\t\tcontrastCheckers,\n\t\tpanelChildren,\n\t\tcolorDetector: {\n\t\t\ttargetRef,\n\t\t\tbackgroundColorTargetRef = targetRef,\n\t\t\ttextColorTargetRef = targetRef,\n\t\t} = {},\n\t} = {\n\t\tpanelTitle: __( 'Color settings' ),\n\t},\n\tdeps = []\n) {\n\tconst { clientId } = useBlockEditContext();\n\tconst { attributes, settingsColors } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes, getSettings } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\tconst colors = getSettings().colors;\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t\tsettingsColors:\n\t\t\t\t\t! colors || colors === true ? DEFAULT_COLORS : colors,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { updateBlockAttributes } = useDispatch( 'core/block-editor' );\n\tconst setAttributes = useCallback(\n\t\t( newAttributes ) => updateBlockAttributes( clientId, newAttributes ),\n\t\t[ updateBlockAttributes, clientId ]\n\t);\n\n\tconst createComponent = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t(\n\t\t\t\t\tname,\n\t\t\t\t\tproperty,\n\t\t\t\t\tclassName,\n\t\t\t\t\tcolor,\n\t\t\t\t\tcolorValue,\n\t\t\t\t\tcustomColor\n\t\t\t\t) => ( {\n\t\t\t\t\tchildren,\n\t\t\t\t\tclassName: componentClassName = '',\n\t\t\t\t\tstyle: componentStyle = {},\n\t\t\t\t} ) => {\n\t\t\t\t\tlet colorStyle = {};\n\t\t\t\t\tif ( color ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: colorValue };\n\t\t\t\t\t} else if ( customColor ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: customColor };\n\t\t\t\t\t}\n\t\t\t\t\tconst extraProps = {\n\t\t\t\t\t\tclassName: classnames( componentClassName, {\n\t\t\t\t\t\t\t[ `has-${ kebabCase( color ) }-${ kebabCase(\n\t\t\t\t\t\t\t\tproperty\n\t\t\t\t\t\t\t) }` ]: color,\n\t\t\t\t\t\t\t[ className || `has-${ kebabCase( name ) }` ]:\n\t\t\t\t\t\t\t\tcolor || customColor,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t...colorStyle,\n\t\t\t\t\t\t\t...componentStyle,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( isFunction( children ) ) {\n\t\t\t\t\t\treturn children( extraProps );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t// Clone children, setting the style property from the color configuration,\n\t\t\t\t\t\t// if not already set explicitly through props.\n\t\t\t\t\t\tChildren.map( children, ( child ) => {\n\t\t\t\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t\textraProps.className\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t...extraProps.style,\n\t\t\t\t\t\t\t\t\t...( child.props.style || {} ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{ maxSize: colorConfigs.length }\n\t\t\t),\n\t\t[ colorConfigs.length ]\n\t);\n\tconst createSetColor = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t( name, colors ) => ( newColor ) => {\n\t\t\t\t\tconst color = colors.find(\n\t\t\t\t\t\t( _color ) => _color.color === newColor\n\t\t\t\t\t);\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? camelCase( `custom ${ name }` )\n\t\t\t\t\t\t\t: name ]: undefined,\n\t\t\t\t\t} );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? name\n\t\t\t\t\t\t\t: camelCase( `custom ${ name }` ) ]: color\n\t\t\t\t\t\t\t? color.slug\n\t\t\t\t\t\t\t: newColor,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmaxSize: colorConfigs.length,\n\t\t\t\t}\n\t\t\t),\n\t\t[ setAttributes, colorConfigs.length ]\n\t);\n\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\n\tconst [ detectedColor, setDetectedColor ] = useState();\n\n\tuseEffect( () => {\n\t\tif ( ! contrastCheckers ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet needsBackgroundColor = false;\n\t\tlet needsColor = false;\n\t\tfor ( const { backgroundColor, textColor } of castArray(\n\t\t\tcontrastCheckers\n\t\t) ) {\n\t\t\tif ( ! needsBackgroundColor ) {\n\t\t\t\tneedsBackgroundColor = backgroundColor === true;\n\t\t\t}\n\t\t\tif ( ! needsColor ) {\n\t\t\t\tneedsColor = textColor === true;\n\t\t\t}\n\t\t\tif ( needsBackgroundColor && needsColor ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( needsColor ) {\n\t\t\tsetDetectedColor(\n\t\t\t\tgetComputedStyle( textColorTargetRef.current ).color\n\t\t\t);\n\t\t}\n\n\t\tif ( needsBackgroundColor ) {\n\t\t\tlet backgroundColorNode = backgroundColorTargetRef.current;\n\t\t\tlet backgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t.backgroundColor;\n\t\t\twhile (\n\t\t\t\tbackgroundColor === 'rgba(0, 0, 0, 0)' &&\n\t\t\t\tbackgroundColorNode.parentNode &&\n\t\t\t\tbackgroundColorNode.parentNode.nodeType === Node.ELEMENT_NODE\n\t\t\t) {\n\t\t\t\tbackgroundColorNode = backgroundColorNode.parentNode;\n\t\t\t\tbackgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t\t.backgroundColor;\n\t\t\t}\n\n\t\t\tsetDetectedBackgroundColor( backgroundColor );\n\t\t}\n\t}, [\n\t\tcolorConfigs.reduce(\n\t\t\t( acc, colorConfig ) =>\n\t\t\t\t`${ acc } | ${ attributes[ colorConfig.name ] } | ${\n\t\t\t\t\tattributes[ camelCase( `custom ${ colorConfig.name }` ) ]\n\t\t\t\t}`,\n\t\t\t''\n\t\t),\n\t\t...deps,\n\t] );\n\n\treturn useMemo( () => {\n\t\tconst colorSettings = {};\n\n\t\tconst components = colorConfigs.reduce( ( acc, colorConfig ) => {\n\t\t\tif ( typeof colorConfig === 'string' ) {\n\t\t\t\tcolorConfig = { name: colorConfig };\n\t\t\t}\n\t\t\tconst {\n\t\t\t\tname, // E.g. 'backgroundColor'.\n\t\t\t\tproperty = name, // E.g. 'backgroundColor'.\n\t\t\t\tclassName,\n\n\t\t\t\tpanelLabel = colorConfig.label ||\n\t\t\t\t\tCOMMON_COLOR_LABELS[ name ] ||\n\t\t\t\t\tstartCase( name ), // E.g. 'Background color'.\n\t\t\t\tcomponentName = startCase( name ).replace( /\\s/g, '' ), // E.g. 'BackgroundColor'.\n\n\t\t\t\tcolor = colorConfig.color,\n\t\t\t\tcolors = settingsColors,\n\t\t\t} = {\n\t\t\t\t...colorConfig,\n\t\t\t\tcolor: attributes[ colorConfig.name ],\n\t\t\t};\n\n\t\t\tconst customColor = attributes[ camelCase( `custom ${ name }` ) ];\n\t\t\t// We memoize the non-primitives to avoid unnecessary updates\n\t\t\t// when they are used as props for other components.\n\t\t\tconst _color = customColor\n\t\t\t\t? undefined\n\t\t\t\t: colors.find( ( __color ) => __color.slug === color );\n\t\t\tacc[ componentName ] = createComponent(\n\t\t\t\tname,\n\t\t\t\tproperty,\n\t\t\t\tclassName,\n\t\t\t\tcolor,\n\t\t\t\t_color && _color.color,\n\t\t\t\tcustomColor\n\t\t\t);\n\t\t\tacc[ componentName ].displayName = componentName;\n\t\t\tacc[ componentName ].color = customColor\n\t\t\t\t? customColor\n\t\t\t\t: _color && _color.color;\n\t\t\tacc[ componentName ].slug = color;\n\t\t\tacc[ componentName ].setColor = createSetColor( name, colors );\n\n\t\t\tcolorSettings[ componentName ] = {\n\t\t\t\tvalue: _color\n\t\t\t\t\t? _color.color\n\t\t\t\t\t: attributes[ camelCase( `custom ${ name }` ) ],\n\t\t\t\tonChange: acc[ componentName ].setColor,\n\t\t\t\tlabel: panelLabel,\n\t\t\t\tcolors,\n\t\t\t};\n\t\t\t// These settings will be spread over the `colors` in\n\t\t\t// `colorPanelProps`, so we need to unset the key here,\n\t\t\t// if not set to an actual value, to avoid overwriting\n\t\t\t// an actual value in `colorPanelProps`.\n\t\t\tif ( ! colors ) {\n\t\t\t\tdelete colorSettings[ componentName ].colors;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\tconst wrappedColorPanelProps = {\n\t\t\ttitle: panelTitle,\n\t\t\tinitialOpen: false,\n\t\t\tcolorSettings,\n\t\t\tcolorPanelProps,\n\t\t\tcontrastCheckers,\n\t\t\tdetectedBackgroundColor,\n\t\t\tdetectedColor,\n\t\t\tpanelChildren,\n\t\t};\n\t\treturn {\n\t\t\t...components,\n\t\t\tColorPanel: <ColorPanel { ...wrappedColorPanelProps } />,\n\t\t\tInspectorControlsColorPanel: (\n\t\t\t\t<InspectorControlsColorPanel { ...wrappedColorPanelProps } />\n\t\t\t),\n\t\t};\n\t}, [\n\t\tattributes,\n\t\tsetAttributes,\n\t\tdetectedColor,\n\t\tdetectedBackgroundColor,\n\t\t...deps,\n\t] );\n}\n"]}