{"version":3,"sources":["@wordpress/block-editor/src/components/block-edit/context.js"],"names":["Context","name","isSelected","focusedElement","setFocusedElement","noop","clientId","Provider","useBlockEditContext"],"mappings":";;;;;;;;AAGA;;AAKA;;AARA;;;;AAKA;;;AAKA,IAAMA,OAAO,GAAG,4BAAe;AAC9BC,EAAAA,IAAI,EAAE,EADwB;AAE9BC,EAAAA,UAAU,EAAE,KAFkB;AAG9BC,EAAAA,cAAc,EAAE,IAHc;AAI9BC,EAAAA,iBAAiB,EAAEC,YAJW;AAK9BC,EAAAA,QAAQ,EAAE;AALoB,CAAf,CAAhB;IAOQC,Q,GAAaP,O,CAAbO,Q;;;AAIR;;;;;AAKO,SAASC,mBAAT,GAA+B;AACrC,SAAO,yBAAYR,OAAZ,CAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\n\nconst Context = createContext( {\n\tname: '',\n\tisSelected: false,\n\tfocusedElement: null,\n\tsetFocusedElement: noop,\n\tclientId: null,\n} );\nconst { Provider } = Context;\n\nexport { Provider as BlockEditContextProvider };\n\n/**\n * A hook that returns the block edit context.\n *\n * @return {Object} Block edit context\n */\nexport function useBlockEditContext() {\n\treturn useContext( Context );\n}\n"]}