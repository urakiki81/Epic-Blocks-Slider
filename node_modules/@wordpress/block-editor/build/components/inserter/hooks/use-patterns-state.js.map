{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-patterns-state.js"],"names":["usePatternsState","onInsert","select","getSettings","__experimentalBlockPatterns","__experimentalBlockPatternCategories","patterns","patternCategories","createSuccessNotice","onClickPattern","pattern","blocks","block","title","type"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AAXA;;;;AAKA;;;;AAQA;;;;;;;AAOA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEC,QAAF,EAAgB;AAAA,mBACA,qBAAW,UAAEC,MAAF,EAAc;AAAA,8BAI5DA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAJ4D;AAAA,QAE/DC,2BAF+D,uBAE/DA,2BAF+D;AAAA,QAG/DC,oCAH+D,uBAG/DA,oCAH+D;;AAKhE,WAAO;AACNC,MAAAA,QAAQ,EAAEF,2BADJ;AAENG,MAAAA,iBAAiB,EAAEF;AAFb,KAAP;AAIA,GATuC,EASrC,EATqC,CADA;AAAA,MAChCE,iBADgC,cAChCA,iBADgC;AAAA,MACbD,QADa,cACbA,QADa;;AAAA,qBAWR,uBAAa,cAAb,CAXQ;AAAA,MAWhCE,mBAXgC,gBAWhCA,mBAXgC;;AAYxC,MAAMC,cAAc,GAAG,0BAAa,UAAEC,OAAF,EAAWC,MAAX,EAAuB;AAC1DV,IAAAA,QAAQ,CAAE,iBAAKU,MAAL,EAAa,UAAEC,KAAF;AAAA,aAAa,wBAAYA,KAAZ,CAAb;AAAA,KAAb,CAAF,CAAR;AACAJ,IAAAA,mBAAmB,CAClB;AACC;AACA,kBAAI,8BAAJ,CAFD,EAGCE,OAAO,CAACG,KAHT,CADkB,EAMlB;AACCC,MAAAA,IAAI,EAAE;AADP,KANkB,CAAnB;AAUA,GAZsB,EAYpB,EAZoB,CAAvB;AAcA,SAAO,CAAER,QAAF,EAAYC,iBAAZ,EAA+BE,cAA/B,CAAP;AACA,CA3BD;;eA6BeT,gB","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { cloneBlock } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Retrieves the block patterns inserter state.\n *\n * @param {Function} onInsert function called when inserter a list of blocks.\n *\n * @return {Array} Returns the patterns state. (patterns, categories, onSelect handler)\n */\nconst usePatternsState = ( onInsert ) => {\n\tconst { patternCategories, patterns } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\t__experimentalBlockPatterns,\n\t\t\t__experimentalBlockPatternCategories,\n\t\t} = select( 'core/block-editor' ).getSettings();\n\t\treturn {\n\t\t\tpatterns: __experimentalBlockPatterns,\n\t\t\tpatternCategories: __experimentalBlockPatternCategories,\n\t\t};\n\t}, [] );\n\tconst { createSuccessNotice } = useDispatch( 'core/notices' );\n\tconst onClickPattern = useCallback( ( pattern, blocks ) => {\n\t\tonInsert( map( blocks, ( block ) => cloneBlock( block ) ) );\n\t\tcreateSuccessNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: block pattern title. */\n\t\t\t\t__( 'Block pattern \"%s\" inserted.' ),\n\t\t\t\tpattern.title\n\t\t\t),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t}, [] );\n\n\treturn [ patterns, patternCategories, onClickPattern ];\n};\n\nexport default usePatternsState;\n"]}