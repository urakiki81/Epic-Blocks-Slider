{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"names":["getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","BlockTypesTab","rootClientId","onInsert","onHover","filterValue","debouncedSpeak","showMostUsedBlocks","items","categories","collections","onSelectItem","hasChildItems","select","getBlockName","getChildBlockNames","rootBlockName","length","filteredItems","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","getCategoryIndex","slug","itemList","itemsPerCollection","result","Object","keys","forEach","namespace","resultsFoundMessage","hasItems","categoryItems","title","icon","collection","collectionItems","onSelect","fills"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tmap,\n\tfindIndex,\n\tflow,\n\tsortBy,\n\tgroupBy,\n\tisEmpty,\n\torderBy,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, _n, sprintf } from '@wordpress/i18n';\nimport { withSpokenMessages } from '@wordpress/components';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport ChildBlocks from './child-blocks';\nimport __experimentalInserterMenuExtension from '../inserter-menu-extension';\nimport { searchBlockItems } from './search-items';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useBlockTypesState from './hooks/use-block-types-state';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tfilterValue,\n\tdebouncedSpeak,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst hasChildItems = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockName } = select( 'core/block-editor' );\n\t\t\tconst { getChildBlockNames } = select( 'core/blocks' );\n\t\t\tconst rootBlockName = getBlockName( rootClientId );\n\n\t\t\treturn !! getChildBlockNames( rootBlockName ).length;\n\t\t},\n\t\t[ rootClientId ]\n\t);\n\n\tconst filteredItems = useMemo( () => {\n\t\treturn searchBlockItems( items, categories, collections, filterValue );\n\t}, [ filterValue, items, categories, collections ] );\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, [ 'frecency' ], [ 'desc' ] ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn filteredItems.filter( ( item ) => ! item.category );\n\t}, [ filteredItems ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\tconst getCategoryIndex = ( item ) => {\n\t\t\treturn findIndex(\n\t\t\t\tcategories,\n\t\t\t\t( category ) => category.slug === item.category\n\t\t\t);\n\t\t};\n\n\t\treturn flow(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) => sortBy( itemList, getCategoryIndex ),\n\t\t\t( itemList ) => groupBy( itemList, 'category' )\n\t\t)( filteredItems );\n\t}, [ filteredItems, categories ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = filteredItems.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ filteredItems, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', filteredItems.length ),\n\t\t\tfilteredItems.length\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tconst hasItems = ! isEmpty( filteredItems );\n\n\treturn (\n\t\t<div>\n\t\t\t{ hasChildItems && (\n\t\t\t\t<ChildBlocks rootClientId={ rootClientId }>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t// Pass along every block, as useBlockTypesState() and\n\t\t\t\t\t\t// getInserterItems() will have already filtered out\n\t\t\t\t\t\t// non-child blocks.\n\t\t\t\t\t\titems={ filteredItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Child Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</ChildBlocks>\n\t\t\t) }\n\n\t\t\t{ showMostUsedBlocks &&\n\t\t\t\t! hasChildItems &&\n\t\t\t\t!! suggestedItems.length &&\n\t\t\t\t! filterValue && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t{ ! hasChildItems &&\n\t\t\t\tmap( categories, ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t{ ! hasChildItems && !! uncategorizedItems.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ ! hasChildItems &&\n\t\t\t\tmap( collections, ( collection, namespace ) => {\n\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t<__experimentalInserterMenuExtension.Slot\n\t\t\t\tfillProps={ {\n\t\t\t\t\tonSelect: onSelectItem,\n\t\t\t\t\tonHover,\n\t\t\t\t\tfilterValue,\n\t\t\t\t\thasItems,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ ( fills ) => {\n\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\treturn fills;\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\treturn <InserterNoResults />;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t} }\n\t\t\t</__experimentalInserterMenuExtension.Slot>\n\t\t</div>\n\t);\n}\n\nexport default withSpokenMessages( BlockTypesTab );\n"]}