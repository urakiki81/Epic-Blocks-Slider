{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/index.js"],"names":["defaultRenderToggle","onToggle","disabled","isOpen","blockTitle","hasSingleBlockType","toggleProps","label","onClick","rest","handleClick","event","plus","Inserter","arguments","bind","renderToggle","renderContent","props","hasItems","onClose","rootClientId","clientId","isAppender","showInserterHelpPanel","selectBlockOnInsert","__experimentalSelectBlockOnInsert","isQuick","__experimentalIsQuick","position","insertOnlyAllowedBlock","Component","select","getBlockRootClientId","hasInserterItems","__experimentalGetAllowedBlocks","getBlockVariations","undefined","allowedBlocks","name","allowedBlockType","title","dispatch","ownProps","getInsertionIndex","getBlockIndex","getBlockSelectionEnd","getBlockOrder","end","length","insertBlock","blockToInsert","message"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { size } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport { plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport InserterMenu from './menu';\nimport QuickInserter from './quick-inserter';\n\nconst defaultRenderToggle = ( {\n\tonToggle,\n\tdisabled,\n\tisOpen,\n\tblockTitle,\n\thasSingleBlockType,\n\ttoggleProps = {},\n} ) => {\n\tlet label;\n\tif ( hasSingleBlockType ) {\n\t\tlabel = sprintf(\n\t\t\t// translators: %s: the name of the block when there is only one\n\t\t\t_x( 'Add %s', 'directly add the only allowed block' ),\n\t\t\tblockTitle\n\t\t);\n\t} else {\n\t\tlabel = _x( 'Add block', 'Generic label for block inserter button' );\n\t}\n\n\tconst { onClick, ...rest } = toggleProps;\n\n\t// Handle both onClick functions from the toggle and the parent component\n\tfunction handleClick( event ) {\n\t\tif ( onToggle ) {\n\t\t\tonToggle( event );\n\t\t}\n\t\tif ( onClick ) {\n\t\t\tonClick( event );\n\t\t}\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\ticon={ plus }\n\t\t\tlabel={ label }\n\t\t\ttooltipPosition=\"bottom\"\n\t\t\tonClick={ handleClick }\n\t\t\tclassName=\"block-editor-inserter__toggle\"\n\t\t\taria-haspopup={ ! hasSingleBlockType ? 'true' : false }\n\t\t\taria-expanded={ ! hasSingleBlockType ? isOpen : false }\n\t\t\tdisabled={ disabled }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n};\n\nclass Inserter extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onToggle = this.onToggle.bind( this );\n\t\tthis.renderToggle = this.renderToggle.bind( this );\n\t\tthis.renderContent = this.renderContent.bind( this );\n\t}\n\n\tonToggle( isOpen ) {\n\t\tconst { onToggle } = this.props;\n\n\t\t// Surface toggle callback to parent component\n\t\tif ( onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\t/**\n\t * Render callback to display Dropdown toggle element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\n\t *                                    pressed.\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\n\t *\n\t * @return {WPElement} Dropdown toggle element.\n\t */\n\trenderToggle( { onToggle, isOpen } ) {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t\thasItems,\n\t\t\trenderToggle = defaultRenderToggle,\n\t\t} = this.props;\n\n\t\treturn renderToggle( {\n\t\t\tonToggle,\n\t\t\tisOpen,\n\t\t\tdisabled: disabled || ! hasItems,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t} );\n\t}\n\n\t/**\n\t * Render callback to display Dropdown content element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\n\t *                                   closed.\n\t *\n\t * @return {WPElement} Dropdown content element.\n\t */\n\trenderContent( { onClose } ) {\n\t\tconst {\n\t\t\trootClientId,\n\t\t\tclientId,\n\t\t\tisAppender,\n\t\t\tshowInserterHelpPanel,\n\t\t\t__experimentalSelectBlockOnInsert: selectBlockOnInsert,\n\n\t\t\t// This prop is experimental to give some time for the quick inserter to mature\n\t\t\t// Feel free to make them stable after a few releases.\n\t\t\t__experimentalIsQuick: isQuick,\n\t\t} = this.props;\n\n\t\tif ( isQuick ) {\n\t\t\treturn (\n\t\t\t\t<QuickInserter\n\t\t\t\t\tonSelect={ onClose }\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tisAppender={ isAppender }\n\t\t\t\t\tselectBlockOnInsert={ selectBlockOnInsert }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<InserterMenu\n\t\t\t\tonSelect={ onClose }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisAppender={ isAppender }\n\t\t\t\tshowInserterHelpPanel={ showInserterHelpPanel }\n\t\t\t\t__experimentalSelectBlockOnInsert={ selectBlockOnInsert }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tposition,\n\t\t\thasSingleBlockType,\n\t\t\tinsertOnlyAllowedBlock,\n\t\t\t__experimentalIsQuick: isQuick,\n\t\t} = this.props;\n\n\t\tif ( hasSingleBlockType ) {\n\t\t\treturn this.renderToggle( { onToggle: insertOnlyAllowedBlock } );\n\t\t}\n\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\tclassName=\"block-editor-inserter\"\n\t\t\t\tcontentClassName={ classnames(\n\t\t\t\t\t'block-editor-inserter__popover',\n\t\t\t\t\t{ 'is-quick': isQuick }\n\t\t\t\t) }\n\t\t\t\tposition={ position }\n\t\t\t\tonToggle={ this.onToggle }\n\t\t\t\texpandOnMobile\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\n\t\t\t\trenderToggle={ this.renderToggle }\n\t\t\t\trenderContent={ this.renderContent }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetBlockRootClientId,\n\t\t\thasInserterItems,\n\t\t\t__experimentalGetAllowedBlocks,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getBlockVariations } = select( 'core/blocks' );\n\n\t\trootClientId =\n\t\t\trootClientId || getBlockRootClientId( clientId ) || undefined;\n\n\t\tconst allowedBlocks = __experimentalGetAllowedBlocks( rootClientId );\n\n\t\tconst hasSingleBlockType =\n\t\t\tsize( allowedBlocks ) === 1 &&\n\t\t\tsize(\n\t\t\t\tgetBlockVariations( allowedBlocks[ 0 ].name, 'inserter' )\n\t\t\t) === 0;\n\n\t\tlet allowedBlockType = false;\n\t\tif ( hasSingleBlockType ) {\n\t\t\tallowedBlockType = allowedBlocks[ 0 ];\n\t\t}\n\n\t\treturn {\n\t\t\thasItems: hasInserterItems( rootClientId ),\n\t\t\thasSingleBlockType,\n\t\t\tblockTitle: allowedBlockType ? allowedBlockType.title : '',\n\t\t\tallowedBlockType,\n\t\t\trootClientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\treturn {\n\t\t\tinsertOnlyAllowedBlock() {\n\t\t\t\tconst { rootClientId, clientId, isAppender } = ownProps;\n\t\t\t\tconst {\n\t\t\t\t\thasSingleBlockType,\n\t\t\t\t\tallowedBlockType,\n\t\t\t\t\t__experimentalSelectBlockOnInsert: selectBlockOnInsert,\n\t\t\t\t} = ownProps;\n\n\t\t\t\tif ( ! hasSingleBlockType ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfunction getInsertionIndex() {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tgetBlockIndex,\n\t\t\t\t\t\tgetBlockSelectionEnd,\n\t\t\t\t\t\tgetBlockOrder,\n\t\t\t\t\t} = select( 'core/block-editor' );\n\n\t\t\t\t\t// If the clientId is defined, we insert at the position of the block.\n\t\t\t\t\tif ( clientId ) {\n\t\t\t\t\t\treturn getBlockIndex( clientId, rootClientId );\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there a selected block, we insert after the selected block.\n\t\t\t\t\tconst end = getBlockSelectionEnd();\n\t\t\t\t\tif ( ! isAppender && end ) {\n\t\t\t\t\t\treturn getBlockIndex( end, rootClientId ) + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, we insert at the end of the current rootClientId\n\t\t\t\t\treturn getBlockOrder( rootClientId ).length;\n\t\t\t\t}\n\n\t\t\t\tconst { insertBlock } = dispatch( 'core/block-editor' );\n\n\t\t\t\tconst blockToInsert = createBlock( allowedBlockType.name );\n\n\t\t\t\tinsertBlock(\n\t\t\t\t\tblockToInsert,\n\t\t\t\t\tgetInsertionIndex(),\n\t\t\t\t\trootClientId,\n\t\t\t\t\tselectBlockOnInsert\n\t\t\t\t);\n\n\t\t\t\tif ( ! selectBlockOnInsert ) {\n\t\t\t\t\tconst message = sprintf(\n\t\t\t\t\t\t// translators: %s: the name of the block that has been added\n\t\t\t\t\t\t__( '%s block added' ),\n\t\t\t\t\t\tallowedBlockType.title\n\t\t\t\t\t);\n\t\t\t\t\tspeak( message );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n\t// The global inserter should always be visible, we are using ( ! isAppender && ! rootClientId && ! clientId ) as\n\t// a way to detect the global Inserter.\n\tifCondition(\n\t\t( { hasItems, isAppender, rootClientId, clientId } ) =>\n\t\t\thasItems || ( ! isAppender && ! rootClientId && ! clientId )\n\t),\n] )( Inserter );\n"]}