{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu.native.js"],"names":["MIN_COL_NUM","InserterMenu","arguments","onClose","bind","onLayout","renderItem","state","numberOfColumns","Dimensions","addEventListener","props","showInsertionPoint","hideInsertionPoint","removeEventListener","bottomSheetWidth","styles","columnPadding","paddingLeft","paddingRight","modalItem","itemPaddingLeft","itemPaddingRight","itemWidth","modalIconWrapper","width","BottomSheet","getWidth","itemTotalWidth","calculateItemWidth","containerTotalWidth","numofColumns","Math","floor","numOfColumns","calculateMinItemWidth","maxWidth","shouldReplaceBlock","insertDefaultBlock","onDismiss","calculateColumnsProperties","setState","item","onSelect","items","listProps","rowSeparator","name","Component","select","clientId","isAppender","rootClientId","getInserterItems","getBlockName","getBlockRootClientId","getBlockSelectionEnd","getSettings","canInsertBlockType","getChildBlockNames","getBlockType","getClipboard","destinationRootClientId","end","undefined","destinationRootBlockName","shouldInsertAtTheTop","__experimentalShouldInsertAtTheTop","clipboard","clipboardBlock","HTML","shouldAddClipboardBlock","rootChildBlocks","id","initialAttributes","attributes","innerBlocks","dispatch","ownProps","removeBlock","resetBlocks","clearSelectedBlock","insertBlock","getBlockOrder","getBlockCount","count","blockToReplace","insertionIndex","insertedBlock","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tFlatList,\n\tView,\n\tTouchableHighlight,\n\tTouchableWithoutFeedback,\n\tDimensions,\n} from 'react-native';\nimport { pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createBlock, rawHandler } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { BottomSheet, BottomSheetConsumer } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\nimport MenuItem from './menu-item.native';\n\nconst MIN_COL_NUM = 3;\n\nexport class InserterMenu extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onClose = this.onClose.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.renderItem = this.renderItem.bind( this );\n\t\tthis.state = {\n\t\t\tnumberOfColumns: MIN_COL_NUM,\n\t\t};\n\n\t\tDimensions.addEventListener( 'change', this.onLayout );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.showInsertionPoint();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.hideInsertionPoint();\n\t\tDimensions.removeEventListener( 'change', this.onLayout );\n\t}\n\n\tcalculateMinItemWidth( bottomSheetWidth ) {\n\t\tconst { paddingLeft, paddingRight } = styles.columnPadding;\n\t\treturn (\n\t\t\t( bottomSheetWidth - 2 * ( paddingLeft + paddingRight ) ) /\n\t\t\tMIN_COL_NUM\n\t\t);\n\t}\n\n\tcalculateItemWidth() {\n\t\tconst {\n\t\t\tpaddingLeft: itemPaddingLeft,\n\t\t\tpaddingRight: itemPaddingRight,\n\t\t} = styles.modalItem;\n\t\tconst { width: itemWidth } = styles.modalIconWrapper;\n\t\treturn itemWidth + itemPaddingLeft + itemPaddingRight;\n\t}\n\n\tcalculateColumnsProperties() {\n\t\tconst bottomSheetWidth = BottomSheet.getWidth();\n\t\tconst { paddingLeft, paddingRight } = styles.columnPadding;\n\t\tconst itemTotalWidth = this.calculateItemWidth();\n\t\tconst containerTotalWidth =\n\t\t\tbottomSheetWidth - ( paddingLeft + paddingRight );\n\t\tconst numofColumns = Math.floor( containerTotalWidth / itemTotalWidth );\n\n\t\tif ( numofColumns < MIN_COL_NUM ) {\n\t\t\treturn {\n\t\t\t\tnumOfColumns: MIN_COL_NUM,\n\t\t\t\titemWidth: this.calculateMinItemWidth( bottomSheetWidth ),\n\t\t\t\tmaxWidth: containerTotalWidth / MIN_COL_NUM,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tnumOfColumns: numofColumns,\n\t\t\tmaxWidth: containerTotalWidth / numofColumns,\n\t\t};\n\t}\n\n\tonClose() {\n\t\t// if should replace but didn't insert any block\n\t\t// re-insert default block\n\t\tif ( this.props.shouldReplaceBlock ) {\n\t\t\tthis.props.insertDefaultBlock();\n\t\t}\n\t\tthis.props.onDismiss();\n\t}\n\n\tonLayout() {\n\t\tconst {\n\t\t\tnumOfColumns,\n\t\t\titemWidth,\n\t\t\tmaxWidth,\n\t\t} = this.calculateColumnsProperties();\n\t\tconst numberOfColumns = numOfColumns;\n\n\t\tthis.setState( { numberOfColumns, itemWidth, maxWidth } );\n\t}\n\n\trenderItem( { item } ) {\n\t\tconst { itemWidth, maxWidth } = this.state;\n\t\tconst { onSelect } = this.props;\n\t\treturn (\n\t\t\t<MenuItem\n\t\t\t\titem={ item }\n\t\t\t\titemWidth={ itemWidth }\n\t\t\t\tmaxWidth={ maxWidth }\n\t\t\t\tonSelect={ onSelect }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { items } = this.props;\n\t\tconst { numberOfColumns } = this.state;\n\n\t\treturn (\n\t\t\t<BottomSheet\n\t\t\t\tisVisible={ true }\n\t\t\t\tonClose={ this.onClose }\n\t\t\t\thideHeader\n\t\t\t\tisChildrenScrollable\n\t\t\t>\n\t\t\t\t<TouchableHighlight accessible={ false }>\n\t\t\t\t\t<BottomSheetConsumer>\n\t\t\t\t\t\t{ ( { listProps } ) => (\n\t\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\t\tonLayout={ this.onLayout }\n\t\t\t\t\t\t\t\tkey={ `InserterUI-${ numberOfColumns }` } //re-render when numberOfColumns changes\n\t\t\t\t\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t\t\t\t\t\tnumColumns={ numberOfColumns }\n\t\t\t\t\t\t\t\tdata={ items }\n\t\t\t\t\t\t\t\tItemSeparatorComponent={ () => (\n\t\t\t\t\t\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\t\t\t\t\t\taccessible={ false }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<View style={ styles.rowSeparator } />\n\t\t\t\t\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tkeyExtractor={ ( item ) => item.name }\n\t\t\t\t\t\t\t\trenderItem={ this.renderItem }\n\t\t\t\t\t\t\t\t{ ...listProps }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</BottomSheetConsumer>\n\t\t\t\t</TouchableHighlight>\n\t\t\t</BottomSheet>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { clientId, isAppender, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t\tgetSettings,\n\t\t\tcanInsertBlockType,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getChildBlockNames, getBlockType } = select( 'core/blocks' );\n\t\tconst { getClipboard } = select( 'core/editor' );\n\n\t\tlet destinationRootClientId = rootClientId;\n\t\tif ( ! destinationRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\tdestinationRootClientId =\n\t\t\t\t\tgetBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\t\tconst destinationRootBlockName = getBlockName(\n\t\t\tdestinationRootClientId\n\t\t);\n\n\t\tconst {\n\t\t\t__experimentalShouldInsertAtTheTop: shouldInsertAtTheTop,\n\t\t} = getSettings();\n\t\tconst clipboard = getClipboard();\n\t\tconst clipboardBlock =\n\t\t\tclipboard && rawHandler( { HTML: clipboard } )[ 0 ];\n\t\tconst shouldAddClipboardBlock =\n\t\t\tclipboardBlock &&\n\t\t\tcanInsertBlockType( clipboardBlock.name, destinationRootClientId );\n\n\t\treturn {\n\t\t\trootChildBlocks: getChildBlockNames( destinationRootBlockName ),\n\t\t\titems: shouldAddClipboardBlock\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...pick( getBlockType( clipboardBlock.name ), [\n\t\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t\t'icon',\n\t\t\t\t\t\t\t] ),\n\t\t\t\t\t\t\tid: 'clipboard',\n\t\t\t\t\t\t\tinitialAttributes: clipboardBlock.attributes,\n\t\t\t\t\t\t\tinnerBlocks: clipboardBlock.innerBlocks,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...getInserterItems( destinationRootClientId ),\n\t\t\t\t  ]\n\t\t\t\t: getInserterItems( destinationRootClientId ),\n\t\t\tdestinationRootClientId,\n\t\t\tshouldInsertAtTheTop,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\tconst {\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t\tremoveBlock,\n\t\t\tresetBlocks,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tinsertDefaultBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tshowInsertionPoint() {\n\t\t\t\tif ( ownProps.shouldReplaceBlock ) {\n\t\t\t\t\tconst { getBlockOrder, getBlockCount } = select(\n\t\t\t\t\t\t'core/block-editor'\n\t\t\t\t\t);\n\n\t\t\t\t\tconst count = getBlockCount();\n\t\t\t\t\t// Check if there is a rootClientId because that means it is a nested replacable block and we don't want to clear/reset all blocks.\n\t\t\t\t\tif ( count === 1 && ! ownProps.rootClientId ) {\n\t\t\t\t\t\t// removing the last block is not possible with `removeBlock` action\n\t\t\t\t\t\t// it always inserts a default block if the last of the blocks have been removed\n\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t\tresetBlocks( [] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst blockToReplace = getBlockOrder(\n\t\t\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t\t\t)[ ownProps.insertionIndex ];\n\n\t\t\t\t\t\tremoveBlock( blockToReplace, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshowInsertionPoint(\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t\thideInsertionPoint,\n\t\t\tonSelect( item ) {\n\t\t\t\tconst { name, initialAttributes, innerBlocks } = item;\n\n\t\t\t\tconst insertedBlock = createBlock(\n\t\t\t\t\tname,\n\t\t\t\t\tinitialAttributes,\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\n\t\t\t\tinsertBlock(\n\t\t\t\t\tinsertedBlock,\n\t\t\t\t\townProps.insertionIndex,\n\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t);\n\n\t\t\t\townProps.onSelect();\n\t\t\t},\n\t\t\tinsertDefaultBlock() {\n\t\t\t\tinsertDefaultBlock(\n\t\t\t\t\t{},\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId\n)( InserterMenu );\n"]}