{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/index.native.js"],"names":["UncontrolledInnerBlocks","props","clientId","allowedBlocks","template","templateLock","templateInsertUpdatesSelection","orientation","renderAppender","renderFooterAppender","parentWidth","horizontal","contentResizeMode","contentStyle","onAddBlock","onDeleteBlock","marginVertical","marginHorizontal","horizontalAlignment","filterInnerBlocks","block","select","getBlock","innerBlocks","blockList","blockType","name","providesContext","context","attributes","ControlledInnerBlocks","InnerBlocks","allProps","value","onChange","DefaultBlockAppender","ButtonBlockAppender","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, withBlockContentContext } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ButtonBlockAppender from './button-block-appender';\nimport DefaultBlockAppender from './default-block-appender';\nimport useNestedSettingsUpdate from './use-nested-settings-update';\nimport useInnerBlockTemplateSync from './use-inner-block-template-sync';\nimport getBlockContext from './get-block-context';\n\n/**\n * Internal dependencies\n */\nimport BlockList from '../block-list';\nimport { useBlockEditContext } from '../block-edit/context';\nimport useBlockSync from '../provider/use-block-sync';\nimport { BlockContextProvider } from '../block-context';\n\n/**\n * InnerBlocks is a component which allows a single block to have multiple blocks\n * as children. The UncontrolledInnerBlocks component is used whenever the inner\n * blocks are not controlled by another entity. In other words, it is normally\n * used for inner blocks in the post editor\n *\n * @param {Object} props The component props.\n */\nfunction UncontrolledInnerBlocks( props ) {\n\tconst {\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection,\n\t\torientation,\n\t\trenderAppender,\n\t\trenderFooterAppender,\n\t\tparentWidth,\n\t\thorizontal,\n\t\tcontentResizeMode,\n\t\tcontentStyle,\n\t\tonAddBlock,\n\t\tonDeleteBlock,\n\t\tmarginVertical,\n\t\tmarginHorizontal,\n\t\thorizontalAlignment,\n\t\tfilterInnerBlocks,\n\t} = props;\n\n\tconst block = useSelect(\n\t\t( select ) => select( 'core/block-editor' ).getBlock( clientId ),\n\t\t[ clientId ]\n\t) || { innerBlocks: [] };\n\n\tuseNestedSettingsUpdate( clientId, allowedBlocks, templateLock );\n\n\tuseInnerBlockTemplateSync(\n\t\tclientId,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection\n\t);\n\n\tlet blockList = (\n\t\t<BlockList\n\t\t\tmarginVertical={ marginVertical }\n\t\t\tmarginHorizontal={ marginHorizontal }\n\t\t\trootClientId={ clientId }\n\t\t\trenderAppender={ renderAppender }\n\t\t\trenderFooterAppender={ renderFooterAppender }\n\t\t\twithFooter={ false }\n\t\t\torientation={ orientation }\n\t\t\tparentWidth={ parentWidth }\n\t\t\thorizontalAlignment={ horizontalAlignment }\n\t\t\thorizontal={ horizontal }\n\t\t\tcontentResizeMode={ contentResizeMode }\n\t\t\tcontentStyle={ contentStyle }\n\t\t\tonAddBlock={ onAddBlock }\n\t\t\tonDeleteBlock={ onDeleteBlock }\n\t\t\tfilterInnerBlocks={ filterInnerBlocks }\n\t\t/>\n\t);\n\n\t// Wrap context provider if (and only if) block has context to provide.\n\tconst blockType = getBlockType( block.name );\n\tif ( blockType && blockType.providesContext ) {\n\t\tconst context = getBlockContext( block.attributes, blockType );\n\n\t\tblockList = (\n\t\t\t<BlockContextProvider value={ context }>\n\t\t\t\t{ blockList }\n\t\t\t</BlockContextProvider>\n\t\t);\n\t}\n\n\treturn blockList;\n}\n\n/**\n * The controlled inner blocks component wraps the uncontrolled inner blocks\n * component with the blockSync hook. This keeps the innerBlocks of the block in\n * the block-editor store in sync with the blocks of the controlling entity. An\n * example of an inner block controller is a template part block, which provides\n * its own blocks from the template part entity data source.\n *\n * @param {Object} props The component props.\n */\nfunction ControlledInnerBlocks( props ) {\n\tuseBlockSync( props );\n\treturn <UncontrolledInnerBlocks { ...props } />;\n}\n\n/**\n * Wrapped InnerBlocks component which detects whether to use the controlled or\n * uncontrolled variations of the InnerBlocks component. This is the component\n * which should be used throughout the application.\n *\n * @param {Object} props The component props.\n */\nconst InnerBlocks = ( props ) => {\n\tconst { clientId } = useBlockEditContext();\n\n\tconst allProps = {\n\t\tclientId,\n\t\t...props,\n\t};\n\n\t// Detects if the InnerBlocks should be controlled by an incoming value.\n\treturn props.value && props.onChange ? (\n\t\t<ControlledInnerBlocks { ...allProps } />\n\t) : (\n\t\t<UncontrolledInnerBlocks { ...allProps } />\n\t);\n};\n\n// Expose default appender placeholders as components.\nInnerBlocks.DefaultBlockAppender = DefaultBlockAppender;\nInnerBlocks.ButtonBlockAppender = ButtonBlockAppender;\n\nInnerBlocks.Content = withBlockContentContext( ( { BlockContent } ) => (\n\t<BlockContent />\n) );\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport default InnerBlocks;\n"]}