{"version":3,"sources":["@wordpress/block-editor/src/components/use-editor-feature/index.js"],"names":["deprecatedFlags","settings","disableCustomColors","undefined","disableCustomGradients","disableCustomFontSizes","enableCustomLineHeight","useEditorFeature","featurePath","blockName","name","setting","select","getSettings","deprecatedSettingsValue","globalPath","blockPath"],"mappings":";;;;;;;AAGA;;AAKA;;AAKA;;AAbA;;;;AAKA;;;;AAKA;;;AAKA,IAAMA,eAAe,GAAG;AACvB,kBAAgB,qBAAEC,QAAF;AAAA,WACfA,QAAQ,CAACC,mBAAT,KAAiCC,SAAjC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACC,mBAHC;AAAA,GADO;AAKvB,qBAAmB,wBAAED,QAAF;AAAA,WAClBA,QAAQ,CAACG,sBAAT,KAAoCD,SAApC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACG,sBAHI;AAAA,GALI;AASvB,qBAAmB,wBAAEH,QAAF;AAAA,WAClBA,QAAQ,CAACI,sBAAT,KAAoCF,SAApC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACI,sBAHI;AAAA,GATI;AAavB,uBAAqB,0BAAEJ,QAAF;AAAA,WAAgBA,QAAQ,CAACK,sBAAzB;AAAA;AAbE,CAAxB;AAgBA;;;;;;;;;;;;;;AAae,SAASC,gBAAT,CAA2BC,WAA3B,EAAyC;AAAA,6BAC3B,qCAD2B;AAAA,MACzCC,SADyC,wBAC/CC,IAD+C;;AAGvD,MAAMC,OAAO,GAAG,qBACf,UAAEC,MAAF,EAAc;AAAA;;AACb;AACA,QAAMX,QAAQ,GAAGW,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAAjB;AACA,QAAMC,uBAAuB,GAAGd,eAAe,CAAEQ,WAAF,CAAf,GAC7BR,eAAe,CAAEQ,WAAF,CAAf,CAAgCP,QAAhC,CAD6B,GAE7BE,SAFH;;AAGA,QAAKW,uBAAuB,KAAKX,SAAjC,EAA6C;AAC5C,aAAOW,uBAAP;AACA,KARY,CAUb;AACA;AACA;AACA;AACA;;;AACA,QAAMC,UAAU,2CAAqCP,WAArC,CAAhB;AACA,QAAMQ,SAAS,oCAA8BP,SAA9B,cAA6CD,WAA7C,CAAf;AACA,mBAAO,iBAAKP,QAAL,EAAee,SAAf,CAAP,uCAAqC,iBAAKf,QAAL,EAAec,UAAf,CAArC;AACA,GAnBc,EAoBf,CAAEN,SAAF,EAAaD,WAAb,CApBe,CAAhB;AAuBA,SAAOG,OAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit';\n\nconst deprecatedFlags = {\n\t'color.custom': ( settings ) =>\n\t\tsettings.disableCustomColors === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomColors,\n\t'gradient.custom': ( settings ) =>\n\t\tsettings.disableCustomGradients === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomGradients,\n\t'fontSize.custom': ( settings ) =>\n\t\tsettings.disableCustomFontSizes === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomFontSizes,\n\t'lineHeight.custom': ( settings ) => settings.enableCustomLineHeight,\n};\n\n/**\n * Hook that retrieves the setting for the given editor feature.\n * It works with nested objects using by finding the value at path.\n *\n * @param {string} featurePath  The path to the feature.\n *\n * @return {any} Returns the value defined for the setting.\n *\n * @example\n * ```js\n * const isEnabled = useEditorFeature( 'typography.dropCap' );\n * ```\n */\nexport default function useEditorFeature( featurePath ) {\n\tconst { name: blockName } = useBlockEditContext();\n\n\tconst setting = useSelect(\n\t\t( select ) => {\n\t\t\t// 1 - Use deprecated settings, if available.\n\t\t\tconst settings = select( 'core/block-editor' ).getSettings();\n\t\t\tconst deprecatedSettingsValue = deprecatedFlags[ featurePath ]\n\t\t\t\t? deprecatedFlags[ featurePath ]( settings )\n\t\t\t\t: undefined;\n\t\t\tif ( deprecatedSettingsValue !== undefined ) {\n\t\t\t\treturn deprecatedSettingsValue;\n\t\t\t}\n\n\t\t\t// 2 - Use __experimental features otherwise.\n\t\t\t// We cascade to the global value if the block one is not available.\n\t\t\t//\n\t\t\t// TODO: make it work for blocks that define multiple selectors\n\t\t\t// such as core/heading or core/post-title.\n\t\t\tconst globalPath = `__experimentalFeatures.global.${ featurePath }`;\n\t\t\tconst blockPath = `__experimentalFeatures.${ blockName }.${ featurePath }`;\n\t\t\treturn get( settings, blockPath ) ?? get( settings, globalPath );\n\t\t},\n\t\t[ blockName, featurePath ]\n\t);\n\n\treturn setting;\n}\n"]}