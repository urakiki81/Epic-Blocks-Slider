{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-multi-selection.js"],"names":["getDeepestNode","node","type","child","sibling","nodeType","TEXT_NODE","test","data","selector","select","isSelectionEnabled","isMultiSelecting","getMultiSelectedBlockClientIds","hasMultiSelection","getBlockParents","getSelectedBlockClientId","multiSelectedBlockClientIds","selectedBlockClientId","toggleRichText","container","toggle","Array","from","querySelectorAll","forEach","setAttribute","removeAttribute","useMultiSelection","ref","startMultiSelect","stopMultiSelect","multiSelect","selectBlock","rafId","startClientId","anchorElement","selection","window","getSelection","rangeCount","isCollapsed","blockNode","getRangeAt","startContainer","endContainer","contains","removeAllRanges","length","start","end","startNode","endNode","range","document","createRange","setStartBefore","setEndAfter","addRange","onSelectionChange","isSelectionEnd","current","clientId","focusNode","isSingularSelection","commonAncestorContainer","focus","startPath","endPath","depth","Math","min","onSelectionEnd","removeEventListener","requestAnimationFrame","cancelAnimationFrame","activeElement","addEventListener"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useCallback } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getBlockClientId, getBlockDOMNode } from '../../utils/dom';\n\n/**\n * Returns for the deepest node at the start or end of a container node. Ignores\n * any text nodes that only contain HTML formatting whitespace.\n *\n * @param {Element} node Container to search.\n * @param {string} type 'start' or 'end'.\n */\nfunction getDeepestNode( node, type ) {\n\tconst child = type === 'start' ? 'firstChild' : 'lastChild';\n\tconst sibling = type === 'start' ? 'nextSibling' : 'previousSibling';\n\n\twhile ( node[ child ] ) {\n\t\tnode = node[ child ];\n\n\t\twhile (\n\t\t\tnode.nodeType === node.TEXT_NODE &&\n\t\t\t/^[ \\t\\n]*$/.test( node.data ) &&\n\t\t\tnode[ sibling ]\n\t\t) {\n\t\t\tnode = node[ sibling ];\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tisSelectionEnabled,\n\t\tisMultiSelecting,\n\t\tgetMultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tgetBlockParents,\n\t\tgetSelectedBlockClientId,\n\t} = select( 'core/block-editor' );\n\n\treturn {\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tgetBlockParents,\n\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t};\n}\n\nfunction toggleRichText( container, toggle ) {\n\tArray.from( container.querySelectorAll( '.rich-text' ) ).forEach(\n\t\t( node ) => {\n\t\t\tif ( toggle ) {\n\t\t\t\tnode.setAttribute( 'contenteditable', true );\n\t\t\t} else {\n\t\t\t\tnode.removeAttribute( 'contenteditable' );\n\t\t\t}\n\t\t}\n\t);\n}\n\nexport default function useMultiSelection( ref ) {\n\tconst {\n\t\tisSelectionEnabled,\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tgetBlockParents,\n\t\tselectedBlockClientId,\n\t} = useSelect( selector, [] );\n\tconst {\n\t\tstartMultiSelect,\n\t\tstopMultiSelect,\n\t\tmultiSelect,\n\t\tselectBlock,\n\t} = useDispatch( 'core/block-editor' );\n\tconst rafId = useRef();\n\tconst startClientId = useRef();\n\tconst anchorElement = useRef();\n\n\t/**\n\t * When the component updates, and there is multi selection, we need to\n\t * select the entire block contents.\n\t */\n\tuseEffect( () => {\n\t\tif ( ! hasMultiSelection || isMultiSelecting ) {\n\t\t\tif ( ! selectedBlockClientId || isMultiSelecting ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = window.getSelection();\n\n\t\t\tif ( selection.rangeCount && ! selection.isCollapsed ) {\n\t\t\t\tconst blockNode = getBlockDOMNode( selectedBlockClientId );\n\t\t\t\tconst { startContainer, endContainer } = selection.getRangeAt(\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!! blockNode &&\n\t\t\t\t\t( ! blockNode.contains( startContainer ) ||\n\t\t\t\t\t\t! blockNode.contains( endContainer ) )\n\t\t\t\t) {\n\t\t\t\t\tselection.removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst { length } = multiSelectedBlockClientIds;\n\n\t\tif ( length < 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// These must be in the right DOM order.\n\t\tconst start = multiSelectedBlockClientIds[ 0 ];\n\t\tconst end = multiSelectedBlockClientIds[ length - 1 ];\n\n\t\tlet startNode = getBlockDOMNode( start );\n\t\tlet endNode = getBlockDOMNode( end );\n\n\t\tconst selection = window.getSelection();\n\t\tconst range = document.createRange();\n\n\t\t// The most stable way to select the whole block contents is to start\n\t\t// and end at the deepest points.\n\t\tstartNode = getDeepestNode( startNode, 'start' );\n\t\tendNode = getDeepestNode( endNode, 'end' );\n\n\t\trange.setStartBefore( startNode );\n\t\trange.setEndAfter( endNode );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}, [\n\t\thasMultiSelection,\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\tselectBlock,\n\t\tselectedBlockClientId,\n\t] );\n\n\tconst onSelectionChange = useCallback(\n\t\t( { isSelectionEnd } ) => {\n\t\t\tconst selection = window.getSelection();\n\n\t\t\t// If no selection is found, end multi selection and enable all rich\n\t\t\t// text areas.\n\t\t\tif ( ! selection.rangeCount || selection.isCollapsed ) {\n\t\t\t\ttoggleRichText( ref.current, true );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst clientId = getBlockClientId( selection.focusNode );\n\t\t\tconst isSingularSelection = startClientId.current === clientId;\n\n\t\t\tif ( isSingularSelection ) {\n\t\t\t\tselectBlock( clientId );\n\n\t\t\t\t// If the selection is complete (on mouse up), and no multiple\n\t\t\t\t// blocks have been selected, set focus back to the anchor element\n\t\t\t\t// if the anchor element contains the selection. Additionally, rich\n\t\t\t\t// text elements that were previously disabled can now be enabled\n\t\t\t\t// again.\n\t\t\t\tif ( isSelectionEnd ) {\n\t\t\t\t\ttoggleRichText( ref.current, true );\n\n\t\t\t\t\tif ( selection.rangeCount ) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tcommonAncestorContainer,\n\t\t\t\t\t\t} = selection.getRangeAt( 0 );\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tanchorElement.current.contains(\n\t\t\t\t\t\t\t\tcommonAncestorContainer\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tanchorElement.current.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst startPath = [\n\t\t\t\t\t...getBlockParents( startClientId.current ),\n\t\t\t\t\tstartClientId.current,\n\t\t\t\t];\n\t\t\t\tconst endPath = [ ...getBlockParents( clientId ), clientId ];\n\t\t\t\tconst depth = Math.min( startPath.length, endPath.length ) - 1;\n\n\t\t\t\tmultiSelect( startPath[ depth ], endPath[ depth ] );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, getBlockParents, multiSelect ]\n\t);\n\n\t/**\n\t * Handles a mouseup event to end the current mouse multi-selection.\n\t */\n\tconst onSelectionEnd = useCallback( () => {\n\t\tdocument.removeEventListener( 'selectionchange', onSelectionChange );\n\t\t// Equivalent to attaching the listener once.\n\t\twindow.removeEventListener( 'mouseup', onSelectionEnd );\n\t\t// The browser selection won't have updated yet at this point, so wait\n\t\t// until the next animation frame to get the browser selection.\n\t\trafId.current = window.requestAnimationFrame( () => {\n\t\t\tonSelectionChange( { isSelectionEnd: true } );\n\t\t\tstopMultiSelect();\n\t\t} );\n\t}, [ onSelectionChange, stopMultiSelect ] );\n\n\t// Only clean up when unmounting, these are added and cleaned up elsewhere.\n\tuseEffect(\n\t\t() => () => {\n\t\t\tdocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\tonSelectionChange\n\t\t\t);\n\t\t\twindow.removeEventListener( 'mouseup', onSelectionEnd );\n\t\t\twindow.cancelAnimationFrame( rafId.current );\n\t\t},\n\t\t[ onSelectionChange, onSelectionEnd ]\n\t);\n\n\t/**\n\t * Binds event handlers to the document for tracking a pending multi-select\n\t * in response to a mousedown event occurring in a rendered block.\n\t */\n\treturn useCallback(\n\t\t( clientId ) => {\n\t\t\tif ( ! isSelectionEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartClientId.current = clientId;\n\t\t\tanchorElement.current = document.activeElement;\n\t\t\tstartMultiSelect();\n\n\t\t\t// `onSelectionStart` is called after `mousedown` and `mouseleave`\n\t\t\t// (from a block). The selection ends when `mouseup` happens anywhere\n\t\t\t// in the window.\n\t\t\tdocument.addEventListener( 'selectionchange', onSelectionChange );\n\t\t\twindow.addEventListener( 'mouseup', onSelectionEnd );\n\n\t\t\t// Removing the contenteditable attributes within the block editor is\n\t\t\t// essential for selection to work across editable areas. The edible\n\t\t\t// hosts are removed, allowing selection to be extended outside the\n\t\t\t// DOM element. `startMultiSelect` sets a flag in the store so the rich\n\t\t\t// text components are updated, but the rerender may happen very slowly,\n\t\t\t// especially in Safari for the blocks that are asynchonously rendered.\n\t\t\t// To ensure the browser instantly removes the selection boundaries, we\n\t\t\t// remove the contenteditable attributes manually.\n\t\t\ttoggleRichText( ref.current, false );\n\t\t},\n\t\t[ isSelectionEnabled, startMultiSelect, onSelectionEnd ]\n\t);\n}\n"]}