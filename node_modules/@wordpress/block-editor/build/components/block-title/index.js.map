{"version":3,"sources":["@wordpress/block-editor/src/components/block-title/index.js"],"names":["BlockTitle","clientId","select","getBlockName","getBlockAttributes","attributes","name","blockType","title","label","length"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AATA;;;;AAKA;;;;AASA;;;;;;;;;;;;;;;AAee,SAASA,UAAT,OAAoC;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,mBACrB,qBAC5B,UAAEC,MAAF,EAAc;AACb,QAAK,CAAED,QAAP,EAAkB;AACjB,aAAO,EAAP;AACA;;AAHY,kBAIgCC,MAAM,CAClD,mBADkD,CAJtC;AAAA,QAILC,YAJK,WAILA,YAJK;AAAA,QAISC,kBAJT,WAISA,kBAJT;;AAOb,WAAO;AACNC,MAAAA,UAAU,EAAED,kBAAkB,CAAEH,QAAF,CADxB;AAENK,MAAAA,IAAI,EAAEH,YAAY,CAAEF,QAAF;AAFZ,KAAP;AAIA,GAZ2B,EAa5B,CAAEA,QAAF,CAb4B,CADqB;AAAA,MAC1CI,UAD0C,cAC1CA,UAD0C;AAAA,MAC9BC,IAD8B,cAC9BA,IAD8B;;AAiBlD,MAAK,CAAEA,IAAP,EAAc;AACb,WAAO,IAAP;AACA;;AAED,MAAMC,SAAS,GAAG,0BAAcD,IAAd,CAAlB;;AACA,MAAK,CAAEC,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAxBiD,MA0B1CC,KA1B0C,GA0BhCD,SA1BgC,CA0B1CC,KA1B0C;AA2BlD,MAAMC,KAAK,GAAG,yCAAeF,SAAf,EAA0BF,UAA1B,CAAd,CA3BkD,CA6BlD;AACA;;AACA,MAAKI,KAAK,KAAKD,KAAf,EAAuB;AACtB,qBAAWA,KAAX,eAAuB,sBAAUC,KAAV,EAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB;AACA;;AACD,SAAOF,KAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { truncate } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tgetBlockType,\n\t__experimentalGetBlockLabel as getBlockLabel,\n} from '@wordpress/blocks';\n\n/**\n * Renders the block's configured title as a string, or empty if the title\n * cannot be determined.\n *\n * @example\n *\n * ```jsx\n * <BlockTitle clientId=\"afd1cb17-2c08-4e7a-91be-007ba7ddc3a1\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.clientId Client ID of block.\n *\n * @return {?string} Block title.\n */\nexport default function BlockTitle( { clientId } ) {\n\tconst { attributes, name } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! clientId ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t\tname: getBlockName( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tif ( ! name ) {\n\t\treturn null;\n\t}\n\n\tconst blockType = getBlockType( name );\n\tif ( ! blockType ) {\n\t\treturn null;\n\t}\n\n\tconst { title } = blockType;\n\tconst label = getBlockLabel( blockType, attributes );\n\n\t// Label will often fall back to the title if no label is defined for the\n\t// current label context. We do not want \"Paragraph: Paragraph\".\n\tif ( label !== title ) {\n\t\treturn `${ title }: ${ truncate( label, { length: 15 } ) }`;\n\t}\n\treturn title;\n}\n"]}