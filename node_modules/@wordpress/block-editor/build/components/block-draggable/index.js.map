{"version":3,"sources":["@wordpress/block-editor/src/components/block-draggable/index.js"],"names":["BlockDraggable","children","clientIds","cloneClassname","onDragStart","onDragEnd","elementId","select","getBlockRootClientId","getTemplateLock","rootClientId","templateLock","srcRootClientId","isDraggable","isDragging","startScrolling","scrollOnDragOver","stopScrolling","startDraggingBlocks","stopDraggingBlocks","current","transferData","type","srcClientIds","event","onDraggableStart","onDraggableEnd"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Draggable } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockDraggableChip from './draggable-chip';\nimport useScrollWhenDragging from './use-scroll-when-dragging';\n\nconst BlockDraggable = ( {\n\tchildren,\n\tclientIds,\n\tcloneClassname,\n\tonDragStart,\n\tonDragEnd,\n\telementId,\n} ) => {\n\tconst { srcRootClientId, isDraggable } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockRootClientId, getTemplateLock } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\tconst rootClientId = getBlockRootClientId( clientIds[ 0 ] );\n\t\t\tconst templateLock = rootClientId\n\t\t\t\t? getTemplateLock( rootClientId )\n\t\t\t\t: null;\n\n\t\t\treturn {\n\t\t\t\tsrcRootClientId: rootClientId,\n\t\t\t\tisDraggable: 'all' !== templateLock,\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\tconst isDragging = useRef( false );\n\tconst [\n\t\tstartScrolling,\n\t\tscrollOnDragOver,\n\t\tstopScrolling,\n\t] = useScrollWhenDragging();\n\n\tconst { startDraggingBlocks, stopDraggingBlocks } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\n\t// Stop dragging blocks if the block draggable is unmounted\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\tif ( isDragging.current ) {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tif ( ! isDraggable ) {\n\t\treturn children( { isDraggable: false } );\n\t}\n\n\tconst transferData = {\n\t\ttype: 'block',\n\t\tsrcClientIds: clientIds,\n\t\tsrcRootClientId,\n\t};\n\n\treturn (\n\t\t<Draggable\n\t\t\tcloneClassname={ cloneClassname }\n\t\t\telementId={ elementId || `block-${ clientIds[ 0 ] }` }\n\t\t\ttransferData={ transferData }\n\t\t\tonDragStart={ ( event ) => {\n\t\t\t\tstartDraggingBlocks( clientIds );\n\t\t\t\tisDragging.current = true;\n\n\t\t\t\tstartScrolling( event );\n\n\t\t\t\tif ( onDragStart ) {\n\t\t\t\t\tonDragStart();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonDragOver={ scrollOnDragOver }\n\t\t\tonDragEnd={ () => {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t\tisDragging.current = false;\n\n\t\t\t\tstopScrolling();\n\n\t\t\t\tif ( onDragEnd ) {\n\t\t\t\t\tonDragEnd();\n\t\t\t\t}\n\t\t\t} }\n\t\t\t__experimentalDragComponent={\n\t\t\t\t<BlockDraggableChip clientIds={ clientIds } />\n\t\t\t}\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tisDraggable: true,\n\t\t\t\t\tonDraggableStart,\n\t\t\t\t\tonDraggableEnd,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default BlockDraggable;\n"]}