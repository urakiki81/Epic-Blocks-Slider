{"version":3,"sources":["@wordpress/block-editor/src/components/page-template-picker/picker.native.js"],"names":["PICKER_HEIGHT_OFFSET","__experimentalPageTemplatePicker","templates","visible","editPost","select","getEditedPostAttribute","title","templatePreview","setTemplatePreview","pickerVisible","setPickerVisible","tooltipVisible","setTooltipVisible","contentOpacity","Animated","Value","current","shouldShowPicker","startPickerAnimation","shouldShowTooltip","Keyboard","addListener","onKeyboardDidShow","onKeyboardDidHide","removeListener","windowHeight","Dimensions","get","height","tooltipShown","onApply","name","blocks","userEvents","editorSessionTemplateApply","template","key","undefined","onTooltipHidden","isVisible","timing","toValue","duration","useNativeDriver","start","opacity","map","icon","editorSessionTemplatePreview"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Tooltip from './tooltip';\n\n/**\n * External dependencies\n */\nimport {\n\tlogUserEvent,\n\tuserEvents,\n\trequestStarterPageTemplatesTooltipShown,\n\tsetStarterPageTemplatesTooltipShown,\n} from '@wordpress/react-native-bridge';\nimport { Animated, Dimensions, Keyboard } from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport Button from './button';\nimport Container from './container';\nimport getDefaultTemplates from './default-templates';\nimport Preview from './preview';\n\n// Used to hide the picker if there's no enough space in the window\nconst PICKER_HEIGHT_OFFSET = 150;\n\nconst __experimentalPageTemplatePicker = ( {\n\ttemplates = getDefaultTemplates(),\n\tvisible,\n} ) => {\n\tconst { editPost } = useDispatch( 'core/editor' );\n\tconst { title } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t};\n\t} );\n\n\tconst [ templatePreview, setTemplatePreview ] = useState();\n\tconst [ pickerVisible, setPickerVisible ] = useState( visible );\n\tconst [ tooltipVisible, setTooltipVisible ] = useState( false );\n\tconst contentOpacity = useRef( new Animated.Value( 0 ) ).current;\n\n\tuseEffect( () => {\n\t\tif ( shouldShowPicker() && visible && ! pickerVisible ) {\n\t\t\tsetPickerVisible( true );\n\t\t}\n\n\t\tstartPickerAnimation( visible );\n\t\tshouldShowTooltip();\n\n\t\tKeyboard.addListener( 'keyboardDidShow', onKeyboardDidShow );\n\t\tKeyboard.addListener( 'keyboardDidHide', onKeyboardDidHide );\n\n\t\treturn () => {\n\t\t\tKeyboard.removeListener( 'keyboardDidShow', onKeyboardDidShow );\n\t\t\tKeyboard.removeListener( 'keyboardDidHide', onKeyboardDidHide );\n\t\t};\n\t}, [ visible ] );\n\n\tuseEffect( () => {\n\t\tif ( tooltipVisible && templatePreview ) {\n\t\t\tsetTooltipVisible( false );\n\t\t}\n\t}, [ templatePreview ] );\n\n\tconst onKeyboardDidShow = () => {\n\t\tif ( visible ) {\n\t\t\tstartPickerAnimation( shouldShowPicker() );\n\t\t}\n\t};\n\n\tconst onKeyboardDidHide = () => {\n\t\tif ( visible ) {\n\t\t\tsetPickerVisible( true );\n\t\t\tstartPickerAnimation( true );\n\t\t}\n\t};\n\n\tconst shouldShowPicker = () => {\n\t\t// On smaller devices on landscape we hide the picker\n\t\t// so it doesn't overlap with the editor's content\n\t\tconst windowHeight = Dimensions.get( 'window' ).height;\n\t\treturn PICKER_HEIGHT_OFFSET < windowHeight / 3;\n\t};\n\n\tconst shouldShowTooltip = () => {\n\t\trequestStarterPageTemplatesTooltipShown( ( tooltipShown ) => {\n\t\t\tif ( ! tooltipShown ) {\n\t\t\t\tsetTooltipVisible( true );\n\t\t\t\tsetStarterPageTemplatesTooltipShown( true );\n\t\t\t}\n\t\t} );\n\t};\n\n\tconst onApply = () => {\n\t\teditPost( {\n\t\t\ttitle: title || templatePreview.name,\n\t\t\tblocks: templatePreview.blocks,\n\t\t} );\n\t\tlogUserEvent( userEvents.editorSessionTemplateApply, {\n\t\t\ttemplate: templatePreview.key,\n\t\t} );\n\t\tsetTemplatePreview( undefined );\n\t};\n\n\tconst onTooltipHidden = () => {\n\t\tsetTooltipVisible( false );\n\t};\n\n\tconst startPickerAnimation = ( isVisible ) => {\n\t\tAnimated.timing( contentOpacity, {\n\t\t\ttoValue: isVisible ? 1 : 0,\n\t\t\tduration: 300,\n\t\t\tuseNativeDriver: true,\n\t\t} ).start( () => {\n\t\t\tif ( ! isVisible ) {\n\t\t\t\tsetPickerVisible( isVisible );\n\t\t\t}\n\t\t} );\n\t};\n\n\tif ( ! pickerVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Animated.View style={ [ { opacity: contentOpacity } ] }>\n\t\t\t{ tooltipVisible && (\n\t\t\t\t<Tooltip onTooltipHidden={ onTooltipHidden } />\n\t\t\t) }\n\t\t\t<Container>\n\t\t\t\t{ templates.map( ( template ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ template.key }\n\t\t\t\t\t\ticon={ template.icon }\n\t\t\t\t\t\tlabel={ template.name }\n\t\t\t\t\t\tonPress={ () => {\n\t\t\t\t\t\t\tlogUserEvent(\n\t\t\t\t\t\t\t\tuserEvents.editorSessionTemplatePreview,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttemplate: template.key,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetTemplatePreview( template );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</Container>\n\t\t\t<Preview\n\t\t\t\ttemplate={ templatePreview }\n\t\t\t\tonDismiss={ () => setTemplatePreview( undefined ) }\n\t\t\t\tonApply={ onApply }\n\t\t\t/>\n\t\t</Animated.View>\n\t);\n};\n\nexport default __experimentalPageTemplatePicker;\n"]}