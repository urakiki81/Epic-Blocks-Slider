{"version":3,"sources":["@wordpress/block-editor/src/components/page-template-picker/tooltip/index.native.js"],"names":["Tooltip","onTooltipHidden","visible","setVisible","animationValue","Animated","Value","current","startAnimation","onHide","timing","toValue","duration","useNativeDriver","delay","easing","Easing","out","quad","start","stylesOverlay","styles","overlay","height","Dimensions","get","opacity","transform","translateY","interpolate","inputRange","outputRange","tooltip","shadowColor","tooltipShadow","color","shadowOffset","width","shadowOpacity","shadowRadius","elevation","text","arrow"],"mappings":";;;;;;;;;AAgBA;;;;AAbA;;AAYA;;AAMA;;AArBA;;;;AAYA;;;;AAMA;;;AAKA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAA2B;AAAA,MAAvBC,eAAuB,QAAvBA,eAAuB;;AAAA,kBACV,uBAAU,IAAV,CADU;AAAA;AAAA,MAClCC,OADkC;AAAA,MACzBC,UADyB;;AAE1C,MAAMC,cAAc,GAAG,qBAAQ,IAAIC,sBAASC,KAAb,CAAoB,CAApB,CAAR,EAAkCC,OAAzD;AAEA,0BAAW,YAAM;AAChBC,IAAAA,cAAc;AACd,GAFD,EAEG,CAAEN,OAAF,CAFH;;AAIA,MAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AACpBN,IAAAA,UAAU,CAAE,KAAF,CAAV;AACA,GAFD;;AAIA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC5BH,0BAASK,MAAT,CAAiBN,cAAjB,EAAiC;AAChCO,MAAAA,OAAO,EAAET,OAAO,GAAG,CAAH,GAAO,CADS;AAEhCU,MAAAA,QAAQ,EAAEV,OAAO,GAAG,GAAH,GAAS,GAFM;AAGhCW,MAAAA,eAAe,EAAE,IAHe;AAIhCC,MAAAA,KAAK,EAAEZ,OAAO,GAAG,GAAH,GAAS,CAJS;AAKhCa,MAAAA,MAAM,EAAEC,oBAAOC,GAAP,CAAYD,oBAAOE,IAAnB;AALwB,KAAjC,EAMIC,KANJ,CAMW,YAAM;AAChB,UAAK,CAAEjB,OAAF,IAAaD,eAAlB,EAAoC;AACnCA,QAAAA,eAAe;AACf;AACD,KAVD;AAWA,GAZD;;AAcA,MAAMmB,aAAa,GAAG,CACrBC,eAAOC,OADc,EAErB;AAAEC,IAAAA,MAAM,EAAEC,wBAAWC,GAAX,CAAgB,QAAhB,EAA2BF;AAArC,GAFqB,CAAtB;AAKA,SACC,qDACC,4BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAGd;AAApC,KACC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGW;AAAd,IADD,CADD,EAIC,4BAAC,qBAAD,CAAU,IAAV;AACC,IAAA,KAAK,EAAG;AACPM,MAAAA,OAAO,EAAEtB,cADF;AAEPuB,MAAAA,SAAS,EAAE,CACV;AACCC,QAAAA,UAAU,EAAExB,cAAc,CAACyB,WAAf,CAA4B;AACvCC,UAAAA,UAAU,EAAE,CAAE,CAAF,EAAK,CAAL,CAD2B;AAEvCC,UAAAA,WAAW,EAAE,CAAE7B,OAAO,GAAG,CAAH,GAAO,CAAC,CAAjB,EAAoB,CAAC,CAArB;AAF0B,SAA5B;AADb,OADU;AAFJ;AADT,KAaC,4BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAGO;AAApC,KACC,4BAAC,iBAAD;AACC,IAAA,KAAK,EAAG,CACPY,eAAOW,OADA,EAEP;AACCC,MAAAA,WAAW,EAAEZ,eAAOa,aAAP,CAAqBC,KADnC;AAECC,MAAAA,YAAY,EAAE;AACbC,QAAAA,KAAK,EAAE,CADM;AAEbd,QAAAA,MAAM,EAAE;AAFK,OAFf;AAMCe,MAAAA,aAAa,EAAE,IANhB;AAOCC,MAAAA,YAAY,EAAE,CAPf;AAQCC,MAAAA,SAAS,EAAE;AARZ,KAFO;AADT,KAeC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGnB,eAAOoB;AAArB,KACG,cAAI,sBAAJ,CADH,CAfD,EAkBC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGpB,eAAOqB;AAArB,IAlBD,CADD,CAbD,CAJD,CADD;AA2CA,CA1ED;;eA4Ee1C,O","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tAnimated,\n\tEasing,\n\tText,\n\tTouchableWithoutFeedback,\n\tView,\n\tDimensions,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nconst Tooltip = ( { onTooltipHidden } ) => {\n\tconst [ visible, setVisible ] = useState( true );\n\tconst animationValue = useRef( new Animated.Value( 0 ) ).current;\n\n\tuseEffect( () => {\n\t\tstartAnimation();\n\t}, [ visible ] );\n\n\tconst onHide = () => {\n\t\tsetVisible( false );\n\t};\n\n\tconst startAnimation = () => {\n\t\tAnimated.timing( animationValue, {\n\t\t\ttoValue: visible ? 1 : 0,\n\t\t\tduration: visible ? 300 : 150,\n\t\t\tuseNativeDriver: true,\n\t\t\tdelay: visible ? 500 : 0,\n\t\t\teasing: Easing.out( Easing.quad ),\n\t\t} ).start( () => {\n\t\t\tif ( ! visible && onTooltipHidden ) {\n\t\t\t\tonTooltipHidden();\n\t\t\t}\n\t\t} );\n\t};\n\n\tconst stylesOverlay = [\n\t\tstyles.overlay,\n\t\t{ height: Dimensions.get( 'window' ).height },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<TouchableWithoutFeedback onPress={ onHide }>\n\t\t\t\t<View style={ stylesOverlay } />\n\t\t\t</TouchableWithoutFeedback>\n\t\t\t<Animated.View\n\t\t\t\tstyle={ {\n\t\t\t\t\topacity: animationValue,\n\t\t\t\t\ttransform: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttranslateY: animationValue.interpolate( {\n\t\t\t\t\t\t\t\tinputRange: [ 0, 1 ],\n\t\t\t\t\t\t\t\toutputRange: [ visible ? 4 : -8, -8 ],\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<TouchableWithoutFeedback onPress={ onHide }>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\tstyles.tooltip,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshadowColor: styles.tooltipShadow.color,\n\t\t\t\t\t\t\t\tshadowOffset: {\n\t\t\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\t\t\theight: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tshadowOpacity: 0.25,\n\t\t\t\t\t\t\t\tshadowRadius: 2,\n\t\t\t\t\t\t\t\televation: 2,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={ styles.text }>\n\t\t\t\t\t\t\t{ __( 'Try a starter layout' ) }\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<View style={ styles.arrow } />\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t</Animated.View>\n\t\t</>\n\t);\n};\n\nexport default Tooltip;\n"]}