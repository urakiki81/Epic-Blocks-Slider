{"version":3,"sources":["@wordpress/block-editor/src/components/block-toolbar/index.js"],"names":["BlockToolbar","hideDragHandle","__experimentalExpandedControl","select","getBlockName","getBlockMode","getSelectedBlockClientIds","isBlockValid","getBlockRootClientId","getSettings","selectedBlockClientIds","selectedBlockClientId","blockRootClientId","blockClientIds","blockClientId","blockType","hasFixedToolbar","rootClientId","isValid","every","id","isVisual","toggleBlockHighlight","nodeRef","ref","onChange","isFocused","showMovers","showMoversGestures","gestures","displayHeaderToolbar","shouldShowMovers","length","shouldShowVisualToolbar","isMultiToolbar","classes","Wrapper","ExpandedBlockControlsContainer"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useRef } from '@wordpress/element';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { getBlockType, hasBlockSupport } from '@wordpress/blocks';\nimport { ToolbarGroup } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockMover from '../block-mover';\nimport BlockParentSelector from '../block-parent-selector';\nimport BlockSwitcher from '../block-switcher';\nimport BlockControls from '../block-controls';\nimport BlockFormatControls from '../block-format-controls';\nimport BlockSettingsMenu from '../block-settings-menu';\nimport { useShowMoversGestures } from './utils';\nimport ExpandedBlockControlsContainer from './expanded-block-controls-container';\n\nexport default function BlockToolbar( {\n\thideDragHandle,\n\t__experimentalExpandedControl = false,\n} ) {\n\tconst {\n\t\tblockClientIds,\n\t\tblockClientId,\n\t\tblockType,\n\t\thasFixedToolbar,\n\t\tisValid,\n\t\tisVisual,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockName,\n\t\t\tgetBlockMode,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\tisBlockValid,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\tconst selectedBlockClientId = selectedBlockClientIds[ 0 ];\n\t\tconst blockRootClientId = getBlockRootClientId( selectedBlockClientId );\n\n\t\treturn {\n\t\t\tblockClientIds: selectedBlockClientIds,\n\t\t\tblockClientId: selectedBlockClientId,\n\t\t\tblockType:\n\t\t\t\tselectedBlockClientId &&\n\t\t\t\tgetBlockType( getBlockName( selectedBlockClientId ) ),\n\t\t\thasFixedToolbar: getSettings().hasFixedToolbar,\n\t\t\trootClientId: blockRootClientId,\n\t\t\tisValid: selectedBlockClientIds.every( ( id ) =>\n\t\t\t\tisBlockValid( id )\n\t\t\t),\n\t\t\tisVisual: selectedBlockClientIds.every(\n\t\t\t\t( id ) => getBlockMode( id ) === 'visual'\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { toggleBlockHighlight } = useDispatch( 'core/block-editor' );\n\tconst nodeRef = useRef();\n\n\tconst { showMovers, gestures: showMoversGestures } = useShowMoversGestures(\n\t\t{\n\t\t\tref: nodeRef,\n\t\t\tonChange( isFocused ) {\n\t\t\t\ttoggleBlockHighlight( blockClientId, isFocused );\n\t\t\t},\n\t\t}\n\t);\n\n\tconst displayHeaderToolbar =\n\t\tuseViewportMatch( 'medium', '<' ) || hasFixedToolbar;\n\n\tif ( blockType ) {\n\t\tif ( ! hasBlockSupport( blockType, '__experimentalToolbar', true ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconst shouldShowMovers = displayHeaderToolbar || showMovers;\n\n\tif ( blockClientIds.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst shouldShowVisualToolbar = isValid && isVisual;\n\tconst isMultiToolbar = blockClientIds.length > 1;\n\n\tconst classes = classnames(\n\t\t'block-editor-block-toolbar',\n\t\tshouldShowMovers && 'is-showing-movers'\n\t);\n\n\tconst Wrapper = __experimentalExpandedControl\n\t\t? ExpandedBlockControlsContainer\n\t\t: 'div';\n\n\treturn (\n\t\t<Wrapper className={ classes }>\n\t\t\t<div ref={ nodeRef } { ...showMoversGestures }>\n\t\t\t\t{ ! isMultiToolbar && (\n\t\t\t\t\t<div className=\"block-editor-block-toolbar__block-parent-selector-wrapper\">\n\t\t\t\t\t\t<BlockParentSelector clientIds={ blockClientIds } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ ( shouldShowVisualToolbar || isMultiToolbar ) && (\n\t\t\t\t\t<ToolbarGroup className=\"block-editor-block-toolbar__block-controls\">\n\t\t\t\t\t\t<BlockSwitcher clientIds={ blockClientIds } />\n\t\t\t\t\t\t<BlockMover\n\t\t\t\t\t\t\tclientIds={ blockClientIds }\n\t\t\t\t\t\t\thideDragHandle={ hideDragHandle }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ shouldShowVisualToolbar && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockControls.Slot\n\t\t\t\t\t\tbubblesVirtually\n\t\t\t\t\t\tclassName=\"block-editor-block-toolbar__slot\"\n\t\t\t\t\t/>\n\t\t\t\t\t<BlockFormatControls.Slot\n\t\t\t\t\t\tbubblesVirtually\n\t\t\t\t\t\tclassName=\"block-editor-block-toolbar__slot\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<BlockSettingsMenu clientIds={ blockClientIds } />\n\t\t</Wrapper>\n\t);\n}\n"]}