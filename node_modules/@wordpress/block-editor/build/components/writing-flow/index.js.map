{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/index.js"],"names":["window","getSelection","getComputedStyle","isTabbableTextField","isTextField","focus","tabbable","isTabbableIndex","isNavigationCandidate","element","keyCode","hasModifier","isVertical","UP","DOWN","tagName","getClosestTabbable","target","isReverse","containerElement","onlyVertical","focusableNodes","focusable","find","slice","indexOf","targetRect","getBoundingClientRect","isTabCandidate","node","i","array","nodeRect","left","right","contains","offset","nextNode","selector","select","getSelectedBlockClientId","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getPreviousBlockClientId","getNextBlockClientId","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","hasMultiSelection","getBlockOrder","isNavigationMode","hasBlockMovingClientId","getBlockIndex","getBlockRootClientId","getClientIdsOfDescendants","canInsertBlockType","getBlockName","isSelectionEnabled","getBlockSelectionStart","isMultiSelecting","getSettings","selectedBlockClientId","selectionStartClientId","selectionEndClientId","selectionBeforeEndClientId","selectionAfterEndClientId","selectedFirstClientId","selectedLastClientId","blocks","blockSelectionStart","keepCaretInsideBlock","WritingFlow","children","container","focusCaptureBeforeRef","focusCaptureAfterRef","multiSelectionContainer","entirelySelected","noCapture","verticalRect","multiSelect","selectBlock","clearSelectedBlock","setNavigationMode","setBlockMovingClientId","moveBlockToPosition","canInsertMovingBlock","setCanInsertMovingBlock","onMouseDown","event","current","button","clientId","shiftKey","preventDefault","expandSelection","nextSelectionEndClientId","moveSelection","focusedBlockClientId","isTabbableEdge","closestTabbable","onKeyDown","isUp","isDown","isLeft","LEFT","isRight","RIGHT","isTab","TAB","isEscape","ESCAPE","isEnter","ENTER","isSpace","SPACE","isHorizontal","isNav","isShift","ctrlKey","altKey","metaKey","isNavEdge","isVerticalEdge","isHorizontalEdge","navigateUp","navigateDown","navigateOut","navigateIn","focusedBlockUid","startingBlockClientId","sourceRoot","destRoot","sourceBlockIndex","destinationBlockIndex","wrapper","nextTabbable","findNext","findPrevious","tabbables","lastTabbable","isKeyboardEvent","primary","isContentEditable","nativeEvent","defaultPrevented","direction","isReverseDir","isCollapsed","focusLastTextField","className","undefined","position"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { overEvery, find, findLast, reverse, first, last } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useState } from '@wordpress/element';\nimport {\n\tcomputeCaretRect,\n\tfocus,\n\tisHorizontalEdge,\n\tisTextField,\n\tisVerticalEdge,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n\tisEntirelySelected,\n} from '@wordpress/dom';\nimport {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n\tTAB,\n\tisKeyboardEvent,\n\tESCAPE,\n\tENTER,\n\tSPACE,\n} from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisBlockFocusStop,\n\tisInSameBlock,\n\thasInnerBlocksContext,\n\tisInsideRootBlock,\n\tgetBlockDOMNode,\n\tgetBlockClientId,\n} from '../../utils/dom';\nimport FocusCapture from './focus-capture';\n\n/**\n * Browser constants\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/**\n * Given an element, returns true if the element is a tabbable text field, or\n * false otherwise.\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a tabbable text field.\n */\nconst isTabbableTextField = overEvery( [\n\tisTextField,\n\tfocus.tabbable.isTabbableIndex,\n] );\n\n/**\n * Returns true if the element should consider edge navigation upon a keyboard\n * event of the given directional key code, or false otherwise.\n *\n * @param {Element} element     HTML element to test.\n * @param {number}  keyCode     KeyboardEvent keyCode to test.\n * @param {boolean} hasModifier Whether a modifier is pressed.\n *\n * @return {boolean} Whether element should consider edge navigation.\n */\nexport function isNavigationCandidate( element, keyCode, hasModifier ) {\n\tconst isVertical = keyCode === UP || keyCode === DOWN;\n\n\t// Currently, all elements support unmodified vertical navigation.\n\tif ( isVertical && ! hasModifier ) {\n\t\treturn true;\n\t}\n\n\t// Native inputs should not navigate horizontally.\n\tconst { tagName } = element;\n\treturn tagName !== 'INPUT' && tagName !== 'TEXTAREA';\n}\n\n/**\n * Returns the optimal tab target from the given focused element in the\n * desired direction. A preference is made toward text fields, falling back\n * to the block focus stop if no other candidates exist for the block.\n *\n * @param {Element} target           Currently focused text field.\n * @param {boolean} isReverse        True if considering as the first field.\n * @param {Element} containerElement Element containing all blocks.\n * @param {boolean} onlyVertical     Wether to only consider tabbable elements\n *                                   that are visually above or under the\n *                                   target.\n *\n * @return {?Element} Optimal tab target, if one exists.\n */\nexport function getClosestTabbable(\n\ttarget,\n\tisReverse,\n\tcontainerElement,\n\tonlyVertical\n) {\n\t// Since the current focus target is not guaranteed to be a text field,\n\t// find all focusables. Tabbability is considered later.\n\tlet focusableNodes = focus.focusable.find( containerElement );\n\n\tif ( isReverse ) {\n\t\tfocusableNodes = reverse( focusableNodes );\n\t}\n\n\t// Consider as candidates those focusables after the current target.\n\t// It's assumed this can only be reached if the target is focusable\n\t// (on its keydown event), so no need to verify it exists in the set.\n\tfocusableNodes = focusableNodes.slice(\n\t\tfocusableNodes.indexOf( target ) + 1\n\t);\n\n\tlet targetRect;\n\n\tif ( onlyVertical ) {\n\t\ttargetRect = target.getBoundingClientRect();\n\t}\n\n\tfunction isTabCandidate( node, i, array ) {\n\t\t// Not a candidate if the node is not tabbable.\n\t\tif ( ! focus.tabbable.isTabbableIndex( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( onlyVertical ) {\n\t\t\tconst nodeRect = node.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tnodeRect.left >= targetRect.right ||\n\t\t\t\tnodeRect.right <= targetRect.left\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Prefer text fields...\n\t\tif ( isTextField( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// ...but settle for block focus stop.\n\t\tif ( ! isBlockFocusStop( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If element contains inner blocks, stop immediately at its focus\n\t\t// wrapper.\n\t\tif ( hasInnerBlocksContext( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If navigating out of a block (in reverse), don't consider its\n\t\t// block focus stop.\n\t\tif ( node.contains( target ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In case of block focus stop, check to see if there's a better\n\t\t// text field candidate within.\n\t\tfor (\n\t\t\tlet offset = 1, nextNode;\n\t\t\t( nextNode = array[ i + offset ] );\n\t\t\toffset++\n\t\t) {\n\t\t\t// Abort if no longer testing descendents of focus stop.\n\t\t\tif ( ! node.contains( nextNode ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Apply same tests by recursion. This is important to consider\n\t\t\t// nestable blocks where we don't want to settle for the inner\n\t\t\t// block focus stop.\n\t\t\tif ( isTabCandidate( nextNode, i + offset, array ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn find( focusableNodes, isTabCandidate );\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetMultiSelectedBlocksStartClientId,\n\t\tgetMultiSelectedBlocksEndClientId,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetFirstMultiSelectedBlockClientId,\n\t\tgetLastMultiSelectedBlockClientId,\n\t\thasMultiSelection,\n\t\tgetBlockOrder,\n\t\tisNavigationMode,\n\t\thasBlockMovingClientId,\n\t\tgetBlockIndex,\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t\tcanInsertBlockType,\n\t\tgetBlockName,\n\t\tisSelectionEnabled,\n\t\tgetBlockSelectionStart,\n\t\tisMultiSelecting,\n\t\tgetSettings,\n\t} = select( 'core/block-editor' );\n\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectionStartClientId = getMultiSelectedBlocksStartClientId();\n\tconst selectionEndClientId = getMultiSelectedBlocksEndClientId();\n\n\treturn {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId: getPreviousBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectionAfterEndClientId: getNextBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectedFirstClientId: getFirstMultiSelectedBlockClientId(),\n\t\tselectedLastClientId: getLastMultiSelectedBlockClientId(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tblocks: getBlockOrder(),\n\t\tisNavigationMode: isNavigationMode(),\n\t\thasBlockMovingClientId,\n\t\tgetBlockIndex,\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t\tcanInsertBlockType,\n\t\tgetBlockName,\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tblockSelectionStart: getBlockSelectionStart(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tkeepCaretInsideBlock: getSettings().keepCaretInsideBlock,\n\t};\n}\n\n/**\n * Handles selection and navigation across blocks. This component should be\n * wrapped around BlockList.\n *\n * @param {Object}    props          Component properties.\n * @param {WPElement} props.children Children to be rendered.\n */\nexport default function WritingFlow( { children } ) {\n\tconst container = useRef();\n\tconst focusCaptureBeforeRef = useRef();\n\tconst focusCaptureAfterRef = useRef();\n\tconst multiSelectionContainer = useRef();\n\n\tconst entirelySelected = useRef();\n\n\t// Reference that holds the a flag for enabling or disabling\n\t// capturing on the focus capture elements.\n\tconst noCapture = useRef();\n\n\t// Here a DOMRect is stored while moving the caret vertically so vertical\n\t// position of the start position can be restored. This is to recreate\n\t// browser behaviour across blocks.\n\tconst verticalRect = useRef();\n\n\tconst {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId,\n\t\tselectionAfterEndClientId,\n\t\tselectedFirstClientId,\n\t\tselectedLastClientId,\n\t\thasMultiSelection,\n\t\tblocks,\n\t\tisNavigationMode,\n\t\thasBlockMovingClientId,\n\t\tisSelectionEnabled,\n\t\tblockSelectionStart,\n\t\tisMultiSelecting,\n\t\tgetBlockIndex,\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t\tcanInsertBlockType,\n\t\tgetBlockName,\n\t\tkeepCaretInsideBlock,\n\t} = useSelect( selector, [] );\n\tconst {\n\t\tmultiSelect,\n\t\tselectBlock,\n\t\tclearSelectedBlock,\n\t\tsetNavigationMode,\n\t\tsetBlockMovingClientId,\n\t\tmoveBlockToPosition,\n\t} = useDispatch( 'core/block-editor' );\n\n\tconst [ canInsertMovingBlock, setCanInsertMovingBlock ] = useState( false );\n\n\tfunction onMouseDown( event ) {\n\t\tverticalRect.current = null;\n\n\t\t// Clicking inside a selected block should exit navigation mode and block moving mode.\n\t\tif (\n\t\t\tisNavigationMode &&\n\t\t\tselectedBlockClientId &&\n\t\t\tisInsideRootBlock(\n\t\t\t\tgetBlockDOMNode( selectedBlockClientId ),\n\t\t\t\tevent.target\n\t\t\t)\n\t\t) {\n\t\t\tsetNavigationMode( false );\n\t\t\tsetBlockMovingClientId( null );\n\t\t} else if (\n\t\t\tisNavigationMode &&\n\t\t\thasBlockMovingClientId() &&\n\t\t\tgetBlockClientId( event.target )\n\t\t) {\n\t\t\tsetCanInsertMovingBlock(\n\t\t\t\tcanInsertBlockType(\n\t\t\t\t\tgetBlockName( hasBlockMovingClientId() ),\n\t\t\t\t\tgetBlockRootClientId( getBlockClientId( event.target ) )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// Multi-select blocks when Shift+clicking.\n\t\tif (\n\t\t\tisSelectionEnabled &&\n\t\t\t// The main button.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\t\tevent.button === 0\n\t\t) {\n\t\t\tconst clientId = getBlockClientId( event.target );\n\n\t\t\tif ( clientId ) {\n\t\t\t\tif ( event.shiftKey ) {\n\t\t\t\t\tif ( blockSelectionStart !== clientId ) {\n\t\t\t\t\t\tmultiSelect( blockSelectionStart, clientId );\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t\t\t// selection of a block via click. This is handled here since\n\t\t\t\t\t// focus handling excludes blocks when there is multiselection,\n\t\t\t\t\t// as focus can be incurred by starting a multiselection (focus\n\t\t\t\t\t// moved to first block's multi-controls).\n\t\t\t\t} else if ( hasMultiSelection ) {\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction expandSelection( isReverse ) {\n\t\tconst nextSelectionEndClientId = isReverse\n\t\t\t? selectionBeforeEndClientId\n\t\t\t: selectionAfterEndClientId;\n\n\t\tif ( nextSelectionEndClientId ) {\n\t\t\tmultiSelect(\n\t\t\t\tselectionStartClientId || selectedBlockClientId,\n\t\t\t\tnextSelectionEndClientId\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction moveSelection( isReverse ) {\n\t\tconst focusedBlockClientId = isReverse\n\t\t\t? selectedFirstClientId\n\t\t\t: selectedLastClientId;\n\n\t\tif ( focusedBlockClientId ) {\n\t\t\tselectBlock( focusedBlockClientId );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the given target field is the last in its block which\n\t * can be considered for tab transition. For example, in a block with two\n\t * text fields, this would return true when reversing from the first of the\n\t * two fields, but false when reversing from the second.\n\t *\n\t * @param {Element} target    Currently focused text field.\n\t * @param {boolean} isReverse True if considering as the first field.\n\t *\n\t * @return {boolean} Whether field is at edge for tab transition.\n\t */\n\tfunction isTabbableEdge( target, isReverse ) {\n\t\tconst closestTabbable = getClosestTabbable(\n\t\t\ttarget,\n\t\t\tisReverse,\n\t\t\tcontainer.current\n\t\t);\n\t\treturn ! closestTabbable || ! isInSameBlock( target, closestTabbable );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, target } = event;\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isTab = keyCode === TAB;\n\t\tconst isEscape = keyCode === ESCAPE;\n\t\tconst isEnter = keyCode === ENTER;\n\t\tconst isSpace = keyCode === SPACE;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\t\tconst isShift = event.shiftKey;\n\t\tconst hasModifier =\n\t\t\tisShift || event.ctrlKey || event.altKey || event.metaKey;\n\t\tconst isNavEdge = isVertical ? isVerticalEdge : isHorizontalEdge;\n\n\t\t// In navigation mode, tab and arrows navigate from block to block.\n\t\tif ( isNavigationMode ) {\n\t\t\tconst navigateUp = ( isTab && isShift ) || isUp;\n\t\t\tconst navigateDown = ( isTab && ! isShift ) || isDown;\n\t\t\t// Move out of current nesting level (no effect if at root level).\n\t\t\tconst navigateOut = isLeft;\n\t\t\t// Move into next nesting level (no effect if the current block has no innerBlocks).\n\t\t\tconst navigateIn = isRight;\n\n\t\t\tlet focusedBlockUid;\n\t\t\tif ( navigateUp ) {\n\t\t\t\tfocusedBlockUid = selectionBeforeEndClientId;\n\t\t\t} else if ( navigateDown ) {\n\t\t\t\tfocusedBlockUid = selectionAfterEndClientId;\n\t\t\t} else if ( navigateOut ) {\n\t\t\t\tfocusedBlockUid =\n\t\t\t\t\tgetBlockRootClientId( selectedBlockClientId ) ??\n\t\t\t\t\tselectedBlockClientId;\n\t\t\t} else if ( navigateIn ) {\n\t\t\t\tfocusedBlockUid =\n\t\t\t\t\tgetClientIdsOfDescendants( [\n\t\t\t\t\t\tselectedBlockClientId,\n\t\t\t\t\t] )[ 0 ] ?? selectedBlockClientId;\n\t\t\t}\n\t\t\tconst startingBlockClientId = hasBlockMovingClientId();\n\n\t\t\tif ( startingBlockClientId && focusedBlockUid ) {\n\t\t\t\tsetCanInsertMovingBlock(\n\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\tgetBlockName( startingBlockClientId ),\n\t\t\t\t\t\tgetBlockRootClientId( focusedBlockUid )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif ( isEscape && startingBlockClientId ) {\n\t\t\t\tsetBlockMovingClientId( null );\n\t\t\t\tsetCanInsertMovingBlock( false );\n\t\t\t}\n\t\t\tif ( ( isEnter || isSpace ) && startingBlockClientId ) {\n\t\t\t\tconst sourceRoot = getBlockRootClientId(\n\t\t\t\t\tstartingBlockClientId\n\t\t\t\t);\n\t\t\t\tconst destRoot = getBlockRootClientId( selectedBlockClientId );\n\t\t\t\tconst sourceBlockIndex = getBlockIndex(\n\t\t\t\t\tstartingBlockClientId,\n\t\t\t\t\tsourceRoot\n\t\t\t\t);\n\t\t\t\tlet destinationBlockIndex = getBlockIndex(\n\t\t\t\t\tselectedBlockClientId,\n\t\t\t\t\tdestRoot\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tsourceBlockIndex < destinationBlockIndex &&\n\t\t\t\t\tsourceRoot === destRoot\n\t\t\t\t) {\n\t\t\t\t\tdestinationBlockIndex -= 1;\n\t\t\t\t}\n\t\t\t\tmoveBlockToPosition(\n\t\t\t\t\tstartingBlockClientId,\n\t\t\t\t\tsourceRoot,\n\t\t\t\t\tdestRoot,\n\t\t\t\t\tdestinationBlockIndex\n\t\t\t\t);\n\t\t\t\tselectBlock( startingBlockClientId );\n\t\t\t\tsetBlockMovingClientId( null );\n\t\t\t}\n\t\t\tif ( navigateDown || navigateUp || navigateOut || navigateIn ) {\n\t\t\t\tif ( focusedBlockUid ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselectBlock( focusedBlockUid );\n\t\t\t\t} else if ( isTab && selectedBlockClientId ) {\n\t\t\t\t\tconst wrapper = getBlockDOMNode( selectedBlockClientId );\n\t\t\t\t\tlet nextTabbable;\n\n\t\t\t\t\tif ( navigateDown ) {\n\t\t\t\t\t\tnextTabbable = focus.tabbable.findNext( wrapper );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextTabbable = focus.tabbable.findPrevious( wrapper );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nextTabbable ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tnextTabbable.focus();\n\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// In Edit mode, Tab should focus the first tabbable element after the\n\t\t// content, which is normally the sidebar (with block controls) and\n\t\t// Shift+Tab should focus the first tabbable element before the content,\n\t\t// which is normally the block toolbar.\n\t\t// Arrow keys can be used, and Tab and arrow keys can be used in\n\t\t// Navigation mode (press Esc), to navigate through blocks.\n\t\tif ( selectedBlockClientId ) {\n\t\t\tif ( isTab ) {\n\t\t\t\tconst wrapper = getBlockDOMNode( selectedBlockClientId );\n\n\t\t\t\tif ( isShift ) {\n\t\t\t\t\tif ( target === wrapper ) {\n\t\t\t\t\t\t// Disable focus capturing on the focus capture element, so\n\t\t\t\t\t\t// it doesn't refocus this block and so it allows default\n\t\t\t\t\t\t// behaviour (moving focus to the next tabbable element).\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst tabbables = focus.tabbable.find( wrapper );\n\t\t\t\t\tconst lastTabbable = last( tabbables ) || wrapper;\n\n\t\t\t\t\tif ( target === lastTabbable ) {\n\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isEscape ) {\n\t\t\t\tsetNavigationMode( true );\n\t\t\t}\n\t\t} else if (\n\t\t\thasMultiSelection &&\n\t\t\tisTab &&\n\t\t\ttarget === multiSelectionContainer.current\n\t\t) {\n\t\t\t// See comment above.\n\t\t\tnoCapture.current = true;\n\n\t\t\tif ( isShift ) {\n\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t} else {\n\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// When presing any key other than up or down, the initial vertical\n\t\t// position must ALWAYS be reset. The vertical position is saved so it\n\t\t// can be restored as well as possible on sebsequent vertical arrow key\n\t\t// presses. It may not always be possible to restore the exact same\n\t\t// position (such as at an empty line), so it wouldn't be good to\n\t\t// compute the position right before any vertical arrow key press.\n\t\tif ( ! isVertical ) {\n\t\t\tverticalRect.current = null;\n\t\t} else if ( ! verticalRect.current ) {\n\t\t\tverticalRect.current = computeCaretRect();\n\t\t}\n\n\t\t// This logic inside this condition needs to be checked before\n\t\t// the check for event.nativeEvent.defaultPrevented.\n\t\t// The logic handles meta+a keypress and this event is default prevented\n\t\t// by RichText.\n\t\tif ( ! isNav ) {\n\t\t\t// Set immediately before the meta+a combination can be pressed.\n\t\t\tif ( isKeyboardEvent.primary( event ) ) {\n\t\t\t\tentirelySelected.current = isEntirelySelected( target );\n\t\t\t}\n\n\t\t\tif ( isKeyboardEvent.primary( event, 'a' ) ) {\n\t\t\t\t// When the target is contentEditable, selection will already\n\t\t\t\t// have been set by the browser earlier in this call stack. We\n\t\t\t\t// need check the previous result, otherwise all blocks will be\n\t\t\t\t// selected right away.\n\t\t\t\tif (\n\t\t\t\t\ttarget.isContentEditable\n\t\t\t\t\t\t? entirelySelected.current\n\t\t\t\t\t\t: isEntirelySelected( target )\n\t\t\t\t) {\n\t\t\t\t\tmultiSelect( first( blocks ), last( blocks ) );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\t// After pressing primary + A we can assume isEntirelySelected is true.\n\t\t\t\t// Calling right away isEntirelySelected after primary + A may still return false on some browsers.\n\t\t\t\tentirelySelected.current = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if navigation has already been handled (e.g. RichText inline\n\t\t// boundaries).\n\t\tif ( event.nativeEvent.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if our current target is not a candidate for navigation (e.g.\n\t\t// preserve native input behaviors).\n\t\tif ( ! isNavigationCandidate( target, keyCode, hasModifier ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In the case of RTL scripts, right means previous and left means next,\n\t\t// which is the exact reverse of LTR.\n\t\tconst { direction } = getComputedStyle( target );\n\t\tconst isReverseDir = direction === 'rtl' ? ! isReverse : isReverse;\n\n\t\tif ( isShift ) {\n\t\t\tif (\n\t\t\t\t// Ensure that there is a target block.\n\t\t\t\t( ( isReverse && selectionBeforeEndClientId ) ||\n\t\t\t\t\t( ! isReverse && selectionAfterEndClientId ) ) &&\n\t\t\t\t( hasMultiSelection ||\n\t\t\t\t\t( isTabbableEdge( target, isReverse ) &&\n\t\t\t\t\t\tisNavEdge( target, isReverse ) ) )\n\t\t\t) {\n\t\t\t\t// Shift key is down, and there is multi selection or we're at\n\t\t\t\t// the end of the current block.\n\t\t\t\texpandSelection( isReverse );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if ( hasMultiSelection ) {\n\t\t\t// Moving from block multi-selection to single block selection\n\t\t\tmoveSelection( isReverse );\n\t\t\tevent.preventDefault();\n\t\t} else if (\n\t\t\tisVertical &&\n\t\t\tisVerticalEdge( target, isReverse ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverse,\n\t\t\t\tcontainer.current,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( closestTabbable ) {\n\t\t\t\tplaceCaretAtVerticalEdge(\n\t\t\t\t\tclosestTabbable,\n\t\t\t\t\tisReverse,\n\t\t\t\t\tverticalRect.current\n\t\t\t\t);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisHorizontal &&\n\t\t\tgetSelection().isCollapsed &&\n\t\t\tisHorizontalEdge( target, isReverseDir ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverseDir,\n\t\t\t\tcontainer.current\n\t\t\t);\n\t\t\tplaceCaretAtHorizontalEdge( closestTabbable, isReverseDir );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction focusLastTextField() {\n\t\tconst focusableNodes = focus.focusable.find( container.current );\n\t\tconst target = findLast( focusableNodes, isTabbableTextField );\n\t\tif ( target ) {\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t}\n\t}\n\n\tuseEffect( () => {\n\t\tif ( hasMultiSelection && ! isMultiSelecting ) {\n\t\t\tmultiSelectionContainer.current.focus();\n\t\t}\n\t}, [ hasMultiSelection, isMultiSelecting ] );\n\n\tconst className = classnames( 'block-editor-writing-flow', {\n\t\t'is-navigate-mode': isNavigationMode,\n\t\t'is-block-moving-mode': !! hasBlockMovingClientId(),\n\t\t'can-insert-moving-block': canInsertMovingBlock,\n\t} );\n\n\t// Disable reason: Wrapper itself is non-interactive, but must capture\n\t// bubbling events from children to determine focus transition intents.\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<div className={ className }>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureBeforeRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ container }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={ multiSelectionContainer }\n\t\t\t\t\ttabIndex={ hasMultiSelection ? '0' : undefined }\n\t\t\t\t\taria-label={\n\t\t\t\t\t\thasMultiSelection\n\t\t\t\t\t\t\t? __( 'Multiple selected blocks' )\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\t// Needs to be positioned within the viewport, so focus to this\n\t\t\t\t\t// element does not scroll the page.\n\t\t\t\t\tstyle={ { position: 'fixed' } }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureAfterRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t\tisReverse\n\t\t\t/>\n\t\t\t<div\n\t\t\t\taria-hidden\n\t\t\t\ttabIndex={ -1 }\n\t\t\t\tonClick={ focusLastTextField }\n\t\t\t\tclassName=\"block-editor-writing-flow__click-redirect\"\n\t\t\t/>\n\t\t</div>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n"]}