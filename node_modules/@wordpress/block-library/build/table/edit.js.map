{"version":3,"sources":["@wordpress/block-library/src/table/edit.js"],"names":["BACKGROUND_COLORS","color","name","slug","ALIGNMENT_CONTROLS","icon","alignLeft","title","align","alignCenter","alignRight","withCustomBackgroundColors","TableEdit","arguments","onCreateTable","bind","onChangeFixedLayout","onChange","onChangeInitialColumnCount","onChangeInitialRowCount","renderSection","getTableControls","onInsertRow","onInsertRowBefore","onInsertRowAfter","onDeleteRow","onInsertColumn","onInsertColumnBefore","onInsertColumnAfter","onDeleteColumn","onToggleHeaderSection","onToggleFooterSection","onChangeColumnAlignment","getCellAlignment","state","initialRowCount","initialColumnCount","selectedCell","setState","event","preventDefault","setAttributes","props","parseInt","rowCount","columnCount","attributes","hasFixedLayout","content","cellAttributes","columnSelection","type","columnIndex","newAttributes","delta","sectionName","rowIndex","newRowIndex","newColumnIndex","cellLocation","tableRowBefore","isDisabled","onClick","tableRowAfter","tableRowDelete","tableColumnBefore","tableColumnAfter","tableColumnDelete","rows","Tag","map","cells","CellTag","tag","scope","cellClasses","placeholder","undefined","createOnFocus","isSelected","className","backgroundColor","setBackgroundColor","insertBlocksAfter","caption","head","body","foot","isEmpty","Section","tableClasses","class","toggleProps","table","nextAlign","onHoverAlignment","length","value","label","disableCustomColors","colors","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\tInspectorControls,\n\tBlockControls,\n\tRichText,\n\tPanelColorSettings,\n\tcreateCustomColorsHOC,\n\tBlockIcon,\n\tAlignmentToolbar,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\tDropdownMenu,\n\tPanelBody,\n\tPlaceholder,\n\tTextControl,\n\tToggleControl,\n\tToolbarGroup,\n\tToolbarItem,\n} from '@wordpress/components';\nimport {\n\talignLeft,\n\talignRight,\n\talignCenter,\n\tblockTable as icon,\n\ttableColumnAfter,\n\ttableColumnBefore,\n\ttableColumnDelete,\n\ttableRowAfter,\n\ttableRowBefore,\n\ttableRowDelete,\n\ttable,\n} from '@wordpress/icons';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\tcreateTable,\n\tupdateSelectedCell,\n\tgetCellAttribute,\n\tinsertRow,\n\tdeleteRow,\n\tinsertColumn,\n\tdeleteColumn,\n\ttoggleSection,\n\tisEmptyTableSection,\n} from './state';\n\nconst BACKGROUND_COLORS = [\n\t{\n\t\tcolor: '#f3f4f5',\n\t\tname: 'Subtle light gray',\n\t\tslug: 'subtle-light-gray',\n\t},\n\t{\n\t\tcolor: '#e9fbe5',\n\t\tname: 'Subtle pale green',\n\t\tslug: 'subtle-pale-green',\n\t},\n\t{\n\t\tcolor: '#e7f5fe',\n\t\tname: 'Subtle pale blue',\n\t\tslug: 'subtle-pale-blue',\n\t},\n\t{\n\t\tcolor: '#fcf0ef',\n\t\tname: 'Subtle pale pink',\n\t\tslug: 'subtle-pale-pink',\n\t},\n];\n\nconst ALIGNMENT_CONTROLS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align column left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align column center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align column right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst withCustomBackgroundColors = createCustomColorsHOC( BACKGROUND_COLORS );\n\nexport class TableEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onCreateTable = this.onCreateTable.bind( this );\n\t\tthis.onChangeFixedLayout = this.onChangeFixedLayout.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onChangeInitialColumnCount = this.onChangeInitialColumnCount.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onChangeInitialRowCount = this.onChangeInitialRowCount.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.renderSection = this.renderSection.bind( this );\n\t\tthis.getTableControls = this.getTableControls.bind( this );\n\t\tthis.onInsertRow = this.onInsertRow.bind( this );\n\t\tthis.onInsertRowBefore = this.onInsertRowBefore.bind( this );\n\t\tthis.onInsertRowAfter = this.onInsertRowAfter.bind( this );\n\t\tthis.onDeleteRow = this.onDeleteRow.bind( this );\n\t\tthis.onInsertColumn = this.onInsertColumn.bind( this );\n\t\tthis.onInsertColumnBefore = this.onInsertColumnBefore.bind( this );\n\t\tthis.onInsertColumnAfter = this.onInsertColumnAfter.bind( this );\n\t\tthis.onDeleteColumn = this.onDeleteColumn.bind( this );\n\t\tthis.onToggleHeaderSection = this.onToggleHeaderSection.bind( this );\n\t\tthis.onToggleFooterSection = this.onToggleFooterSection.bind( this );\n\t\tthis.onChangeColumnAlignment = this.onChangeColumnAlignment.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.getCellAlignment = this.getCellAlignment.bind( this );\n\n\t\tthis.state = {\n\t\t\tinitialRowCount: 2,\n\t\t\tinitialColumnCount: 2,\n\t\t\tselectedCell: null,\n\t\t};\n\t}\n\n\t/**\n\t * Updates the initial column count used for table creation.\n\t *\n\t * @param {number} initialColumnCount New initial column count.\n\t */\n\tonChangeInitialColumnCount( initialColumnCount ) {\n\t\tthis.setState( { initialColumnCount } );\n\t}\n\n\t/**\n\t * Updates the initial row count used for table creation.\n\t *\n\t * @param {number} initialRowCount New initial row count.\n\t */\n\tonChangeInitialRowCount( initialRowCount ) {\n\t\tthis.setState( { initialRowCount } );\n\t}\n\n\t/**\n\t * Creates a table based on dimensions in local state.\n\t *\n\t * @param {Object} event Form submit event.\n\t */\n\tonCreateTable( event ) {\n\t\tevent.preventDefault();\n\n\t\tconst { setAttributes } = this.props;\n\t\tlet { initialRowCount, initialColumnCount } = this.state;\n\n\t\tinitialRowCount = parseInt( initialRowCount, 10 ) || 2;\n\t\tinitialColumnCount = parseInt( initialColumnCount, 10 ) || 2;\n\n\t\tsetAttributes(\n\t\t\tcreateTable( {\n\t\t\t\trowCount: initialRowCount,\n\t\t\t\tcolumnCount: initialColumnCount,\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Toggles whether the table has a fixed layout or not.\n\t */\n\tonChangeFixedLayout() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { hasFixedLayout } = attributes;\n\n\t\tsetAttributes( { hasFixedLayout: ! hasFixedLayout } );\n\t}\n\n\t/**\n\t * Changes the content of the currently selected cell.\n\t *\n\t * @param {Array} content A RichText content value.\n\t */\n\tonChange( content ) {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = this.props;\n\n\t\tsetAttributes(\n\t\t\tupdateSelectedCell(\n\t\t\t\tattributes,\n\t\t\t\tselectedCell,\n\t\t\t\t( cellAttributes ) => ( {\n\t\t\t\t\t...cellAttributes,\n\t\t\t\t\tcontent,\n\t\t\t\t} )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Align text within the a column.\n\t *\n\t * @param {string} align The new alignment to apply to the column.\n\t */\n\tonChangeColumnAlignment( align ) {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert the cell selection to a column selection so that alignment\n\t\t// is applied to the entire column.\n\t\tconst columnSelection = {\n\t\t\ttype: 'column',\n\t\t\tcolumnIndex: selectedCell.columnIndex,\n\t\t};\n\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst newAttributes = updateSelectedCell(\n\t\t\tattributes,\n\t\t\tcolumnSelection,\n\t\t\t( cellAttributes ) => ( {\n\t\t\t\t...cellAttributes,\n\t\t\t\talign,\n\t\t\t} )\n\t\t);\n\t\tsetAttributes( newAttributes );\n\t}\n\n\t/**\n\t * Get the alignment of the currently selected cell.\n\t *\n\t * @return {string} The new alignment to apply to the column.\n\t */\n\tgetCellAlignment() {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes } = this.props;\n\n\t\treturn getCellAttribute( attributes, selectedCell, 'align' );\n\t}\n\n\t/**\n\t * Add or remove a `head` table section.\n\t */\n\tonToggleHeaderSection() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tsetAttributes( toggleSection( attributes, 'head' ) );\n\t}\n\n\t/**\n\t * Add or remove a `foot` table section.\n\t */\n\tonToggleFooterSection() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tsetAttributes( toggleSection( attributes, 'foot' ) );\n\t}\n\n\t/**\n\t * Inserts a row at the currently selected row index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected row index at which to insert.\n\t */\n\tonInsertRow( delta ) {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\t\tconst newRowIndex = rowIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertRow( attributes, {\n\t\t\t\tsectionName,\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new row\n\t\tthis.setState( {\n\t\t\tselectedCell: {\n\t\t\t\tsectionName,\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\tcolumnIndex: 0,\n\t\t\t\ttype: 'cell',\n\t\t\t},\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a row before the currently selected row.\n\t */\n\tonInsertRowBefore() {\n\t\tthis.onInsertRow( 0 );\n\t}\n\n\t/**\n\t * Inserts a row after the currently selected row.\n\t */\n\tonInsertRowAfter() {\n\t\tthis.onInsertRow( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected row.\n\t */\n\tonDeleteRow() {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\n\t\tthis.setState( { selectedCell: null } );\n\t\tsetAttributes( deleteRow( attributes, { sectionName, rowIndex } ) );\n\t}\n\n\t/**\n\t * Inserts a column at the currently selected column index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected column index at which to insert.\n\t */\n\tonInsertColumn( delta = 0 ) {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { columnIndex } = selectedCell;\n\t\tconst newColumnIndex = columnIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertColumn( attributes, {\n\t\t\t\tcolumnIndex: newColumnIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new column\n\t\tthis.setState( {\n\t\t\tselectedCell: {\n\t\t\t\trowIndex: 0,\n\t\t\t\tcolumnIndex: newColumnIndex,\n\t\t\t\ttype: 'cell',\n\t\t\t},\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a column before the currently selected column.\n\t */\n\tonInsertColumnBefore() {\n\t\tthis.onInsertColumn( 0 );\n\t}\n\n\t/**\n\t * Inserts a column after the currently selected column.\n\t */\n\tonInsertColumnAfter() {\n\t\tthis.onInsertColumn( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected column.\n\t */\n\tonDeleteColumn() {\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { sectionName, columnIndex } = selectedCell;\n\n\t\tthis.setState( { selectedCell: null } );\n\t\tsetAttributes(\n\t\t\tdeleteColumn( attributes, { sectionName, columnIndex } )\n\t\t);\n\t}\n\n\t/**\n\t * Creates an onFocus handler for a specified cell.\n\t *\n\t * @param {Object} cellLocation Object with `section`, `rowIndex`, and\n\t *                              `columnIndex` properties.\n\t *\n\t * @return {Function} Function to call on focus.\n\t */\n\tcreateOnFocus( cellLocation ) {\n\t\treturn () => {\n\t\t\tthis.setState( {\n\t\t\t\tselectedCell: {\n\t\t\t\t\t...cellLocation,\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t},\n\t\t\t} );\n\t\t};\n\t}\n\n\t/**\n\t * Gets the table controls to display in the block toolbar.\n\t *\n\t * @return {Array} Table controls.\n\t */\n\tgetTableControls() {\n\t\tconst { selectedCell } = this.state;\n\n\t\treturn [\n\t\t\t{\n\t\t\t\ticon: tableRowBefore,\n\t\t\t\ttitle: __( 'Insert row before' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onInsertRowBefore,\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: tableRowAfter,\n\t\t\t\ttitle: __( 'Insert row after' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onInsertRowAfter,\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: tableRowDelete,\n\t\t\t\ttitle: __( 'Delete row' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onDeleteRow,\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: tableColumnBefore,\n\t\t\t\ttitle: __( 'Insert column before' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onInsertColumnBefore,\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: tableColumnAfter,\n\t\t\t\ttitle: __( 'Insert column after' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onInsertColumnAfter,\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: tableColumnDelete,\n\t\t\t\ttitle: __( 'Delete column' ),\n\t\t\t\tisDisabled: ! selectedCell,\n\t\t\t\tonClick: this.onDeleteColumn,\n\t\t\t},\n\t\t];\n\t}\n\n\t/**\n\t * Renders a table section.\n\t *\n\t * @param {Object} options\n\t * @param {string} options.name Section type: head, body, or foot.\n\t * @param {Array}  options.rows The rows to render.\n\t *\n\t * @return {Object} React element for the section.\n\t */\n\trenderSection( { name, rows } ) {\n\t\tif ( isEmptyTableSection( rows ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst Tag = `t${ name }`;\n\n\t\treturn (\n\t\t\t<Tag>\n\t\t\t\t{ rows.map( ( { cells }, rowIndex ) => (\n\t\t\t\t\t<tr key={ rowIndex }>\n\t\t\t\t\t\t{ cells.map(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t{ content, tag: CellTag, scope, align },\n\t\t\t\t\t\t\t\tcolumnIndex\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\tconst cellLocation = {\n\t\t\t\t\t\t\t\t\tsectionName: name,\n\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tconst cellClasses = classnames(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'wp-block-table__cell-content'\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet placeholder = '';\n\t\t\t\t\t\t\t\tif ( name === 'head' ) {\n\t\t\t\t\t\t\t\t\tplaceholder = __( 'Header label' );\n\t\t\t\t\t\t\t\t} else if ( name === 'foot' ) {\n\t\t\t\t\t\t\t\t\tplaceholder = __( 'Footer label' );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\ttagName={ CellTag }\n\t\t\t\t\t\t\t\t\t\tkey={ columnIndex }\n\t\t\t\t\t\t\t\t\t\tclassName={ cellClasses }\n\t\t\t\t\t\t\t\t\t\tscope={\n\t\t\t\t\t\t\t\t\t\t\tCellTag === 'th' ? scope : undefined\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue={ content }\n\t\t\t\t\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\t\t\t\t\tunstableOnFocus={ this.createOnFocus(\n\t\t\t\t\t\t\t\t\t\t\tcellLocation\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) }\n\t\t\t\t\t</tr>\n\t\t\t\t) ) }\n\t\t\t</Tag>\n\t\t);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst { isSelected } = this.props;\n\t\tconst { selectedCell } = this.state;\n\n\t\tif ( ! isSelected && selectedCell ) {\n\t\t\tthis.setState( { selectedCell: null } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tclassName,\n\t\t\tbackgroundColor,\n\t\t\tsetBackgroundColor,\n\t\t\tsetAttributes,\n\t\t\tinsertBlocksAfter,\n\t\t} = this.props;\n\t\tconst { initialRowCount, initialColumnCount } = this.state;\n\t\tconst { hasFixedLayout, caption, head, body, foot } = attributes;\n\t\tconst isEmpty =\n\t\t\tisEmptyTableSection( head ) &&\n\t\t\tisEmptyTableSection( body ) &&\n\t\t\tisEmptyTableSection( foot );\n\t\tconst Section = this.renderSection;\n\n\t\tif ( isEmpty ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder\n\t\t\t\t\tlabel={ __( 'Table' ) }\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t\tinstructions={ __( 'Insert a table for sharing data.' ) }\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\tonSubmit={ this.onCreateTable }\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Column count' ) }\n\t\t\t\t\t\t\tvalue={ initialColumnCount }\n\t\t\t\t\t\t\tonChange={ this.onChangeInitialColumnCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Row count' ) }\n\t\t\t\t\t\t\tvalue={ initialRowCount }\n\t\t\t\t\t\t\tonChange={ this.onChangeInitialRowCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-button\"\n\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create Table' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Placeholder>\n\t\t\t);\n\t\t}\n\n\t\tconst tableClasses = classnames( backgroundColor.class, {\n\t\t\t'has-fixed-layout': hasFixedLayout,\n\t\t\t'has-background': !! backgroundColor.color,\n\t\t} );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarItem>\n\t\t\t\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\t\t\t\thasArrowIndicator\n\t\t\t\t\t\t\t\t\ticon={ table }\n\t\t\t\t\t\t\t\t\ttoggleProps={ toggleProps }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Edit table' ) }\n\t\t\t\t\t\t\t\t\tcontrols={ this.getTableControls() }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</ToolbarItem>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tlabel={ __( 'Change column alignment' ) }\n\t\t\t\t\t\talignmentControls={ ALIGNMENT_CONTROLS }\n\t\t\t\t\t\tvalue={ this.getCellAlignment() }\n\t\t\t\t\t\tonChange={ ( nextAlign ) =>\n\t\t\t\t\t\t\tthis.onChangeColumnAlignment( nextAlign )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonHover={ this.onHoverAlignment }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Table settings' ) }\n\t\t\t\t\t\tclassName=\"blocks-table-settings\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Fixed width table cells' ) }\n\t\t\t\t\t\t\tchecked={ !! hasFixedLayout }\n\t\t\t\t\t\t\tonChange={ this.onChangeFixedLayout }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Header section' ) }\n\t\t\t\t\t\t\tchecked={ !! ( head && head.length ) }\n\t\t\t\t\t\t\tonChange={ this.onToggleHeaderSection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Footer section' ) }\n\t\t\t\t\t\t\tchecked={ !! ( foot && foot.length ) }\n\t\t\t\t\t\t\tonChange={ this.onToggleFooterSection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={ __( 'Color settings' ) }\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: backgroundColor.color,\n\t\t\t\t\t\t\t\tonChange: setBackgroundColor,\n\t\t\t\t\t\t\t\tlabel: __( 'Background color' ),\n\t\t\t\t\t\t\t\tdisableCustomColors: true,\n\t\t\t\t\t\t\t\tcolors: BACKGROUND_COLORS,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t/>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<figure className={ className }>\n\t\t\t\t\t<table className={ tableClasses }>\n\t\t\t\t\t\t<Section name=\"head\" rows={ head } />\n\t\t\t\t\t\t<Section name=\"body\" rows={ body } />\n\t\t\t\t\t\t<Section name=\"foot\" rows={ foot } />\n\t\t\t\t\t</table>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Deselect the selected table cell when the caption is focused.\n\t\t\t\t\t\tunstableOnFocus={ () =>\n\t\t\t\t\t\t\tthis.setState( { selectedCell: null } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</figure>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withCustomBackgroundColors( 'backgroundColor' )( TableEdit );\n"]}