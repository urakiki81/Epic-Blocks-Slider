{"version":3,"sources":["@wordpress/block-library/src/pullquote/edit.js"],"names":["PullQuoteEdit","props","wasTextColorAutomaticallyComputed","pullQuoteMainColorSetter","bind","pullQuoteTextColorSetter","colorValue","colorUtils","textColor","setAttributes","setTextColor","setMainColor","className","isSolidColorStyle","SOLID_COLOR_CLASS","needTextColor","color","shouldSetTextColor","customMainColor","getMostReadableColor","prevProps","attributes","mainColor","undefined","isSelected","insertBlocksAfter","value","citation","figureStyles","backgroundColor","borderColor","figureClasses","class","blockquoteStyles","blockquoteClasses","nextValue","RichText","isEmpty","nextCitation","Platform","OS","onChange","label","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component, Platform } from '@wordpress/element';\nimport {\n\tRichText,\n\tContrastChecker,\n\tInspectorControls,\n\twithColors,\n\tPanelColorSettings,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { Figure } from './figure';\nimport { BlockQuote } from './blockquote';\n\n/**\n * Internal dependencies\n */\nimport { SOLID_COLOR_CLASS } from './shared';\n\nclass PullQuoteEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.wasTextColorAutomaticallyComputed = false;\n\t\tthis.pullQuoteMainColorSetter = this.pullQuoteMainColorSetter.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.pullQuoteTextColorSetter = this.pullQuoteTextColorSetter.bind(\n\t\t\tthis\n\t\t);\n\t}\n\n\tpullQuoteMainColorSetter( colorValue ) {\n\t\tconst {\n\t\t\tcolorUtils,\n\t\t\ttextColor,\n\t\t\tsetAttributes,\n\t\t\tsetTextColor,\n\t\t\tsetMainColor,\n\t\t\tclassName,\n\t\t} = this.props;\n\t\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\t\tconst needTextColor =\n\t\t\t! textColor.color || this.wasTextColorAutomaticallyComputed;\n\t\tconst shouldSetTextColor = isSolidColorStyle && needTextColor;\n\n\t\tif ( isSolidColorStyle ) {\n\t\t\t// If we use the solid color style, set the color using the normal mechanism.\n\t\t\tsetMainColor( colorValue );\n\t\t} else {\n\t\t\t// If we use the default style, set the color as a custom color to force the usage of an inline style.\n\t\t\t// Default style uses a border color for which classes are not available.\n\t\t\tsetAttributes( { customMainColor: colorValue } );\n\t\t}\n\n\t\tif ( shouldSetTextColor ) {\n\t\t\tif ( colorValue ) {\n\t\t\t\tthis.wasTextColorAutomaticallyComputed = true;\n\t\t\t\tsetTextColor( colorUtils.getMostReadableColor( colorValue ) );\n\t\t\t} else if ( this.wasTextColorAutomaticallyComputed ) {\n\t\t\t\t// We have to unset our previously computed text color on unsetting the main color.\n\t\t\t\tthis.wasTextColorAutomaticallyComputed = false;\n\t\t\t\tsetTextColor();\n\t\t\t}\n\t\t}\n\t}\n\n\tpullQuoteTextColorSetter( colorValue ) {\n\t\tconst { setTextColor } = this.props;\n\t\tsetTextColor( colorValue );\n\t\tthis.wasTextColorAutomaticallyComputed = false;\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { attributes, className, mainColor, setAttributes } = this.props;\n\t\t// If the block includes a named color and we switched from the\n\t\t// solid color style to the default style.\n\t\tif (\n\t\t\tattributes.mainColor &&\n\t\t\t! includes( className, SOLID_COLOR_CLASS ) &&\n\t\t\tincludes( prevProps.className, SOLID_COLOR_CLASS )\n\t\t) {\n\t\t\t// Remove the named color, and set the color as a custom color.\n\t\t\t// This is done because named colors use classes, in the default style we use a border color,\n\t\t\t// and themes don't set classes for border colors.\n\t\t\tsetAttributes( {\n\t\t\t\tmainColor: undefined,\n\t\t\t\tcustomMainColor: mainColor.color,\n\t\t\t} );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tmainColor,\n\t\t\ttextColor,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\tinsertBlocksAfter,\n\t\t} = this.props;\n\n\t\tconst { value, citation } = attributes;\n\n\t\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\t\tconst figureStyles = isSolidColorStyle\n\t\t\t? { backgroundColor: mainColor.color }\n\t\t\t: { borderColor: mainColor.color };\n\n\t\tconst figureClasses = classnames( className, {\n\t\t\t'has-background': isSolidColorStyle && mainColor.color,\n\t\t\t[ mainColor.class ]: isSolidColorStyle && mainColor.class,\n\t\t} );\n\n\t\tconst blockquoteStyles = {\n\t\t\tcolor: textColor.color,\n\t\t};\n\n\t\tconst blockquoteClasses =\n\t\t\ttextColor.color &&\n\t\t\tclassnames( 'has-text-color', {\n\t\t\t\t[ textColor.class ]: textColor.class,\n\t\t\t} );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Figure style={ figureStyles } className={ figureClasses }>\n\t\t\t\t\t<BlockQuote\n\t\t\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tidentifier=\"value\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\tonChange={ ( nextValue ) =>\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tvalue: nextValue,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t// translators: placeholder text used for the quote\n\t\t\t\t\t\t\t\t__( 'Write quote…' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ ( ! RichText.isEmpty( citation ) || isSelected ) && (\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\tidentifier=\"citation\"\n\t\t\t\t\t\t\t\tvalue={ citation }\n\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t// translators: placeholder text used for the citation\n\t\t\t\t\t\t\t\t\t__( 'Write citation…' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={ ( nextCitation ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tcitation: nextCitation,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName=\"wp-block-pullquote__citation\"\n\t\t\t\t\t\t\t\t__unstableMobileNoFocusOnMount\n\t\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\t\t\tinsertBlocksAfter(\n\t\t\t\t\t\t\t\t\t\tcreateBlock( 'core/paragraph' )\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</BlockQuote>\n\t\t\t\t</Figure>\n\t\t\t\t{ Platform.OS === 'web' && (\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\ttitle={ __( 'Color settings' ) }\n\t\t\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: mainColor.color,\n\t\t\t\t\t\t\t\t\tonChange: this.pullQuoteMainColorSetter,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Main color' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: textColor.color,\n\t\t\t\t\t\t\t\t\tonChange: this.pullQuoteTextColorSetter,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Text color' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ isSolidColorStyle && (\n\t\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\t\t\ttextColor: textColor.color,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: mainColor.color,\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tisLargeText={ false }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withColors( {\n\tmainColor: 'background-color',\n\ttextColor: 'color',\n} )( PullQuoteEdit );\n"]}