{"version":3,"sources":["@wordpress/block-library/src/pullquote/save.js"],"names":["save","attributes","mainColor","customMainColor","textColor","customTextColor","value","citation","className","isSolidColorStyle","SOLID_COLOR_CLASS","figureClasses","figureStyles","backgroundClass","backgroundColor","undefined","borderColor","blockquoteTextColorClass","blockquoteClasses","blockquoteStyles","color","RichText","isEmpty"],"mappings":";;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AAKA;;AAdA;;;;AAMA;;;;AAKA;;;AAKe,SAASA,IAAT,OAAgC;AAAA,MAAfC,UAAe,QAAfA,UAAe;AAAA,MAE7CC,SAF6C,GAS1CD,UAT0C,CAE7CC,SAF6C;AAAA,MAG7CC,eAH6C,GAS1CF,UAT0C,CAG7CE,eAH6C;AAAA,MAI7CC,SAJ6C,GAS1CH,UAT0C,CAI7CG,SAJ6C;AAAA,MAK7CC,eAL6C,GAS1CJ,UAT0C,CAK7CI,eAL6C;AAAA,MAM7CC,KAN6C,GAS1CL,UAT0C,CAM7CK,KAN6C;AAAA,MAO7CC,QAP6C,GAS1CN,UAT0C,CAO7CM,QAP6C;AAAA,MAQ7CC,SAR6C,GAS1CP,UAT0C,CAQ7CO,SAR6C;AAW9C,MAAMC,iBAAiB,GAAG,sBAAUD,SAAV,EAAqBE,yBAArB,CAA1B;AAEA,MAAIC,aAAJ,EAAmBC,YAAnB,CAb8C,CAe9C;;AACA,MAAKH,iBAAL,EAAyB;AACxB,QAAMI,eAAe,GAAG,oCACvB,kBADuB,EAEvBX,SAFuB,CAAxB;AAKAS,IAAAA,aAAa,GAAG;AACf,wBAAkBE,eAAe,IAAIV;AADtB,OAEbU,eAFa,EAEMA,eAFN,EAAhB;AAKAD,IAAAA,YAAY,GAAG;AACdE,MAAAA,eAAe,EAAED,eAAe,GAAGE,SAAH,GAAeZ;AADjC,KAAf,CAXwB,CAcxB;AACA,GAfD,MAeO,IAAKA,eAAL,EAAuB;AAC7BS,IAAAA,YAAY,GAAG;AACdI,MAAAA,WAAW,EAAEb;AADC,KAAf;AAGA;;AAED,MAAMc,wBAAwB,GAAG,oCAAmB,OAAnB,EAA4Bb,SAA5B,CAAjC;AACA,MAAMc,iBAAiB,GACtB,CAAEd,SAAS,IAAIC,eAAf,KACA,0BAAY,gBAAZ,oCACGY,wBADH,EAC+BA,wBAD/B,EAFD;AAMA,MAAME,gBAAgB,GAAGF,wBAAwB,GAC9CF,SAD8C,GAE9C;AAAEK,IAAAA,KAAK,EAAEf;AAAT,GAFH;AAIA,SACC;AAAQ,IAAA,SAAS,EAAGM,aAApB;AAAoC,IAAA,KAAK,EAAGC;AAA5C,KACC;AACC,IAAA,SAAS,EAAGM,iBADb;AAEC,IAAA,KAAK,EAAGC;AAFT,KAIC,4BAAC,qBAAD,CAAU,OAAV;AAAkB,IAAA,KAAK,EAAGb,KAA1B;AAAkC,IAAA,SAAS;AAA3C,IAJD,EAKG,CAAEe,sBAASC,OAAT,CAAkBf,QAAlB,CAAF,IACD,4BAAC,qBAAD,CAAU,OAAV;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,KAAK,EAAGA;AAAzC,IANF,CADD,CADD;AAaA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getColorClassName, RichText } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { SOLID_COLOR_CLASS } from './shared';\n\nexport default function save( { attributes } ) {\n\tconst {\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\ttextColor,\n\t\tcustomTextColor,\n\t\tvalue,\n\t\tcitation,\n\t\tclassName,\n\t} = attributes;\n\n\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\n\tlet figureClasses, figureStyles;\n\n\t// Is solid color style\n\tif ( isSolidColorStyle ) {\n\t\tconst backgroundClass = getColorClassName(\n\t\t\t'background-color',\n\t\t\tmainColor\n\t\t);\n\n\t\tfigureClasses = classnames( {\n\t\t\t'has-background': backgroundClass || customMainColor,\n\t\t\t[ backgroundClass ]: backgroundClass,\n\t\t} );\n\n\t\tfigureStyles = {\n\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\n\t\t};\n\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t} else if ( customMainColor ) {\n\t\tfigureStyles = {\n\t\t\tborderColor: customMainColor,\n\t\t};\n\t}\n\n\tconst blockquoteTextColorClass = getColorClassName( 'color', textColor );\n\tconst blockquoteClasses =\n\t\t( textColor || customTextColor ) &&\n\t\tclassnames( 'has-text-color', {\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t} );\n\n\tconst blockquoteStyles = blockquoteTextColorClass\n\t\t? undefined\n\t\t: { color: customTextColor };\n\n\treturn (\n\t\t<figure className={ figureClasses } style={ figureStyles }>\n\t\t\t<blockquote\n\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t>\n\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t</figure>\n\t);\n}\n"]}