{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.js"],"names":["window","getComputedStyle","querySelector","document","bind","name","PARAGRAPH_DROP_CAP_SELECTOR","ParagraphRTLToolbar","direction","setDirection","isRTL","select","getSettings","icon","formatLtr","title","isActive","onClick","undefined","useDropCap","isDropCap","fontSize","styleFontSize","isDisabled","minimumHeight","setMinimumHeight","fontSizes","fontSizeObject","element","lineHeight","size","ParagraphBlock","attributes","mergeBlocks","onReplace","onRemove","setAttributes","align","content","dropCap","placeholder","style","ref","isDropCapEnabled","dropCapMinimumHeight","styles","minHeight","newAlign","newDirection","Block","p","newContent","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { PanelBody, ToggleControl, ToolbarGroup } from '@wordpress/components';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\t__experimentalBlock as Block,\n\tgetFontSize,\n\t__experimentalUseEditorFeature as useEditorFeature,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { formatLtr } from '@wordpress/icons';\n\n/**\n * Browser dependencies\n */\nconst { getComputedStyle } = window;\nconst querySelector = window.document.querySelector.bind( document );\n\nconst name = 'core/paragraph';\nconst PARAGRAPH_DROP_CAP_SELECTOR = 'p.has-drop-cap';\n\nfunction ParagraphRTLToolbar( { direction, setDirection } ) {\n\tconst isRTL = useSelect( ( select ) => {\n\t\treturn !! select( 'core/block-editor' ).getSettings().isRTL;\n\t}, [] );\n\n\treturn (\n\t\tisRTL && (\n\t\t\t<ToolbarGroup\n\t\t\t\tcontrols={ [\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: formatLtr,\n\t\t\t\t\t\ttitle: _x( 'Left to right', 'editor button' ),\n\t\t\t\t\t\tisActive: direction === 'ltr',\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tsetDirection(\n\t\t\t\t\t\t\t\tdirection === 'ltr' ? undefined : 'ltr'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t)\n\t);\n}\n\nfunction useDropCap( isDropCap, fontSize, styleFontSize ) {\n\tconst isDisabled = ! useEditorFeature( 'typography.dropCap' );\n\n\tconst [ minimumHeight, setMinimumHeight ] = useState();\n\n\tconst { fontSizes } = useSelect( ( select ) =>\n\t\tselect( 'core/block-editor' ).getSettings()\n\t);\n\n\tconst fontSizeObject = getFontSize( fontSizes, fontSize, styleFontSize );\n\tuseEffect( () => {\n\t\tif ( isDisabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = querySelector( PARAGRAPH_DROP_CAP_SELECTOR );\n\t\tif ( isDropCap && element ) {\n\t\t\tsetMinimumHeight(\n\t\t\t\tgetComputedStyle( element, 'first-letter' ).lineHeight\n\t\t\t);\n\t\t} else if ( minimumHeight ) {\n\t\t\tsetMinimumHeight( undefined );\n\t\t}\n\t}, [\n\t\tisDisabled,\n\t\tisDropCap,\n\t\tminimumHeight,\n\t\tsetMinimumHeight,\n\t\tfontSizeObject.size,\n\t] );\n\n\treturn [ ! isDisabled, minimumHeight ];\n}\n\nfunction ParagraphBlock( {\n\tattributes,\n\tmergeBlocks,\n\tonReplace,\n\tonRemove,\n\tsetAttributes,\n} ) {\n\tconst {\n\t\talign,\n\t\tcontent,\n\t\tdirection,\n\t\tdropCap,\n\t\tplaceholder,\n\t\tfontSize,\n\t\tstyle,\n\t} = attributes;\n\tconst ref = useRef();\n\tconst [ isDropCapEnabled, dropCapMinimumHeight ] = useDropCap(\n\t\tdropCap,\n\t\tfontSize,\n\t\tstyle?.fontSize\n\t);\n\n\tconst styles = {\n\t\tdirection,\n\t\tminHeight: dropCapMinimumHeight,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\tsetAttributes( { align: newAlign } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ParagraphRTLToolbar\n\t\t\t\t\tdirection={ direction }\n\t\t\t\t\tsetDirection={ ( newDirection ) =>\n\t\t\t\t\t\tsetAttributes( { direction: newDirection } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t{ isDropCapEnabled && (\n\t\t\t\t\t<PanelBody title={ __( 'Text settings' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Drop cap' ) }\n\t\t\t\t\t\t\tchecked={ !! dropCap }\n\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\tsetAttributes( { dropCap: ! dropCap } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\tdropCap\n\t\t\t\t\t\t\t\t\t? __( 'Showing large initial letter.' )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to show a large initial letter.'\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t</InspectorControls>\n\t\t\t<RichText\n\t\t\t\tref={ ref }\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName={ Block.p }\n\t\t\t\tclassName={ classnames( {\n\t\t\t\t\t'has-drop-cap': dropCap,\n\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t} ) }\n\t\t\t\tstyle={ styles }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( newContent ) =>\n\t\t\t\t\tsetAttributes( { content: newContent } )\n\t\t\t\t}\n\t\t\t\tonSplit={ ( value ) => {\n\t\t\t\t\tif ( ! value ) {\n\t\t\t\t\t\treturn createBlock( name );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn createBlock( name, {\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ onRemove }\n\t\t\t\taria-label={\n\t\t\t\t\tcontent\n\t\t\t\t\t\t? __( 'Paragraph block' )\n\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t'Empty block; start writing or type forward slash to choose a block'\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tplaceholder={\n\t\t\t\t\tplaceholder ||\n\t\t\t\t\t__( 'Start writing or type / to choose a block' )\n\t\t\t\t}\n\t\t\t\t__unstableEmbedURLOnPaste\n\t\t\t\t__unstableAllowPrefixTransformations\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ParagraphBlock;\n"]}