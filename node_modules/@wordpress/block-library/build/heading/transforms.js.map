{"version":3,"sources":["@wordpress/block-library/src/heading/transforms.js"],"names":["transforms","from","type","isMultiBlock","blocks","transform","attributes","map","content","anchor","name","selector","schema","phrasingContentSchema","isPaste","children","h1","h2","h3","h4","h5","h6","node","outerHTML","style","textAlign","level","nodeName","align","prefix","Array","join","to"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock, getBlockAttributes } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { getLevelFromHeadingNodeName } from './shared';\nimport { name } from './block.json';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) =>\n\t\t\t\tattributes.map( ( { content, anchor } ) =>\n\t\t\t\t\tcreateBlock( name, {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t} )\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tselector: 'h1,h2,h3,h4,h5,h6',\n\t\t\tschema: ( { phrasingContentSchema, isPaste } ) => {\n\t\t\t\tconst schema = {\n\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t\tattributes: isPaste ? [] : [ 'style', 'id' ],\n\t\t\t\t};\n\t\t\t\treturn {\n\t\t\t\t\th1: schema,\n\t\t\t\t\th2: schema,\n\t\t\t\t\th3: schema,\n\t\t\t\t\th4: schema,\n\t\t\t\t\th5: schema,\n\t\t\t\t\th6: schema,\n\t\t\t\t};\n\t\t\t},\n\t\t\ttransform( node ) {\n\t\t\t\tconst attributes = getBlockAttributes( name, node.outerHTML );\n\t\t\t\tconst { textAlign } = node.style || {};\n\n\t\t\t\tattributes.level = getLevelFromHeadingNodeName( node.nodeName );\n\n\t\t\t\tif (\n\t\t\t\t\ttextAlign === 'left' ||\n\t\t\t\t\ttextAlign === 'center' ||\n\t\t\t\t\ttextAlign === 'right'\n\t\t\t\t) {\n\t\t\t\t\tattributes.align = textAlign;\n\t\t\t\t}\n\n\t\t\t\treturn createBlock( name, attributes );\n\t\t\t},\n\t\t},\n\t\t...[ 1, 2, 3, 4, 5, 6 ].map( ( level ) => ( {\n\t\t\ttype: 'prefix',\n\t\t\tprefix: Array( level + 1 ).join( '#' ),\n\t\t\ttransform( content ) {\n\t\t\t\treturn createBlock( name, {\n\t\t\t\t\tlevel,\n\t\t\t\t\tcontent,\n\t\t\t\t} );\n\t\t\t},\n\t\t} ) ),\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) =>\n\t\t\t\tattributes.map( ( { content, anchor } ) =>\n\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t} )\n\t\t\t\t),\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}