{"version":3,"sources":["@wordpress/block-library/src/media-text/edit.native.js"],"names":["TEMPLATE","WIDTH_CONSTRAINT_PERCENTAGE","BREAKPOINTS","mobile","applyWidthConstraints","width","Math","max","min","MediaTextEdit","arguments","onSelectMedia","bind","onMediaUpdate","onWidthChange","commitWidthChange","onLayoutChange","onMediaSelected","onReplaceMedia","onSetOpenPickerRef","onSetImageFill","state","mediaWidth","containerWidth","isMediaSelected","media","setAttributes","props","mediaType","src","media_type","type","sizes","mediaAlt","alt","mediaId","id","mediaUrl","url","imageFill","undefined","focalPoint","setState","nativeEvent","layout","openPickerRef","openPicker","attributes","shouldStack","isSelected","mediaPosition","verticalAlignment","mediaAreaWidth","styles","mediaAreaPadding","aligmentStyles","onFocus","backgroundColor","isRTL","wrapperProps","isStackedOnMobile","isMobile","temporaryMediaWidth","widthString","innerBlockContainerStyle","innerBlock","innerBlockStackMediaLeft","innerBlockStackMediaRight","containerStyles","style","color","paddingBottom","innerBlockWidth","innerBlockWidthString","mediaContainerStyle","flex","mediaStackLeft","mediaStackRight","mediaLeft","mediaRight","toolbarControls","icon","pullRight","pullLeft","title","isActive","onClick","onVerticalAlignmentChange","alignment","MEDIA_TYPE_IMAGE","getControls","MEDIA_TYPE_VIDEO","replace","renderMediaArea","isAncestorSelected","Component","select","clientId","getSelectedBlockClientId","getBlockRootClientId","getBlockParents","getSettings","parents","selectedBlockClientId","isParentSelected","includes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tInnerBlocks,\n\tInspectorControls,\n\twithColors,\n\tMEDIA_TYPE_IMAGE,\n\tMEDIA_TYPE_VIDEO,\n} from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport {\n\tButton,\n\tToolbarGroup,\n\tPanelBody,\n\tToggleControl,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { pullLeft, pullRight, replace } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport MediaContainer from './media-container';\nimport styles from './style.scss';\n\nconst TEMPLATE = [ [ 'core/paragraph' ] ];\n// this limits the resize to a safe zone to avoid making broken layouts\nconst WIDTH_CONSTRAINT_PERCENTAGE = 15;\nconst BREAKPOINTS = {\n\tmobile: 480,\n};\nconst applyWidthConstraints = ( width ) =>\n\tMath.max(\n\t\tWIDTH_CONSTRAINT_PERCENTAGE,\n\t\tMath.min( width, 100 - WIDTH_CONSTRAINT_PERCENTAGE )\n\t);\n\nclass MediaTextEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onSelectMedia = this.onSelectMedia.bind( this );\n\t\tthis.onMediaUpdate = this.onMediaUpdate.bind( this );\n\t\tthis.onWidthChange = this.onWidthChange.bind( this );\n\t\tthis.commitWidthChange = this.commitWidthChange.bind( this );\n\t\tthis.onLayoutChange = this.onLayoutChange.bind( this );\n\t\tthis.onMediaSelected = this.onMediaSelected.bind( this );\n\t\tthis.onReplaceMedia = this.onReplaceMedia.bind( this );\n\t\tthis.onSetOpenPickerRef = this.onSetOpenPickerRef.bind( this );\n\t\tthis.onSetImageFill = this.onSetImageFill.bind( this );\n\n\t\tthis.state = {\n\t\t\tmediaWidth: null,\n\t\t\tcontainerWidth: 0,\n\t\t\tisMediaSelected: false,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\treturn {\n\t\t\tisMediaSelected:\n\t\t\t\tstate.isMediaSelected &&\n\t\t\t\tprops.isSelected &&\n\t\t\t\t! props.isAncestorSelected,\n\t\t};\n\t}\n\n\tonSelectMedia( media ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tlet mediaType;\n\t\tlet src;\n\t\t// for media selections originated from a file upload.\n\t\tif ( media.media_type ) {\n\t\t\tif ( media.media_type === 'image' ) {\n\t\t\t\tmediaType = 'image';\n\t\t\t} else {\n\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t// video contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\tmediaType = 'video';\n\t\t\t}\n\t\t} else {\n\t\t\t// for media selections originated from existing files in the media library.\n\t\t\tmediaType = media.type;\n\t\t}\n\n\t\tif ( mediaType === 'image' && media.sizes ) {\n\t\t\t// Try the \"large\" size URL, falling back to the \"full\" size URL below.\n\t\t\tsrc =\n\t\t\t\tget( media, [ 'sizes', 'large', 'url' ] ) ||\n\t\t\t\tget( media, [\n\t\t\t\t\t'media_details',\n\t\t\t\t\t'sizes',\n\t\t\t\t\t'large',\n\t\t\t\t\t'source_url',\n\t\t\t\t] );\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\tmediaAlt: media.alt,\n\t\t\tmediaId: media.id,\n\t\t\tmediaType,\n\t\t\tmediaUrl: src || media.url,\n\t\t\timageFill: undefined,\n\t\t\tfocalPoint: undefined,\n\t\t} );\n\t}\n\n\tonMediaUpdate( media ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\tmediaId: media.id,\n\t\t\tmediaUrl: media.url,\n\t\t} );\n\t}\n\n\tonWidthChange( width ) {\n\t\tthis.setState( {\n\t\t\tmediaWidth: applyWidthConstraints( width ),\n\t\t} );\n\t}\n\n\tcommitWidthChange( width ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\tmediaWidth: applyWidthConstraints( width ),\n\t\t} );\n\t\tthis.setState( {\n\t\t\tmediaWidth: null,\n\t\t} );\n\t}\n\n\tonLayoutChange( { nativeEvent } ) {\n\t\tconst { width } = nativeEvent.layout;\n\t\tconst { containerWidth } = this.state;\n\n\t\tif ( containerWidth === width ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.setState( {\n\t\t\tcontainerWidth: width,\n\t\t} );\n\t}\n\n\tonMediaSelected() {\n\t\tthis.setState( { isMediaSelected: true } );\n\t}\n\n\tonReplaceMedia() {\n\t\tif ( this.openPickerRef ) {\n\t\t\tthis.openPickerRef();\n\t\t}\n\t}\n\n\tonSetOpenPickerRef( openPicker ) {\n\t\tthis.openPickerRef = openPicker;\n\t}\n\n\tonSetImageFill() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { imageFill } = attributes;\n\n\t\tsetAttributes( {\n\t\t\timageFill: ! imageFill,\n\t\t} );\n\t}\n\n\tgetControls() {\n\t\tconst { attributes } = this.props;\n\t\tconst { imageFill } = attributes;\n\n\t\treturn (\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Media & Text settings' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Crop image to fill entire column' ) }\n\t\t\t\t\t\tchecked={ imageFill }\n\t\t\t\t\t\tonChange={ this.onSetImageFill }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t);\n\t}\n\trenderMediaArea( shouldStack ) {\n\t\tconst { isMediaSelected, containerWidth } = this.state;\n\t\tconst { attributes, isSelected } = this.props;\n\t\tconst {\n\t\t\tmediaAlt,\n\t\t\tmediaId,\n\t\t\tmediaPosition,\n\t\t\tmediaType,\n\t\t\tmediaUrl,\n\t\t\tmediaWidth,\n\t\t\timageFill,\n\t\t\tfocalPoint,\n\t\t\tverticalAlignment,\n\t\t} = attributes;\n\t\tconst mediaAreaWidth =\n\t\t\tmediaWidth && ! shouldStack\n\t\t\t\t? ( containerWidth * mediaWidth ) / 100 -\n\t\t\t\t  styles.mediaAreaPadding.width\n\t\t\t\t: containerWidth;\n\t\tconst aligmentStyles =\n\t\t\tstyles[\n\t\t\t\t`is-vertically-aligned-${ verticalAlignment || 'center' }`\n\t\t\t];\n\n\t\treturn (\n\t\t\t<MediaContainer\n\t\t\t\tcommitWidthChange={ this.commitWidthChange }\n\t\t\t\tisMediaSelected={ isMediaSelected }\n\t\t\t\tonFocus={ this.props.onFocus }\n\t\t\t\tonMediaSelected={ this.onMediaSelected }\n\t\t\t\tonMediaUpdate={ this.onMediaUpdate }\n\t\t\t\tonSelectMedia={ this.onSelectMedia }\n\t\t\t\tonSetOpenPickerRef={ this.onSetOpenPickerRef }\n\t\t\t\tonWidthChange={ this.onWidthChange }\n\t\t\t\tmediaWidth={ mediaAreaWidth }\n\t\t\t\t{ ...{\n\t\t\t\t\tmediaAlt,\n\t\t\t\t\tmediaId,\n\t\t\t\t\tmediaType,\n\t\t\t\t\tmediaUrl,\n\t\t\t\t\tmediaPosition,\n\t\t\t\t\timageFill,\n\t\t\t\t\tfocalPoint,\n\t\t\t\t\tisSelected,\n\t\t\t\t\taligmentStyles,\n\t\t\t\t\tshouldStack,\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tbackgroundColor,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t\tisRTL,\n\t\t\twrapperProps,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tisStackedOnMobile,\n\t\t\timageFill,\n\t\t\tmediaPosition,\n\t\t\tmediaWidth,\n\t\t\tmediaType,\n\t\t\tverticalAlignment,\n\t\t} = attributes;\n\t\tconst { containerWidth, isMediaSelected } = this.state;\n\n\t\tconst isMobile = containerWidth < BREAKPOINTS.mobile;\n\t\tconst shouldStack = isStackedOnMobile && isMobile;\n\t\tconst temporaryMediaWidth = shouldStack\n\t\t\t? 100\n\t\t\t: this.state.mediaWidth || mediaWidth;\n\t\tconst widthString = `${ temporaryMediaWidth }%`;\n\n\t\tconst innerBlockContainerStyle = ! shouldStack\n\t\t\t? styles.innerBlock\n\t\t\t: {\n\t\t\t\t\t...( mediaPosition === 'left'\n\t\t\t\t\t\t? styles.innerBlockStackMediaLeft\n\t\t\t\t\t\t: styles.innerBlockStackMediaRight ),\n\t\t\t  };\n\n\t\tconst containerStyles = {\n\t\t\t...styles[ 'wp-block-media-text' ],\n\t\t\t...styles[\n\t\t\t\t`is-vertically-aligned-${ verticalAlignment || 'center' }`\n\t\t\t],\n\t\t\t...( mediaPosition === 'right'\n\t\t\t\t? styles[ 'has-media-on-the-right' ]\n\t\t\t\t: {} ),\n\t\t\t...( shouldStack && styles[ 'is-stacked-on-mobile' ] ),\n\t\t\t...( shouldStack && mediaPosition === 'right'\n\t\t\t\t? styles[ 'is-stacked-on-mobile.has-media-on-the-right' ]\n\t\t\t\t: {} ),\n\t\t\t...( isSelected && styles[ 'is-selected' ] ),\n\t\t\tbackgroundColor:\n\t\t\t\twrapperProps?.style?.backgroundColor || backgroundColor.color,\n\t\t\tpaddingBottom: 0,\n\t\t};\n\n\t\tconst innerBlockWidth = shouldStack ? 100 : 100 - temporaryMediaWidth;\n\t\tconst innerBlockWidthString = `${ innerBlockWidth }%`;\n\n\t\tconst mediaContainerStyle = [\n\t\t\t{ flex: 1 },\n\t\t\tshouldStack\n\t\t\t\t? {\n\t\t\t\t\t\t...( mediaPosition === 'left' &&\n\t\t\t\t\t\t\tstyles.mediaStackLeft ),\n\t\t\t\t\t\t...( mediaPosition === 'right' &&\n\t\t\t\t\t\t\tstyles.mediaStackRight ),\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\t...( mediaPosition === 'left' && styles.mediaLeft ),\n\t\t\t\t\t\t...( mediaPosition === 'right' && styles.mediaRight ),\n\t\t\t\t  },\n\t\t];\n\n\t\tconst toolbarControls = [\n\t\t\t{\n\t\t\t\ticon: isRTL ? pullRight : pullLeft,\n\t\t\t\ttitle: __( 'Show media on left' ),\n\t\t\t\tisActive: mediaPosition === 'left',\n\t\t\t\tonClick: () => setAttributes( { mediaPosition: 'left' } ),\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: isRTL ? pullLeft : pullRight,\n\t\t\t\ttitle: __( 'Show media on right' ),\n\t\t\t\tisActive: mediaPosition === 'right',\n\t\t\t\tonClick: () => setAttributes( { mediaPosition: 'right' } ),\n\t\t\t},\n\t\t];\n\n\t\tconst onVerticalAlignmentChange = ( alignment ) => {\n\t\t\tsetAttributes( { verticalAlignment: alignment } );\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ mediaType === MEDIA_TYPE_IMAGE && this.getControls() }\n\t\t\t\t<BlockControls>\n\t\t\t\t\t{ ( isMediaSelected || mediaType === MEDIA_TYPE_VIDEO ) && (\n\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tlabel={ __( 'Edit media' ) }\n\t\t\t\t\t\t\t\ticon={ replace }\n\t\t\t\t\t\t\t\tonClick={ this.onReplaceMedia }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ( ! isMediaSelected ||\n\t\t\t\t\t\tmediaType === MEDIA_TYPE_VIDEO ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToolbarGroup controls={ toolbarControls } />\n\t\t\t\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\t\t\t\tonChange={ onVerticalAlignmentChange }\n\t\t\t\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</BlockControls>\n\t\t\t\t<View\n\t\t\t\t\tstyle={ containerStyles }\n\t\t\t\t\tonLayout={ this.onLayoutChange }\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t( shouldStack || ! imageFill ) && {\n\t\t\t\t\t\t\t\twidth: widthString,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmediaContainerStyle,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ this.renderMediaArea( shouldStack ) }\n\t\t\t\t\t</View>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\twidth: innerBlockWidthString,\n\t\t\t\t\t\t\t...innerBlockContainerStyle,\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\ttemplate={ TEMPLATE }\n\t\t\t\t\t\t\ttemplateInsertUpdatesSelection={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithColors( 'backgroundColor' ),\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockParents,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst parents = getBlockParents( clientId, true );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst isParentSelected =\n\t\t\tselectedBlockClientId &&\n\t\t\tselectedBlockClientId === getBlockRootClientId( clientId );\n\t\tconst isAncestorSelected =\n\t\t\tselectedBlockClientId && parents.includes( selectedBlockClientId );\n\n\t\treturn {\n\t\t\tisSelected: selectedBlockClientId === clientId,\n\t\t\tisParentSelected,\n\t\t\tisAncestorSelected,\n\t\t\tisRTL: getSettings().isRTL,\n\t\t};\n\t} )\n)( MediaTextEdit );\n"]}