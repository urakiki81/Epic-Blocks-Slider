{"version":3,"sources":["@wordpress/block-library/src/missing/edit.js"],"names":["MissingBlockWarning","attributes","convertToHTML","originalName","originalUndelimitedContent","hasContent","hasHTMLBlock","actions","messageHTML","push","MissingEdit","dispatch","clientId","replaceBlock","content"],"mappings":";;;;;;;AAKA;;AAFA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AATA;;;AAWA,SAASA,mBAAT,OAA8D;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;AAAA,MACrDC,YADqD,GACRF,UADQ,CACrDE,YADqD;AAAA,MACvCC,0BADuC,GACRH,UADQ,CACvCG,0BADuC;AAE7D,MAAMC,UAAU,GAAG,CAAC,CAAED,0BAAtB;AACA,MAAME,YAAY,GAAG,0BAAc,WAAd,CAArB;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAIC,WAAJ;;AACA,MAAKH,UAAU,IAAIC,YAAnB,EAAkC;AACjCE,IAAAA,WAAW,GAAG;AACb;AACA,kBACC,2JADD,CAFa,EAKbL,YALa,CAAd;AAOAI,IAAAA,OAAO,CAACE,IAAR,CACC,4BAAC,kBAAD;AAAQ,MAAA,GAAG,EAAC,SAAZ;AAAsB,MAAA,OAAO,EAAGP,aAAhC;AAAgD,MAAA,SAAS;AAAzD,OACG,cAAI,cAAJ,CADH,CADD;AAKA,GAbD,MAaO;AACNM,IAAAA,WAAW,GAAG;AACb;AACA,kBACC,8GADD,CAFa,EAKbL,YALa,CAAd;AAOA;;AAED,SACC,qDACC,4BAAC,oBAAD;AAAS,IAAA,OAAO,EAAGI;AAAnB,KAA+BC,WAA/B,CADD,EAEC,4BAAC,gBAAD,QAAWJ,0BAAX,CAFD,CADD;AAMA;;AAED,IAAMM,WAAW,GAAG,sBACnB,wBAAc,UAAEC,QAAF,SAA0C;AAAA,MAA5BC,QAA4B,SAA5BA,QAA4B;AAAA,MAAlBX,UAAkB,SAAlBA,UAAkB;;AAAA,kBAC9BU,QAAQ,CAAE,mBAAF,CADsB;AAAA,MAC/CE,YAD+C,aAC/CA,YAD+C;;AAEvD,SAAO;AACNX,IAAAA,aADM,2BACU;AACfW,MAAAA,YAAY,CACXD,QADW,EAEX,yBAAa,WAAb,EAA0B;AACzBE,QAAAA,OAAO,EAAEb,UAAU,CAACG;AADK,OAA1B,CAFW,CAAZ;AAMA;AARK,GAAP;AAUA,CAZD,CADmB,EAcnB,6BAAa,oBAAb,CAdmB,EAejBJ,mBAfiB,CAApB;eAiBeU,W","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { RawHTML } from '@wordpress/element';\nimport { Button, withFilters } from '@wordpress/components';\nimport { getBlockType, createBlock } from '@wordpress/blocks';\nimport { withDispatch } from '@wordpress/data';\nimport { Warning } from '@wordpress/block-editor';\n\nfunction MissingBlockWarning( { attributes, convertToHTML } ) {\n\tconst { originalName, originalUndelimitedContent } = attributes;\n\tconst hasContent = !! originalUndelimitedContent;\n\tconst hasHTMLBlock = getBlockType( 'core/html' );\n\n\tconst actions = [];\n\tlet messageHTML;\n\tif ( hasContent && hasHTMLBlock ) {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact, convert its content to a Custom HTML block, or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t\tactions.push(\n\t\t\t<Button key=\"convert\" onClick={ convertToHTML } isPrimary>\n\t\t\t\t{ __( 'Keep as HTML' ) }\n\t\t\t</Button>\n\t\t);\n\t} else {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Warning actions={ actions }>{ messageHTML }</Warning>\n\t\t\t<RawHTML>{ originalUndelimitedContent }</RawHTML>\n\t\t</>\n\t);\n}\n\nconst MissingEdit = compose(\n\twithDispatch( ( dispatch, { clientId, attributes } ) => {\n\t\tconst { replaceBlock } = dispatch( 'core/block-editor' );\n\t\treturn {\n\t\t\tconvertToHTML() {\n\t\t\t\treplaceBlock(\n\t\t\t\t\tclientId,\n\t\t\t\t\tcreateBlock( 'core/html', {\n\t\t\t\t\t\tcontent: attributes.originalUndelimitedContent,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t} ),\n\twithFilters( 'editor.missingEdit' )\n)( MissingBlockWarning );\n\nexport default MissingEdit;\n"]}