{"version":3,"sources":["@wordpress/block-library/src/button/color-props.js"],"names":["getColorAndStyleProps","attributes","colors","isEdit","backgroundColor","textColor","gradient","style","backgroundClass","gradientClass","textClass","className","color","text","background","styleProp","undefined","backgroundColorObject","textColorObject"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AARA;;;;AAKA;;;AASA;AACA;AACA;AAEe,SAASA,qBAAT,CACdC,UADc,EAEdC,MAFc,EAIb;AAAA;;AAAA,MADDC,MACC,uEADQ,KACR;AACD;AADC,MAEOC,eAFP,GAEuDH,UAFvD,CAEOG,eAFP;AAAA,MAEwBC,SAFxB,GAEuDJ,UAFvD,CAEwBI,SAFxB;AAAA,MAEmCC,QAFnC,GAEuDL,UAFvD,CAEmCK,QAFnC;AAAA,MAE6CC,KAF7C,GAEuDN,UAFvD,CAE6CM,KAF7C;AAID,MAAMC,eAAe,GAAG,oCACvB,kBADuB,EAEvBJ,eAFuB,CAAxB;AAIA,MAAMK,aAAa,GAAG,iDAAgCH,QAAhC,CAAtB;AACA,MAAMI,SAAS,GAAG,oCAAmB,OAAnB,EAA4BL,SAA5B,CAAlB;AACA,MAAMM,SAAS,GAAG,0BAAYD,SAAZ,EAAuBD,aAAvB,gEAEfD,eAFe,EAEI,EAAED,KAAF,aAAEA,KAAF,uCAAEA,KAAK,CAAEK,KAAT,iDAAE,aAAcN,QAAhB,KAA4B,CAAC,CAAEE,eAFnC,8CAGjB,gBAHiB,EAGCH,SAAS,KAAIE,KAAJ,aAAIA,KAAJ,wCAAIA,KAAK,CAAEK,KAAX,kDAAI,cAAcC,IAAlB,CAHV,8CAIjB,gBAJiB,EAKhBT,eAAe,KACfG,KADe,aACfA,KADe,wCACfA,KAAK,CAAEK,KADQ,kDACf,cAAcE,UADC,CAAf,IAEAR,QAFA,KAGAC,KAHA,aAGAA,KAHA,wCAGAA,KAAK,CAAEK,KAHP,kDAGA,cAAcN,QAHd,CALgB,gBAAlB;AAUA,MAAMS,SAAS,GACd,CAAAR,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEK,KAAP,gEAAcE,UAAd,MAA4BP,KAA5B,aAA4BA,KAA5B,wCAA4BA,KAAK,CAAEK,KAAnC,kDAA4B,cAAcC,IAA1C,MAAkDN,KAAlD,aAAkDA,KAAlD,wCAAkDA,KAAK,CAAEK,KAAzD,kDAAkD,cAAcN,QAAhE,IACG;AACAQ,IAAAA,UAAU,EAAE,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEK,KAAP,gEAAcN,QAAd,IACTC,KAAK,CAACK,KAAN,CAAYN,QADH,GAETU,SAHH;AAIAZ,IAAAA,eAAe,EAAE,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEK,KAAP,gEAAcE,UAAd,IACdP,KAAK,CAACK,KAAN,CAAYE,UADE,GAEdE,SANH;AAOAJ,IAAAA,KAAK,EAAE,CAAAL,KAAK,SAAL,IAAAA,KAAK,WAAL,8BAAAA,KAAK,CAAEK,KAAP,kEAAcC,IAAd,IAAqBN,KAAK,CAACK,KAAN,CAAYC,IAAjC,GAAwCG;AAP/C,GADH,GAUG,EAXJ,CApBC,CAiCD;AACA;;AACA,MAAKb,MAAL,EAAc;AACb,QAAKC,eAAL,EAAuB;AACtB,UAAMa,qBAAqB,GAAG,kDAC7Bf,MAD6B,EAE7BE,eAF6B,CAA9B;AAKAW,MAAAA,SAAS,CAACX,eAAV,GAA4Ba,qBAAqB,CAACL,KAAlD;AACA;;AAED,QAAKP,SAAL,EAAiB;AAChB,UAAMa,eAAe,GAAG,kDACvBhB,MADuB,EAEvBG,SAFuB,CAAxB;AAKAU,MAAAA,SAAS,CAACH,KAAV,GAAkBM,eAAe,CAACN,KAAlC;AACA;AACD;;AAED,SAAO;AACND,IAAAA,SAAS,EAAE,CAAC,CAAEA,SAAH,GAAeA,SAAf,GAA2BK,SADhC;AAENT,IAAAA,KAAK,EAAEQ;AAFD,GAAP;AAIA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetColorClassName,\n\tgetColorObjectByAttributeValues,\n\t__experimentalGetGradientClass,\n} from '@wordpress/block-editor';\n\n// The code in this file is copied entirely from the \"color\" and \"style\" support flags\n// The flag can't be used at the moment because of the extra wrapper around\n// the button block markup.\n\nexport default function getColorAndStyleProps(\n\tattributes,\n\tcolors,\n\tisEdit = false\n) {\n\t// I'd have prefered to avoid the \"style\" attribute usage here\n\tconst { backgroundColor, textColor, gradient, style } = attributes;\n\n\tconst backgroundClass = getColorClassName(\n\t\t'background-color',\n\t\tbackgroundColor\n\t);\n\tconst gradientClass = __experimentalGetGradientClass( gradient );\n\tconst textClass = getColorClassName( 'color', textColor );\n\tconst className = classnames( textClass, gradientClass, {\n\t\t// Don't apply the background class if there's a custom gradient\n\t\t[ backgroundClass ]: ! style?.color?.gradient && !! backgroundClass,\n\t\t'has-text-color': textColor || style?.color?.text,\n\t\t'has-background':\n\t\t\tbackgroundColor ||\n\t\t\tstyle?.color?.background ||\n\t\t\tgradient ||\n\t\t\tstyle?.color?.gradient,\n\t} );\n\tconst styleProp =\n\t\tstyle?.color?.background || style?.color?.text || style?.color?.gradient\n\t\t\t? {\n\t\t\t\t\tbackground: style?.color?.gradient\n\t\t\t\t\t\t? style.color.gradient\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tbackgroundColor: style?.color?.background\n\t\t\t\t\t\t? style.color.background\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tcolor: style?.color?.text ? style.color.text : undefined,\n\t\t\t  }\n\t\t\t: {};\n\n\t// This is needed only for themes that don't load their color stylesheets in the editor\n\t// We force an inline style to apply the color.\n\tif ( isEdit ) {\n\t\tif ( backgroundColor ) {\n\t\t\tconst backgroundColorObject = getColorObjectByAttributeValues(\n\t\t\t\tcolors,\n\t\t\t\tbackgroundColor\n\t\t\t);\n\n\t\t\tstyleProp.backgroundColor = backgroundColorObject.color;\n\t\t}\n\n\t\tif ( textColor ) {\n\t\t\tconst textColorObject = getColorObjectByAttributeValues(\n\t\t\t\tcolors,\n\t\t\t\ttextColor\n\t\t\t);\n\n\t\t\tstyleProp.color = textColorObject.color;\n\t\t}\n\t}\n\n\treturn {\n\t\tclassName: !! className ? className : undefined,\n\t\tstyle: styleProp,\n\t};\n}\n"]}