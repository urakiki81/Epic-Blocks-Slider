{"version":3,"sources":["@wordpress/block-library/src/embed/embed-preview.js"],"names":["EmbedPreview","arguments","hideOverlay","bind","state","interactive","setState","props","preview","previewable","url","type","caption","onCaptionChange","isSelected","className","icon","label","insertBlocksAfter","scripts","html","parsedHost","URL","host","split","parsedHostBaseUrl","splice","length","join","iframeTitle","sandboxClassnames","embedWrapper","RichText","isEmpty","nextProps","Component"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport { getPhotoHtml } from './util';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames/dedupe';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Placeholder, SandBox } from '@wordpress/components';\nimport { RichText, BlockIcon } from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport WpEmbedPreview from './wp-embed-preview';\n\nclass EmbedPreview extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.hideOverlay = this.hideOverlay.bind( this );\n\t\tthis.state = {\n\t\t\tinteractive: false,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, state ) {\n\t\tif ( ! nextProps.isSelected && state.interactive ) {\n\t\t\t// We only want to change this when the block is not selected, because changing it when\n\t\t\t// the block becomes selected makes the overlap disappear too early. Hiding the overlay\n\t\t\t// happens on mouseup when the overlay is clicked.\n\t\t\treturn { interactive: false };\n\t\t}\n\n\t\treturn null;\n\t}\n\n\thideOverlay() {\n\t\t// This is called onMouseUp on the overlay. We can't respond to the `isSelected` prop\n\t\t// changing, because that happens on mouse down, and the overlay immediately disappears,\n\t\t// and the mouse event can end up in the preview content. We can't use onClick on\n\t\t// the overlay to hide it either, because then the editor misses the mouseup event, and\n\t\t// thinks we're multi-selecting blocks.\n\t\tthis.setState( { interactive: true } );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tpreview,\n\t\t\tpreviewable,\n\t\t\turl,\n\t\t\ttype,\n\t\t\tcaption,\n\t\t\tonCaptionChange,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tinsertBlocksAfter,\n\t\t} = this.props;\n\t\tconst { scripts } = preview;\n\t\tconst { interactive } = this.state;\n\n\t\tconst html = 'photo' === type ? getPhotoHtml( preview ) : preview.html;\n\t\tconst parsedHost = new URL( url ).host.split( '.' );\n\t\tconst parsedHostBaseUrl = parsedHost\n\t\t\t.splice( parsedHost.length - 2, parsedHost.length - 1 )\n\t\t\t.join( '.' );\n\t\tconst iframeTitle = sprintf(\n\t\t\t// translators: %s: host providing embed content e.g: www.youtube.com\n\t\t\t__( 'Embedded content from %s' ),\n\t\t\tparsedHostBaseUrl\n\t\t);\n\t\tconst sandboxClassnames = classnames(\n\t\t\ttype,\n\t\t\tclassName,\n\t\t\t'wp-block-embed__wrapper'\n\t\t);\n\n\t\t// Disabled because the overlay div doesn't actually have a role or functionality\n\t\t// as far as the user is concerned. We're just catching the first click so that\n\t\t// the block can be selected without interacting with the embed preview that the overlay covers.\n\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\tconst embedWrapper =\n\t\t\t'wp-embed' === type ? (\n\t\t\t\t<WpEmbedPreview html={ html } />\n\t\t\t) : (\n\t\t\t\t<div className=\"wp-block-embed__wrapper\">\n\t\t\t\t\t<SandBox\n\t\t\t\t\t\thtml={ html }\n\t\t\t\t\t\tscripts={ scripts }\n\t\t\t\t\t\ttitle={ iframeTitle }\n\t\t\t\t\t\ttype={ sandboxClassnames }\n\t\t\t\t\t\tonFocus={ this.hideOverlay }\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! interactive && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"block-library-embed__interactive-overlay\"\n\t\t\t\t\t\t\tonMouseUp={ this.hideOverlay }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t);\n\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\n\t\treturn (\n\t\t\t<figure\n\t\t\t\tclassName={ classnames( className, 'wp-block-embed', {\n\t\t\t\t\t'is-type-video': 'video' === type,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ previewable ? (\n\t\t\t\t\tembedWrapper\n\t\t\t\t) : (\n\t\t\t\t\t<Placeholder\n\t\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className=\"components-placeholder__error\">\n\t\t\t\t\t\t\t<a href={ url }>{ url }</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"components-placeholder__error\">\n\t\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: host providing embed content e.g: www.youtube.com */\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\"Embedded content from %s can't be previewed in the editor.\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tparsedHostBaseUrl\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Placeholder>\n\t\t\t\t) }\n\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\tplaceholder={ __( 'Write captionâ€¦' ) }\n\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\tonChange={ onCaptionChange }\n\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</figure>\n\t\t);\n\t}\n}\n\nexport default EmbedPreview;\n"]}