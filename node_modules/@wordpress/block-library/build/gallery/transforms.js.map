{"version":3,"sources":["@wordpress/block-library/src/gallery/transforms.js"],"names":["parseShortcodeIds","ids","split","map","id","parseInt","transforms","from","type","isMultiBlock","blocks","transform","attributes","align","sizeSlug","undefined","validImages","url","images","alt","caption","tag","shortcode","named","columns","linkTo","link","isMatch","files","length","file","indexOf","block","to","index"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { filter, every, toString } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { createBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport { pickRelevantMediaFiles } from './shared';\n\nconst parseShortcodeIds = ( ids ) => {\n\tif ( ! ids ) {\n\t\treturn [];\n\t}\n\n\treturn ids.split( ',' ).map( ( id ) => parseInt( id, 10 ) );\n};\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/image' ],\n\t\t\ttransform: ( attributes ) => {\n\t\t\t\t// Init the align and size from the first item which may be either the placeholder or an image.\n\t\t\t\tlet { align, sizeSlug } = attributes[ 0 ];\n\t\t\t\t// Loop through all the images and check if they have the same align and size.\n\t\t\t\talign = every( attributes, [ 'align', align ] )\n\t\t\t\t\t? align\n\t\t\t\t\t: undefined;\n\t\t\t\tsizeSlug = every( attributes, [ 'sizeSlug', sizeSlug ] )\n\t\t\t\t\t? sizeSlug\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst validImages = filter( attributes, ( { url } ) => url );\n\n\t\t\t\treturn createBlock( 'core/gallery', {\n\t\t\t\t\timages: validImages.map(\n\t\t\t\t\t\t( { id, url, alt, caption } ) => ( {\n\t\t\t\t\t\t\tid: toString( id ),\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\talt,\n\t\t\t\t\t\t\tcaption,\n\t\t\t\t\t\t} )\n\t\t\t\t\t),\n\t\t\t\t\tids: validImages.map( ( { id } ) => parseInt( id, 10 ) ),\n\t\t\t\t\talign,\n\t\t\t\t\tsizeSlug,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'shortcode',\n\t\t\ttag: 'gallery',\n\t\t\tattributes: {\n\t\t\t\timages: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tshortcode: ( { named: { ids } } ) => {\n\t\t\t\t\t\treturn parseShortcodeIds( ids ).map( ( id ) => ( {\n\t\t\t\t\t\t\tid: toString( id ),\n\t\t\t\t\t\t} ) );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tids: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tshortcode: ( { named: { ids } } ) => {\n\t\t\t\t\t\treturn parseShortcodeIds( ids );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcolumns: {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tshortcode: ( { named: { columns = '3' } } ) => {\n\t\t\t\t\t\treturn parseInt( columns, 10 );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlinkTo: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { link = 'attachment' } } ) => {\n\t\t\t\t\t\treturn link === 'file' ? 'media' : link;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tisMatch( { named } ) {\n\t\t\t\treturn undefined !== named.ids;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// When created by drag and dropping multiple files on an insertion point\n\t\t\ttype: 'files',\n\t\t\tisMatch( files ) {\n\t\t\t\treturn (\n\t\t\t\t\tfiles.length !== 1 &&\n\t\t\t\t\tevery(\n\t\t\t\t\t\tfiles,\n\t\t\t\t\t\t( file ) => file.type.indexOf( 'image/' ) === 0\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform( files ) {\n\t\t\t\tconst block = createBlock( 'core/gallery', {\n\t\t\t\t\timages: files.map( ( file ) =>\n\t\t\t\t\t\tpickRelevantMediaFiles( {\n\t\t\t\t\t\t\turl: createBlobURL( file ),\n\t\t\t\t\t\t} )\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t\treturn block;\n\t\t\t},\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/image' ],\n\t\t\ttransform: ( { images, align, sizeSlug, ids } ) => {\n\t\t\t\tif ( images.length > 0 ) {\n\t\t\t\t\treturn images.map( ( { url, alt, caption }, index ) =>\n\t\t\t\t\t\tcreateBlock( 'core/image', {\n\t\t\t\t\t\t\tid: ids[ index ],\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\talt,\n\t\t\t\t\t\t\tcaption,\n\t\t\t\t\t\t\talign,\n\t\t\t\t\t\t\tsizeSlug,\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn createBlock( 'core/image', { align } );\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}