{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["TEMPLATE","QueryEdit","attributes","queryId","query","setAttributes","instanceId","updateQuery","newQuery"],"mappings":";;;;;;;;;;;;AAIA;;;;AADA;;AAEA;;AASA;;AACA;;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhCA;;;;;;AAEA,IAAMA,QAAQ,GAAG,CAAE,CAAE,iBAAF,CAAF,EAAyB,CAAE,uBAAF,CAAzB,CAAjB;;AACe,SAASC,SAAT,OAGX;AAAA,6BAFHC,UAEG;AAAA,MAFWC,OAEX,mBAFWA,OAEX;AAAA,MAFoBC,KAEpB,mBAFoBA,KAEpB;AAAA,MADHC,aACG,QADHA,aACG;AACH,MAAMC,UAAU,GAAG,4BAAeL,SAAf,CAAnB,CADG,CAEH;AACA;;AACA,0BAAW,YAAM;AAChB,QAAK,CAAEE,OAAP,EAAiB;AAChBE,MAAAA,aAAa,CAAE;AAAEF,QAAAA,OAAO,EAAEG;AAAX,OAAF,CAAb;AACA;AACD,GAJD,EAIG,CAAEH,OAAF,EAAWG,UAAX,CAJH;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAEC,QAAF;AAAA,WACnBH,aAAa,CAAE;AAAED,MAAAA,KAAK,oBAAOA,KAAP,MAAiBI,QAAjB;AAAP,KAAF,CADM;AAAA,GAApB;;AAEA,SACC,qDACC,4BAAC,+BAAD;AAAwB,IAAA,KAAK,EAAGJ,KAAhC;AAAwC,IAAA,QAAQ,EAAGG;AAAnD,IADD,EAEC,4BAAC,0BAAD,QACC,4BAAC,qBAAD;AAAc,IAAA,KAAK,EAAGH,KAAtB;AAA8B,IAAA,QAAQ,EAAGG;AAAzC,IADD,CAFD,EAKC,4BAAC,gCAAD,CAAO,GAAP,QACC,4BAAC,sBAAD,QACC,4BAAC,wBAAD;AAAa,IAAA,QAAQ,EAAGP;AAAxB,IADD,CADD,CALD,CADD;AAaA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tInnerBlocks,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryProvider from './query-provider';\nimport QueryInspectorControls from './query-inspector-controls';\n\nconst TEMPLATE = [ [ 'core/query-loop' ], [ 'core/query-pagination' ] ];\nexport default function QueryEdit( {\n\tattributes: { queryId, query },\n\tsetAttributes,\n} ) {\n\tconst instanceId = useInstanceId( QueryEdit );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls query={ query } setQuery={ updateQuery } />\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar query={ query } setQuery={ updateQuery } />\n\t\t\t</BlockControls>\n\t\t\t<Block.div>\n\t\t\t\t<QueryProvider>\n\t\t\t\t\t<InnerBlocks template={ TEMPLATE } />\n\t\t\t\t</QueryProvider>\n\t\t\t</Block.div>\n\t\t</>\n\t);\n}\n\nexport * from './query-provider';\n"]}