{"version":3,"sources":["@wordpress/block-library/src/index.native.js"],"names":["coreBlocks","paragraph","image","heading","gallery","list","quote","shortcode","archives","audio","button","calendar","categories","code","columns","column","cover","embed","file","html","mediaText","latestComments","latestPosts","missing","more","nextpage","preformatted","pullquote","rss","search","separator","reusableBlock","spacer","subhead","table","tagCloud","textColumns","verse","video","classic","buttons","socialLink","socialLinks","reduce","accumulator","block","name","registerBlock","metadata","settings","registerBlockVariations","variations","forEach","v","icon","title","devOnly","__DEV__","iOSOnly","Platform","OS","hiddenBlocks","includes","supports","inserter","registerCoreBlocks","group"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Platform } from 'react-native';\nimport { sortBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\thasBlockSupport,\n\tregisterBlockType,\n\tsetDefaultBlockName,\n\tsetFreeformContentHandlerName,\n\tsetUnregisteredTypeHandlerName,\n\tsetGroupingBlockName,\n} from '@wordpress/blocks';\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport * as paragraph from './paragraph';\nimport * as image from './image';\nimport * as heading from './heading';\nimport * as quote from './quote';\nimport * as gallery from './gallery';\nimport * as archives from './archives';\nimport * as audio from './audio';\nimport * as button from './button';\nimport * as calendar from './calendar';\nimport * as categories from './categories';\nimport * as code from './code';\nimport * as columns from './columns';\nimport * as column from './column';\nimport * as cover from './cover';\nimport * as embed from './embed';\nimport * as file from './file';\nimport * as html from './html';\nimport * as mediaText from './media-text';\nimport * as latestComments from './latest-comments';\nimport * as latestPosts from './latest-posts';\nimport * as list from './list';\nimport * as missing from './missing';\nimport * as more from './more';\nimport * as nextpage from './nextpage';\nimport * as preformatted from './preformatted';\nimport * as pullquote from './pullquote';\nimport * as reusableBlock from './block';\nimport * as rss from './rss';\nimport * as search from './search';\nimport * as separator from './separator';\nimport * as shortcode from './shortcode';\nimport * as spacer from './spacer';\nimport * as subhead from './subhead';\nimport * as table from './table';\nimport * as textColumns from './text-columns';\nimport * as verse from './verse';\nimport * as video from './video';\nimport * as tagCloud from './tag-cloud';\nimport * as classic from './classic';\nimport * as group from './group';\nimport * as buttons from './buttons';\nimport * as socialLink from './social-link';\nimport * as socialLinks from './social-links';\n\nexport const coreBlocks = [\n\t// Common blocks are grouped at the top to prioritize their display\n\t// in various contexts â€” like the inserter and auto-complete components.\n\tparagraph,\n\timage,\n\theading,\n\tgallery,\n\tlist,\n\tquote,\n\n\t// Register all remaining core blocks.\n\tshortcode,\n\tarchives,\n\taudio,\n\tbutton,\n\tcalendar,\n\tcategories,\n\tcode,\n\tcolumns,\n\tcolumn,\n\tcover,\n\tembed,\n\tfile,\n\thtml,\n\tmediaText,\n\tlatestComments,\n\tlatestPosts,\n\tmissing,\n\tmore,\n\tnextpage,\n\tpreformatted,\n\tpullquote,\n\trss,\n\tsearch,\n\tseparator,\n\treusableBlock,\n\tspacer,\n\tsubhead,\n\ttable,\n\ttagCloud,\n\ttextColumns,\n\tverse,\n\tvideo,\n\tclassic,\n\tbuttons,\n\tsocialLink,\n\tsocialLinks,\n].reduce( ( accumulator, block ) => {\n\taccumulator[ block.name ] = block;\n\treturn accumulator;\n}, {} );\n\n/**\n * Function to register an individual block.\n *\n * @param {Object} block The block to be registered.\n *\n */\nconst registerBlock = ( block ) => {\n\tif ( ! block ) {\n\t\treturn;\n\t}\n\tconst { metadata, settings, name } = block;\n\tregisterBlockType( name, {\n\t\t...metadata,\n\t\t...settings,\n\t} );\n};\n\n/**\n * Function to register a block variations e.g. social icons different types.\n *\n * @param {Object} block The block which variations will be registered.\n *\n */\nconst registerBlockVariations = ( block ) => {\n\tconst { metadata, settings, name } = block;\n\n\tsortBy( settings.variations, 'title' ).forEach( ( v ) => {\n\t\tregisterBlockType( `${ name }-${ v.name }`, {\n\t\t\t...metadata,\n\t\t\tname: `${ name }-${ v.name }`,\n\t\t\t...settings,\n\t\t\ticon: v.icon(),\n\t\t\ttitle: v.title,\n\t\t} );\n\t} );\n};\n\n// only enable code block for development\n// eslint-disable-next-line no-undef\nconst devOnly = ( block ) => ( !! __DEV__ ? block : null );\n\n// eslint-disable-next-line no-unused-vars\nconst iOSOnly = ( block ) =>\n\tPlatform.OS === 'ios' ? block : devOnly( block );\n\n// Hide the Classic block and SocialLink block\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/react-native-editor',\n\t( settings, name ) => {\n\t\tconst hiddenBlocks = [ 'core/freeform', 'core/social-link' ];\n\t\tif (\n\t\t\thiddenBlocks.includes( name ) &&\n\t\t\thasBlockSupport( settings, 'inserter', true )\n\t\t) {\n\t\t\tsettings.supports = {\n\t\t\t\t...settings.supports,\n\t\t\t\tinserter: false,\n\t\t\t};\n\t\t}\n\n\t\treturn settings;\n\t}\n);\n\n/**\n * Function to register core blocks provided by the block editor.\n *\n * @example\n * ```js\n * import { registerCoreBlocks } from '@wordpress/block-library';\n *\n * registerCoreBlocks();\n * ```\n */\nexport const registerCoreBlocks = () => {\n\t[\n\t\tparagraph,\n\t\theading,\n\t\tdevOnly( code ),\n\t\tmissing,\n\t\tmore,\n\t\timage,\n\t\tvideo,\n\t\tnextpage,\n\t\tseparator,\n\t\tlist,\n\t\tquote,\n\t\tmediaText,\n\t\tpreformatted,\n\t\tgallery,\n\t\tcolumns,\n\t\tcolumn,\n\t\tgroup,\n\t\tclassic,\n\t\tbutton,\n\t\tspacer,\n\t\tshortcode,\n\t\tbuttons,\n\t\tlatestPosts,\n\t\tverse,\n\t\tcover,\n\t\tsocialLink,\n\t\tsocialLinks,\n\t\tpullquote,\n\t].forEach( registerBlock );\n\n\tregisterBlockVariations( socialLink );\n\tsetDefaultBlockName( paragraph.name );\n\tsetFreeformContentHandlerName( classic.name );\n\tsetUnregisteredTypeHandlerName( missing.name );\n\tif ( group ) {\n\t\tsetGroupingBlockName( group.name );\n\t}\n};\n"]}