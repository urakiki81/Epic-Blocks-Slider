import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useInstanceId } from '@wordpress/compose';
import { forwardRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import Backdrop from './backdrop';
import Label from './label';
import { Container, Root, Prefix, Suffix, LabelWrapper } from './styles/input-control-styles';

function useUniqueId(idProp) {
  var instanceId = useInstanceId(InputBase);
  var id = "input-base-control-".concat(instanceId);
  return idProp || id;
}

export function InputBase(_ref, ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      _ref$hideLabelFromVis = _ref.hideLabelFromVision,
      hideLabelFromVision = _ref$hideLabelFromVis === void 0 ? false : _ref$hideLabelFromVis,
      idProp = _ref.id,
      _ref$isFloatingLabel = _ref.isFloatingLabel,
      isFloatingLabel = _ref$isFloatingLabel === void 0 ? false : _ref$isFloatingLabel,
      _ref$isFilled = _ref.isFilled,
      isFilled = _ref$isFilled === void 0 ? false : _ref$isFilled,
      _ref$isFocused = _ref.isFocused,
      isFocused = _ref$isFocused === void 0 ? false : _ref$isFocused,
      label = _ref.label,
      prefix = _ref.prefix,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      suffix = _ref.suffix,
      props = _objectWithoutProperties(_ref, ["children", "className", "disabled", "hideLabelFromVision", "id", "isFloatingLabel", "isFilled", "isFocused", "label", "prefix", "size", "suffix"]);

  var id = useUniqueId(idProp);
  var isFloating = isFloatingLabel ? isFilled || isFocused : false;
  var isFloatingLabelSet = !hideLabelFromVision && isFloatingLabel && label;
  return createElement(Root, _extends({}, props, {
    className: className,
    isFloatingLabel: isFloatingLabelSet,
    isFocused: isFocused,
    ref: ref
  }), createElement(LabelWrapper, null, createElement(Label, {
    className: "components-input-control__label",
    hideLabelFromVision: hideLabelFromVision,
    htmlFor: id,
    isFilled: isFilled,
    isFloating: isFloating,
    isFloatingLabel: isFloatingLabel,
    size: size
  }, label)), createElement(Container, {
    className: "components-input-control__container",
    disabled: disabled,
    isFocused: isFocused
  }, prefix && createElement(Prefix, {
    className: "components-input-control__prefix"
  }, prefix), children, suffix && createElement(Suffix, {
    className: "components-input-control__suffix"
  }, suffix), createElement(Backdrop, {
    "aria-hidden": "true",
    disabled: disabled,
    isFloating: isFloating,
    isFloatingLabel: isFloatingLabelSet,
    isFocused: isFocused,
    label: label,
    size: size
  })));
}
export default forwardRef(InputBase);
//# sourceMappingURL=input-base.js.map