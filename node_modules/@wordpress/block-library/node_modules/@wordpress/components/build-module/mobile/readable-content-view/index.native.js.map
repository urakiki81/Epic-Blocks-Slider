{"version":3,"sources":["@wordpress/components/src/mobile/readable-content-view/index.native.js"],"names":["View","Dimensions","useState","useEffect","ALIGNMENT_BREAKPOINTS","WIDE_ALIGNMENTS","styles","PIXEL_RATIO","ReadableContentView","align","reversed","children","style","get","width","height","windowWidth","setWindowWidth","windowRatio","setWindowRatio","onDimensionsChange","window","alignments","wide","addEventListener","removeEventListener","getWideStyles","large","wideLandscape","small","maxWidth","medium","wideMedium","container","reversedCenteredContent","centeredContent","isContentMaxWidth"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { ALIGNMENT_BREAKPOINTS, WIDE_ALIGNMENTS } from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nconst PIXEL_RATIO = 2;\n\nconst ReadableContentView = ( { align, reversed, children, style } ) => {\n\tconst { width, height } = Dimensions.get( 'window' );\n\tconst [ windowWidth, setWindowWidth ] = useState( width );\n\tconst [ windowRatio, setWindowRatio ] = useState( width / height );\n\n\tfunction onDimensionsChange( { window } ) {\n\t\tsetWindowWidth( window.width );\n\t\tsetWindowRatio( window.width / window.height );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( align === WIDE_ALIGNMENTS.alignments.wide ) {\n\t\t\tDimensions.addEventListener( 'change', onDimensionsChange );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( align === WIDE_ALIGNMENTS.alignments.wide ) {\n\t\t\t\tDimensions.removeEventListener( 'change', onDimensionsChange );\n\t\t\t}\n\t\t};\n\t}, [ align ] );\n\n\tfunction getWideStyles() {\n\t\tif (\n\t\t\twindowRatio >= PIXEL_RATIO &&\n\t\t\twindowWidth < ALIGNMENT_BREAKPOINTS.large\n\t\t) {\n\t\t\treturn styles.wideLandscape;\n\t\t}\n\n\t\tif ( windowWidth <= ALIGNMENT_BREAKPOINTS.small ) {\n\t\t\treturn { maxWidth: windowWidth };\n\t\t}\n\n\t\tif (\n\t\t\twindowWidth >= ALIGNMENT_BREAKPOINTS.medium &&\n\t\t\twindowWidth < ALIGNMENT_BREAKPOINTS.wide\n\t\t) {\n\t\t\treturn styles.wideMedium;\n\t\t}\n\t}\n\n\treturn (\n\t\t<View style={ styles.container }>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\treversed\n\t\t\t\t\t\t? styles.reversedCenteredContent\n\t\t\t\t\t\t: styles.centeredContent,\n\t\t\t\t\tstyle,\n\t\t\t\t\tstyles[ align ],\n\t\t\t\t\talign === WIDE_ALIGNMENTS.alignments.wide &&\n\t\t\t\t\t\tgetWideStyles(),\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nconst isContentMaxWidth = () => {\n\tconst { width } = Dimensions.get( 'window' );\n\treturn width > styles.centeredContent.maxWidth;\n};\n\nReadableContentView.isContentMaxWidth = isContentMaxWidth;\n\nexport default ReadableContentView;\n"]}