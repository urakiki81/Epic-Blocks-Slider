{"version":3,"sources":["@wordpress/block-library/src/button/edit.native.js"],"names":["View","AccessibilityInfo","Platform","Text","withInstanceId","compose","__","RichText","withColors","InspectorControls","BlockControls","withGradient","PanelBody","RangeControl","ToolbarGroup","ToolbarButton","LinkSettings","Component","withSelect","withDispatch","link","richTextStyle","styles","ColorBackground","ColorEdit","getColorAndStyleProps","MIN_BORDER_RADIUS_VALUE","MAX_BORDER_RADIUS_VALUE","INITIAL_MAX_WIDTH","ButtonEdit","props","onChangeText","bind","onChangeBorderRadius","onClearSettings","onLayout","onSetMaxWidth","dismissSheet","onShowLinkSettings","onHideLinkSettings","onToggleButtonFocus","setRef","onRemove","getPlaceholderWidth","state","maxWidth","isLinkSheetVisible","isButtonFocused","placeholderTextWidth","prevProps","prevState","selectedId","editorSidebarOpened","parentWidth","OS","richTextRef","blur","selectedRichText","id","isScreenReaderEnabled","then","enabled","focus","backgroundColor","attributes","gradientValue","customGradient","colorAndStyleProps","style","background","color","defaultButton","textColor","value","setAttributes","text","borderRadius","setState","url","rel","linkTarget","nativeEvent","width","layout","spacing","marginRight","isParentWidthChanged","isWidthChanged","numOfButtons","onDeleteBlock","onReplace","closeSettingsBottomSheet","isCompatibleWithSettings","actions","label","onPress","options","placeholder","autoFocus","autoFill","openInNewTab","linkRel","richText","placeholderText","textWidth","lines","Math","min","isSelected","clientId","mergeBlocks","paddingTop","borderWidth","borderRadiusValue","Number","isInteger","outlineBorderRadius","minWidth","getBackgroundColor","getTextColor","outline","borderColor","placeholderTextColor","getLinkSettings","select","isEditorSidebarOpened","getSelectedBlockClientId","getBlockCount","getBlockRootClientId","parentId","dispatch","closeGeneralSidebar"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, AccessibilityInfo, Platform, Text } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tRichText,\n\twithColors,\n\tInspectorControls,\n\tBlockControls,\n\twithGradient,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tToolbarGroup,\n\tToolbarButton,\n\tLinkSettings,\n} from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { link } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport richTextStyle from './rich-text.scss';\nimport styles from './editor.scss';\nimport ColorBackground from './color-background';\nimport ColorEdit from './color-edit';\nimport getColorAndStyleProps from './color-props';\n\nconst MIN_BORDER_RADIUS_VALUE = 0;\nconst MAX_BORDER_RADIUS_VALUE = 50;\nconst INITIAL_MAX_WIDTH = 108;\n\nclass ButtonEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onChangeText = this.onChangeText.bind( this );\n\t\tthis.onChangeBorderRadius = this.onChangeBorderRadius.bind( this );\n\t\tthis.onClearSettings = this.onClearSettings.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.onSetMaxWidth = this.onSetMaxWidth.bind( this );\n\t\tthis.dismissSheet = this.dismissSheet.bind( this );\n\t\tthis.onShowLinkSettings = this.onShowLinkSettings.bind( this );\n\t\tthis.onHideLinkSettings = this.onHideLinkSettings.bind( this );\n\t\tthis.onToggleButtonFocus = this.onToggleButtonFocus.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.onRemove = this.onRemove.bind( this );\n\t\tthis.getPlaceholderWidth = this.getPlaceholderWidth.bind( this );\n\n\t\tthis.state = {\n\t\t\tmaxWidth: INITIAL_MAX_WIDTH,\n\t\t\tisLinkSheetVisible: false,\n\t\t\tisButtonFocused: true,\n\t\t\tplaceholderTextWidth: 0,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onSetMaxWidth();\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst { selectedId, editorSidebarOpened, parentWidth } = this.props;\n\t\tconst { isLinkSheetVisible, isButtonFocused } = this.state;\n\n\t\tif ( prevProps.selectedId !== selectedId ) {\n\t\t\tthis.onToggleButtonFocus( true );\n\t\t}\n\n\t\tif ( prevProps.parentWidth !== parentWidth ) {\n\t\t\tthis.onSetMaxWidth();\n\t\t}\n\n\t\t// Blur `RichText` on Android when link settings sheet or button settings sheet is opened,\n\t\t// to avoid flashing caret after closing one of them\n\t\tif (\n\t\t\t( ! prevProps.editorSidebarOpened && editorSidebarOpened ) ||\n\t\t\t( ! prevState.isLinkSheetVisible && isLinkSheetVisible )\n\t\t) {\n\t\t\tif ( Platform.OS === 'android' && this.richTextRef ) {\n\t\t\t\tthis.richTextRef.blur();\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.richTextRef ) {\n\t\t\tconst selectedRichText = this.richTextRef.props.id === selectedId;\n\n\t\t\tif ( ! selectedRichText && isButtonFocused ) {\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tselectedRichText &&\n\t\t\t\tselectedId !== prevProps.selectedId &&\n\t\t\t\t! isButtonFocused\n\t\t\t) {\n\t\t\t\tAccessibilityInfo.isScreenReaderEnabled().then( ( enabled ) => {\n\t\t\t\t\tif ( enabled ) {\n\t\t\t\t\t\tthis.onToggleButtonFocus( true );\n\t\t\t\t\t\tthis.richTextRef.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetBackgroundColor() {\n\t\tconst { backgroundColor, attributes, gradientValue } = this.props;\n\t\tconst { customGradient } = attributes;\n\n\t\tif ( customGradient || gradientValue ) {\n\t\t\treturn customGradient || gradientValue;\n\t\t}\n\t\tconst colorAndStyleProps = getColorAndStyleProps( attributes );\n\t\treturn (\n\t\t\tcolorAndStyleProps.style?.backgroundColor ||\n\t\t\tcolorAndStyleProps.style?.background ||\n\t\t\t// We still need the `backgroundColor.color` to support colors from the color pallete (not custom ones)\n\t\t\tbackgroundColor.color ||\n\t\t\tstyles.defaultButton.backgroundColor\n\t\t);\n\t}\n\n\tgetTextColor() {\n\t\tconst { textColor, attributes } = this.props;\n\t\tconst colorAndStyleProps = getColorAndStyleProps( attributes );\n\n\t\treturn (\n\t\t\tcolorAndStyleProps.style?.color ||\n\t\t\t// We still need the `textColor.color` to support colors from the color pallete (not custom ones)\n\t\t\ttextColor.color ||\n\t\t\tstyles.defaultButton.color\n\t\t);\n\t}\n\n\tonChangeText( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { text: value } );\n\t}\n\n\tonChangeBorderRadius( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( {\n\t\t\tborderRadius: value,\n\t\t} );\n\t}\n\n\tonShowLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: true } );\n\t}\n\n\tonHideLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: false } );\n\t}\n\n\tonToggleButtonFocus( value ) {\n\t\tthis.setState( { isButtonFocused: value } );\n\t}\n\n\tonClearSettings() {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\turl: '',\n\t\t\trel: '',\n\t\t\tlinkTarget: '',\n\t\t} );\n\n\t\tthis.onHideLinkSettings();\n\t}\n\n\tonLayout( { nativeEvent } ) {\n\t\tconst { width } = nativeEvent.layout;\n\t\tthis.onSetMaxWidth( width );\n\t}\n\n\tonSetMaxWidth( width ) {\n\t\tconst { maxWidth } = this.state;\n\t\tconst { parentWidth } = this.props;\n\t\tconst { marginRight: spacing } = styles.defaultButton;\n\n\t\tconst isParentWidthChanged = maxWidth !== parentWidth;\n\t\tconst isWidthChanged = maxWidth !== width;\n\n\t\tif ( parentWidth && ! width && isParentWidthChanged ) {\n\t\t\tthis.setState( {\n\t\t\t\tmaxWidth: parentWidth,\n\t\t\t} );\n\t\t} else if ( ! parentWidth && width && isWidthChanged ) {\n\t\t\tthis.setState( { maxWidth: width - spacing } );\n\t\t}\n\t}\n\n\tonRemove() {\n\t\tconst { numOfButtons, onDeleteBlock, onReplace } = this.props;\n\n\t\tif ( numOfButtons === 1 ) {\n\t\t\tonDeleteBlock();\n\t\t} else {\n\t\t\tonReplace( [] );\n\t\t}\n\t}\n\n\tdismissSheet() {\n\t\tthis.onHideLinkSettings();\n\t\tthis.props.closeSettingsBottomSheet();\n\t}\n\n\tgetLinkSettings( isCompatibleWithSettings ) {\n\t\tconst { isLinkSheetVisible } = this.state;\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst actions = [\n\t\t\t{\n\t\t\t\tlabel: __( 'Remove link' ),\n\t\t\t\tonPress: this.onClearSettings,\n\t\t\t},\n\t\t];\n\n\t\tconst options = {\n\t\t\turl: {\n\t\t\t\tlabel: __( 'Button Link URL' ),\n\t\t\t\tplaceholder: __( 'Add URL' ),\n\t\t\t\tautoFocus: ! isCompatibleWithSettings,\n\t\t\t\tautoFill: true,\n\t\t\t},\n\t\t\topenInNewTab: {\n\t\t\t\tlabel: __( 'Open in new tab' ),\n\t\t\t},\n\t\t\tlinkRel: {\n\t\t\t\tlabel: __( 'Link Rel' ),\n\t\t\t\tplaceholder: __( 'None' ),\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<LinkSettings\n\t\t\t\tisVisible={ isLinkSheetVisible }\n\t\t\t\tattributes={ attributes }\n\t\t\t\tonClose={ this.dismissSheet }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\twithBottomSheet={ ! isCompatibleWithSettings }\n\t\t\t\tactions={ actions }\n\t\t\t\toptions={ options }\n\t\t\t\tshowIcon={ ! isCompatibleWithSettings }\n\t\t\t/>\n\t\t);\n\t}\n\n\tsetRef( richText ) {\n\t\tthis.richTextRef = richText;\n\t}\n\n\t// Render `Text` with `placeholderText` styled as a placeholder\n\t// to calculate its width which then is set as a `minWidth`\n\tgetPlaceholderWidth( placeholderText ) {\n\t\tconst { maxWidth, placeholderTextWidth } = this.state;\n\t\treturn (\n\t\t\t<Text\n\t\t\t\tstyle={ styles.placeholder }\n\t\t\t\tonTextLayout={ ( { nativeEvent } ) => {\n\t\t\t\t\tconst textWidth =\n\t\t\t\t\t\tnativeEvent.lines[ 0 ] && nativeEvent.lines[ 0 ].width;\n\t\t\t\t\tif ( textWidth && textWidth !== placeholderTextWidth ) {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\tplaceholderTextWidth: Math.min(\n\t\t\t\t\t\t\t\ttextWidth,\n\t\t\t\t\t\t\t\tmaxWidth\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ placeholderText }\n\t\t\t</Text>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tisSelected,\n\t\t\tclientId,\n\t\t\tonReplace,\n\t\t\tmergeBlocks,\n\t\t\tparentWidth,\n\t\t} = this.props;\n\t\tconst { placeholder, text, borderRadius, url } = attributes;\n\t\tconst { maxWidth, isButtonFocused, placeholderTextWidth } = this.state;\n\t\tconst { paddingTop: spacing, borderWidth } = styles.defaultButton;\n\n\t\tif ( parentWidth === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst borderRadiusValue = Number.isInteger( borderRadius )\n\t\t\t? borderRadius\n\t\t\t: styles.defaultButton.borderRadius;\n\t\tconst outlineBorderRadius =\n\t\t\tborderRadiusValue > 0\n\t\t\t\t? borderRadiusValue + spacing + borderWidth\n\t\t\t\t: 0;\n\n\t\t// To achieve proper expanding and shrinking `RichText` on iOS, there is a need to set a `minWidth`\n\t\t// value at least on 1 when `RichText` is focused or when is not focused, but `RichText` value is\n\t\t// different than empty string.\n\t\tconst minWidth =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? 1\n\t\t\t\t: placeholderTextWidth;\n\t\t// To achieve proper expanding and shrinking `RichText` on Android, there is a need to set\n\t\t// a `placeholder` as an empty string when `RichText` is focused,\n\t\t// because `AztecView` is calculating a `minWidth` based on placeholder text.\n\t\tconst placeholderText =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? ''\n\t\t\t\t: placeholder || __( 'Add text…' );\n\n\t\tconst backgroundColor = this.getBackgroundColor();\n\t\tconst textColor = this.getTextColor();\n\n\t\treturn (\n\t\t\t<View onLayout={ this.onLayout }>\n\t\t\t\t{ this.getPlaceholderWidth( placeholderText ) }\n\t\t\t\t<ColorBackground\n\t\t\t\t\tborderRadiusValue={ borderRadiusValue }\n\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ isSelected && (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tpointerEvents=\"none\"\n\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\tstyles.outline,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tborderRadius: outlineBorderRadius,\n\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t\t\tplaceholder={ placeholderText }\n\t\t\t\t\t\tvalue={ text }\n\t\t\t\t\t\tonChange={ this.onChangeText }\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t...richTextStyle.richText,\n\t\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\tplaceholderTextColor={\n\t\t\t\t\t\t\tstyles.placeholderTextColor.color\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidentifier=\"text\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tminWidth={ minWidth }\n\t\t\t\t\t\tmaxWidth={ maxWidth }\n\t\t\t\t\t\tid={ clientId }\n\t\t\t\t\t\tisSelected={ isButtonFocused }\n\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\tunstableOnFocus={ () =>\n\t\t\t\t\t\t\tthis.onToggleButtonFocus( true )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableMobileNoFocusOnMount={ ! isSelected }\n\t\t\t\t\t\tselectionColor={ textColor }\n\t\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\t\tthis.onSetMaxWidth();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tonRemove={ this.onRemove }\n\t\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\t/>\n\t\t\t\t</ColorBackground>\n\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\ttitle={ __( 'Edit link' ) }\n\t\t\t\t\t\t\t\ticon={ link }\n\t\t\t\t\t\t\t\tonClick={ this.onShowLinkSettings }\n\t\t\t\t\t\t\t\tisActive={ url }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t) }\n\n\t\t\t\t{ this.getLinkSettings( false ) }\n\n\t\t\t\t<ColorEdit { ...this.props } />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Border Settings' ) }>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Border Radius' ) }\n\t\t\t\t\t\t\tminimumValue={ MIN_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\tmaximumValue={ MAX_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\tvalue={ borderRadiusValue }\n\t\t\t\t\t\t\tonChange={ this.onChangeBorderRadius }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody title={ __( 'Link Settings' ) }>\n\t\t\t\t\t\t{ this.getLinkSettings( true ) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithGradient,\n\twithColors( 'backgroundColor', { textColor: 'color' } ),\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\n\t\tconst {\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockCount,\n\t\t\tgetBlockRootClientId,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst selectedId = getSelectedBlockClientId();\n\t\tconst numOfButtons = getBlockCount( parentId );\n\n\t\treturn {\n\t\t\tselectedId,\n\t\t\teditorSidebarOpened: isEditorSidebarOpened(),\n\t\t\tnumOfButtons,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tcloseSettingsBottomSheet() {\n\t\t\t\tdispatch( 'core/edit-post' ).closeGeneralSidebar();\n\t\t\t},\n\t\t};\n\t} ),\n] )( ButtonEdit );\n"]}