{"version":3,"sources":["@wordpress/block-library/src/image/edit.js"],"names":["classnames","get","omit","pick","getBlobByURL","isBlobURL","revokeBlobURL","withNotices","useSelect","BlockAlignmentToolbar","BlockControls","BlockIcon","MediaPlaceholder","__experimentalBlock","Block","useEffect","useRef","__","image","icon","Image","LINK_DESTINATION_MEDIA","LINK_DESTINATION_ATTACHMENT","ALLOWED_MEDIA_TYPES","DEFAULT_SIZE_SLUG","pickRelevantMediaFiles","imageProps","url","isTemporaryImage","id","isExternalImage","ImageEdit","attributes","setAttributes","isSelected","className","noticeUI","insertBlocksAfter","noticeOperations","onReplace","alt","caption","align","linkDestination","width","height","sizeSlug","altRef","current","captionRef","ref","mediaUpload","select","getSettings","onUploadError","message","removeAllNotices","createErrorNotice","onSelectImage","media","undefined","title","mediaAttributes","additionalAttributes","href","link","onSelectURL","newURL","updateAlignment","nextAlign","extraUpdatedAttributes","includes","isTemp","file","filesList","onFileChange","img","allowedTypes","onError","src","isExternal","controls","mediaPreview","mediaPlaceholder","classes","key"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, omit, pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport { withNotices } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tBlockIcon,\n\tMediaPlaceholder,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { image as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport Image from './image';\n\n/**\n * Module constants\n */\nimport {\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_ATTACHMENT,\n\tALLOWED_MEDIA_TYPES,\n\tDEFAULT_SIZE_SLUG,\n} from './constants';\n\nexport const pickRelevantMediaFiles = ( image ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', 'large', 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', 'large', 'source_url' ] ) ||\n\t\timage.url;\n\treturn imageProps;\n};\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\n * while the image is being uploaded and will not have an id yet allocated.\n *\n * @param {number=} id The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the URL a Blob URL\n */\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\n/**\n * Is the url for the image hosted externally. An externally hosted image has no\n * id and is not a blob url.\n *\n * @param {number=} id  The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the url an externally hosted url?\n */\nexport const isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\n\nexport function ImageEdit( {\n\tattributes,\n\tsetAttributes,\n\tisSelected,\n\tclassName,\n\tnoticeUI,\n\tinsertBlocksAfter,\n\tnoticeOperations,\n\tonReplace,\n} ) {\n\tconst {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\tlinkDestination,\n\t\twidth,\n\t\theight,\n\t\tsizeSlug,\n\t} = attributes;\n\n\tconst altRef = useRef();\n\tuseEffect( () => {\n\t\taltRef.current = alt;\n\t}, [ alt ] );\n\n\tconst captionRef = useRef();\n\tuseEffect( () => {\n\t\tcaptionRef.current = caption;\n\t}, [ caption ] );\n\n\tconst ref = useRef();\n\tconst mediaUpload = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn getSettings().mediaUpload;\n\t} );\n\n\tfunction onUploadError( message ) {\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tfunction onSelectImage( media ) {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: undefined,\n\t\t\t\talt: undefined,\n\t\t\t\tid: undefined,\n\t\t\t\ttitle: undefined,\n\t\t\t\tcaption: undefined,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media );\n\n\t\t// If the current image is temporary but an alt text was meanwhile\n\t\t// written by the user, make sure the text is not overwritten.\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tif ( altRef.current ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'alt' ] );\n\t\t\t}\n\t\t}\n\n\t\t// If a caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten by empty captions.\n\t\tif ( captionRef.current && ! get( mediaAttributes, [ 'caption' ] ) ) {\n\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t}\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\"\n\t\t\t// option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\t// Check if the image is linked to it's media.\n\t\tif ( linkDestination === LINK_DESTINATION_MEDIA ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.url;\n\t\t}\n\n\t\t// Check if the image is linked to the attachment page.\n\t\tif ( linkDestination === LINK_DESTINATION_ATTACHMENT ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.link;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t} );\n\t}\n\n\tfunction onSelectURL( newURL ) {\n\t\tif ( newURL !== url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: newURL,\n\t\t\t\tid: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tconst isTemp = isTemporaryImage( id, url );\n\n\t// Upload a temporary image on mount.\n\tuseEffect( () => {\n\t\tif ( ! isTemp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst file = getBlobByURL( url );\n\n\t\tif ( file ) {\n\t\t\tmediaUpload( {\n\t\t\t\tfilesList: [ file ],\n\t\t\t\tonFileChange: ( [ img ] ) => {\n\t\t\t\t\tonSelectImage( img );\n\t\t\t\t},\n\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\tonError: ( message ) => {\n\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tsrc: undefined,\n\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\t// If an image is temporary, revoke the Blob url when it is uploaded (and is\n\t// no longer temporary).\n\tuseEffect( () => {\n\t\tif ( ! isTemp ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn () => {\n\t\t\trevokeBlobURL( url );\n\t\t};\n\t}, [ isTemp ] );\n\n\tconst isExternal = isExternalImage( id, url );\n\tconst controls = (\n\t\t<BlockControls>\n\t\t\t<BlockAlignmentToolbar\n\t\t\t\tvalue={ align }\n\t\t\t\tonChange={ updateAlignment }\n\t\t\t/>\n\t\t</BlockControls>\n\t);\n\tconst src = isExternal ? url : undefined;\n\tconst mediaPreview = !! url && (\n\t\t<img\n\t\t\talt={ __( 'Edit image' ) }\n\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\tclassName={ 'edit-image-preview' }\n\t\t\tsrc={ url }\n\t\t/>\n\t);\n\n\tconst mediaPlaceholder = (\n\t\t<MediaPlaceholder\n\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\tonSelect={ onSelectImage }\n\t\t\tonSelectURL={ onSelectURL }\n\t\t\tnotices={ noticeUI }\n\t\t\tonError={ onUploadError }\n\t\t\taccept=\"image/*\"\n\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\tvalue={ { id, src } }\n\t\t\tmediaPreview={ mediaPreview }\n\t\t\tdisableMediaButtons={ url }\n\t\t/>\n\t);\n\n\tconst classes = classnames( className, {\n\t\t'is-transient': isBlobURL( url ),\n\t\t'is-resized': !! width || !! height,\n\t\t'is-focused': isSelected,\n\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\n\t} );\n\n\t// Focussing the image caption after inserting an image relies on the\n\t// component remounting. This needs to be fixed.\n\tconst key = !! url;\n\n\treturn (\n\t\t<>\n\t\t\t{ controls }\n\t\t\t<Block.figure ref={ ref } className={ classes } key={ key }>\n\t\t\t\t{ url && (\n\t\t\t\t\t<Image\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tonSelectImage={ onSelectImage }\n\t\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\t\tonUploadError={ onUploadError }\n\t\t\t\t\t\tcontainerRef={ ref }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</Block.figure>\n\t\t</>\n\t);\n}\n\nexport default withNotices( ImageEdit );\n"]}