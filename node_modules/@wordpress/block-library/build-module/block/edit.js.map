{"version":3,"sources":["@wordpress/block-library/src/block/edit.js"],"names":["partial","Component","Placeholder","Spinner","Disabled","ToolbarButton","ToolbarGroup","withSelect","withDispatch","__","BlockControls","BlockEditorProvider","BlockList","WritingFlow","compose","parse","serialize","ReusableBlockEditPanel","ReusableBlockEdit","reusableBlock","arguments","startEditing","bind","stopEditing","setBlocks","setTitle","save","state","isEditing","isTemporary","title","blocks","content","props","fetchReusableBlock","prevProps","setState","onChange","onSave","convertToStatic","isSelected","isFetching","isSaving","canUpdateBlock","settings","element","select","ownProps","getReusableBlock","__experimentalGetReusableBlock","isFetchingReusableBlock","__experimentalIsFetchingReusableBlock","isSavingReusableBlock","__experimentalIsSavingReusableBlock","canUser","__experimentalGetParsedReusableBlock","getSettings","ref","attributes","id","dispatch","convertBlockToStatic","__experimentalConvertBlockToStatic","fetchReusableBlocks","__experimentalFetchReusableBlocks","updateReusableBlock","__experimentalUpdateReusableBlock","saveReusableBlock","__experimentalSaveReusableBlock","clientId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { partial } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\tPlaceholder,\n\tSpinner,\n\tDisabled,\n\tToolbarButton,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockControls,\n\tBlockEditorProvider,\n\tBlockList,\n\tWritingFlow,\n} from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { parse, serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ReusableBlockEditPanel from './edit-panel';\n\nclass ReusableBlockEdit extends Component {\n\tconstructor( { reusableBlock } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.startEditing = this.startEditing.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\t\tthis.setBlocks = this.setBlocks.bind( this );\n\t\tthis.setTitle = this.setTitle.bind( this );\n\t\tthis.save = this.save.bind( this );\n\n\t\tif ( reusableBlock ) {\n\t\t\t// Start in edit mode when we're working with a newly created reusable block\n\t\t\tthis.state = {\n\t\t\t\tisEditing: reusableBlock.isTemporary,\n\t\t\t\ttitle: reusableBlock.title,\n\t\t\t\tblocks: parse( reusableBlock.content ),\n\t\t\t};\n\t\t} else {\n\t\t\t// Start in preview mode when we're working with an existing reusable block\n\t\t\tthis.state = {\n\t\t\t\tisEditing: false,\n\t\t\t\ttitle: null,\n\t\t\t\tblocks: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( ! this.props.reusableBlock ) {\n\t\t\tthis.props.fetchReusableBlock();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif (\n\t\t\tprevProps.reusableBlock !== this.props.reusableBlock &&\n\t\t\tthis.state.title === null\n\t\t) {\n\t\t\tthis.setState( {\n\t\t\t\ttitle: this.props.reusableBlock.title,\n\t\t\t\tblocks: parse( this.props.reusableBlock.content ),\n\t\t\t} );\n\t\t}\n\t}\n\n\tstartEditing() {\n\t\tconst { reusableBlock } = this.props;\n\t\tthis.setState( {\n\t\t\tisEditing: true,\n\t\t\ttitle: reusableBlock.title,\n\t\t\tblocks: parse( reusableBlock.content ),\n\t\t} );\n\t}\n\n\tstopEditing() {\n\t\tthis.setState( {\n\t\t\tisEditing: false,\n\t\t\ttitle: null,\n\t\t\tblocks: [],\n\t\t} );\n\t}\n\n\tsetBlocks( blocks ) {\n\t\tthis.setState( { blocks } );\n\t}\n\n\tsetTitle( title ) {\n\t\tthis.setState( { title } );\n\t}\n\n\tsave() {\n\t\tconst { onChange, onSave } = this.props;\n\t\tconst { blocks, title } = this.state;\n\t\tconst content = serialize( blocks );\n\t\tonChange( { title, content } );\n\t\tonSave();\n\n\t\tthis.stopEditing();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tconvertToStatic,\n\t\t\tisSelected,\n\t\t\treusableBlock,\n\t\t\tisFetching,\n\t\t\tisSaving,\n\t\t\tcanUpdateBlock,\n\t\t\tsettings,\n\t\t} = this.props;\n\t\tconst { isEditing, title, blocks } = this.state;\n\n\t\tif ( ! reusableBlock && isFetching ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder>\n\t\t\t\t\t<Spinner />\n\t\t\t\t</Placeholder>\n\t\t\t);\n\t\t}\n\n\t\tif ( ! reusableBlock ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder>\n\t\t\t\t\t{ __( 'Block has been deleted or is unavailable.' ) }\n\t\t\t\t</Placeholder>\n\t\t\t);\n\t\t}\n\n\t\tlet element = (\n\t\t\t<BlockEditorProvider\n\t\t\t\tsettings={ settings }\n\t\t\t\tvalue={ blocks }\n\t\t\t\tonChange={ this.setBlocks }\n\t\t\t\tonInput={ this.setBlocks }\n\t\t\t>\n\t\t\t\t<WritingFlow>\n\t\t\t\t\t<BlockList />\n\t\t\t\t</WritingFlow>\n\t\t\t</BlockEditorProvider>\n\t\t);\n\n\t\tif ( ! isEditing ) {\n\t\t\telement = <Disabled>{ element }</Disabled>;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton onClick={ convertToStatic }>\n\t\t\t\t\t\t\t{ __( 'Convert to regular blocks' ) }\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t\t<div className=\"block-library-block__reusable-block-container\">\n\t\t\t\t\t{ ( isSelected || isEditing ) && (\n\t\t\t\t\t\t<ReusableBlockEditPanel\n\t\t\t\t\t\t\tisEditing={ isEditing }\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\ttitle !== null ? title : reusableBlock.title\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisSaving={ isSaving && ! reusableBlock.isTemporary }\n\t\t\t\t\t\t\tisEditDisabled={ ! canUpdateBlock }\n\t\t\t\t\t\t\tonEdit={ this.startEditing }\n\t\t\t\t\t\t\tonChangeTitle={ this.setTitle }\n\t\t\t\t\t\t\tonSave={ this.save }\n\t\t\t\t\t\t\tonCancel={ this.stopEditing }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ element }\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\t__experimentalGetReusableBlock: getReusableBlock,\n\t\t\t__experimentalIsFetchingReusableBlock: isFetchingReusableBlock,\n\t\t\t__experimentalIsSavingReusableBlock: isSavingReusableBlock,\n\t\t} = select( 'core/editor' );\n\t\tconst { canUser } = select( 'core' );\n\t\tconst { __experimentalGetParsedReusableBlock, getSettings } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\t\tconst { ref } = ownProps.attributes;\n\t\tconst reusableBlock = getReusableBlock( ref );\n\n\t\treturn {\n\t\t\treusableBlock,\n\t\t\tisFetching: isFetchingReusableBlock( ref ),\n\t\t\tisSaving: isSavingReusableBlock( ref ),\n\t\t\tblocks: reusableBlock\n\t\t\t\t? __experimentalGetParsedReusableBlock( reusableBlock.id )\n\t\t\t\t: null,\n\t\t\tcanUpdateBlock:\n\t\t\t\t!! reusableBlock &&\n\t\t\t\t! reusableBlock.isTemporary &&\n\t\t\t\t!! canUser( 'update', 'blocks', ref ),\n\t\t\tsettings: getSettings(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst {\n\t\t\t__experimentalConvertBlockToStatic: convertBlockToStatic,\n\t\t\t__experimentalFetchReusableBlocks: fetchReusableBlocks,\n\t\t\t__experimentalUpdateReusableBlock: updateReusableBlock,\n\t\t\t__experimentalSaveReusableBlock: saveReusableBlock,\n\t\t} = dispatch( 'core/editor' );\n\t\tconst { ref } = ownProps.attributes;\n\n\t\treturn {\n\t\t\tfetchReusableBlock: partial( fetchReusableBlocks, ref ),\n\t\t\tonChange: partial( updateReusableBlock, ref ),\n\t\t\tonSave: partial( saveReusableBlock, ref ),\n\t\t\tconvertToStatic() {\n\t\t\t\tconvertBlockToStatic( ownProps.clientId );\n\t\t\t},\n\t\t};\n\t} ),\n] )( ReusableBlockEdit );\n"]}