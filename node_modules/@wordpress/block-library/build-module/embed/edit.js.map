{"version":3,"sources":["@wordpress/block-library/src/embed/edit.js"],"names":["createUpgradedEmbedBlock","getClassNames","fallback","getAttributesFromPreview","getEmbedInfoByProvider","settings","EmbedControls","EmbedLoading","EmbedPlaceholder","EmbedPreview","classnames","__","sprintf","useState","useEffect","useDispatch","useSelect","getResponsiveHelp","checked","EmbedEdit","props","attributes","providerNameSlug","previewable","responsive","attributesUrl","url","isSelected","onReplace","setAttributes","insertBlocksAfter","defaultEmbedInfo","title","icon","setURL","isEditingURL","setIsEditingURL","invalidateResolution","select","getEmbedPreview","isPreviewEmbedFallback","isRequestingEmbedPreview","getThemeSupports","fetching","cannotEmbed","embedPreview","previewIsFallback","badEmbedProvider","html","type","undefined","wordpressCantEmbed","data","status","validPreview","preview","themeSupportsResponsive","getMergedAttributes","allowResponsive","className","toggleResponsive","newAllowResponsive","newURL","replace","upgradedBlock","label","showEmbedPlaceholder","event","preventDefault","target","value","caption","classFromPreview"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetClassNames,\n\tfallback,\n\tgetAttributesFromPreview,\n\tgetEmbedInfoByProvider,\n} from './util';\nimport { settings } from './index';\nimport EmbedControls from './embed-controls';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nfunction getResponsiveHelp( checked ) {\n\treturn checked\n\t\t? __(\n\t\t\t\t'This embed will preserve its aspect ratio when the browser is resized.'\n\t\t  )\n\t\t: __(\n\t\t\t\t'This embed may not preserve its aspect ratio when the browser is resized.'\n\t\t  );\n}\n\nconst EmbedEdit = ( props ) => {\n\tconst {\n\t\tattributes: {\n\t\t\tproviderNameSlug,\n\t\t\tpreviewable,\n\t\t\tresponsive,\n\t\t\turl: attributesUrl,\n\t\t},\n\t\tattributes,\n\t\tisSelected,\n\t\tonReplace,\n\t\tsetAttributes,\n\t\tinsertBlocksAfter,\n\t} = props;\n\n\tconst defaultEmbedInfo = {\n\t\ttitle: settings.title,\n\t\ticon: settings.icon,\n\t};\n\tconst { icon, title } =\n\t\tgetEmbedInfoByProvider( providerNameSlug ) || defaultEmbedInfo;\n\n\tconst [ url, setURL ] = useState( attributesUrl );\n\tconst [ isEditingURL, setIsEditingURL ] = useState( false );\n\tconst { invalidateResolution } = useDispatch( 'core/data' );\n\n\tconst {\n\t\tpreview,\n\t\tfetching,\n\t\tthemeSupportsResponsive,\n\t\tcannotEmbed,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEmbedPreview,\n\t\t\t\tisPreviewEmbedFallback,\n\t\t\t\tisRequestingEmbedPreview,\n\t\t\t\tgetThemeSupports,\n\t\t\t} = select( 'core' );\n\t\t\tif ( ! attributesUrl ) {\n\t\t\t\treturn { fetching: false, cannotEmbed: false };\n\t\t\t}\n\n\t\t\tconst embedPreview = getEmbedPreview( attributesUrl );\n\t\t\tconst previewIsFallback = isPreviewEmbedFallback( attributesUrl );\n\n\t\t\t// The external oEmbed provider does not exist. We got no type info and no html.\n\t\t\tconst badEmbedProvider =\n\t\t\t\tembedPreview?.html === false &&\n\t\t\t\tembedPreview?.type === undefined;\n\t\t\t// Some WordPress URLs that can't be embedded will cause the API to return\n\t\t\t// a valid JSON response with no HTML and `data.status` set to 404, rather\n\t\t\t// than generating a fallback response as other embeds do.\n\t\t\tconst wordpressCantEmbed = embedPreview?.data?.status === 404;\n\t\t\tconst validPreview =\n\t\t\t\t!! embedPreview && ! badEmbedProvider && ! wordpressCantEmbed;\n\t\t\treturn {\n\t\t\t\tpreview: validPreview ? embedPreview : undefined,\n\t\t\t\tfetching: isRequestingEmbedPreview( attributesUrl ),\n\t\t\t\tthemeSupportsResponsive: getThemeSupports()[\n\t\t\t\t\t'responsive-embeds'\n\t\t\t\t],\n\t\t\t\tcannotEmbed: ! validPreview || previewIsFallback,\n\t\t\t};\n\t\t},\n\t\t[ attributesUrl ]\n\t);\n\n\t/**\n\t * @return {Object} Attributes derived from the preview, merged with the current attributes.\n\t */\n\tconst getMergedAttributes = () => {\n\t\tconst { allowResponsive, className } = attributes;\n\t\treturn {\n\t\t\t...attributes,\n\t\t\t...getAttributesFromPreview(\n\t\t\t\tpreview,\n\t\t\t\ttitle,\n\t\t\t\tclassName,\n\t\t\t\tresponsive,\n\t\t\t\tallowResponsive\n\t\t\t),\n\t\t};\n\t};\n\n\tconst toggleResponsive = () => {\n\t\tconst { allowResponsive, className } = attributes;\n\t\tconst { html } = preview;\n\t\tconst newAllowResponsive = ! allowResponsive;\n\n\t\tsetAttributes( {\n\t\t\tallowResponsive: newAllowResponsive,\n\t\t\tclassName: getClassNames(\n\t\t\t\thtml,\n\t\t\t\tclassName,\n\t\t\t\tresponsive && newAllowResponsive\n\t\t\t),\n\t\t} );\n\t};\n\n\tuseEffect( () => {\n\t\tif ( ! preview?.html || ! cannotEmbed || fetching ) {\n\t\t\treturn;\n\t\t}\n\t\t// At this stage, we're not fetching the preview and know it can't be embedded,\n\t\t// so try removing any trailing slash, and resubmit.\n\t\tconst newURL = attributesUrl.replace( /\\/$/, '' );\n\t\tsetURL( newURL );\n\t\tsetIsEditingURL( false );\n\t\tsetAttributes( { url: newURL } );\n\t}, [ preview?.html, attributesUrl ] );\n\n\t// Handle incoming preview\n\tuseEffect( () => {\n\t\tif ( preview && ! isEditingURL ) {\n\t\t\t// Even though we set attributes that get derived from the preview,\n\t\t\t// we don't access them directly because for the initial render,\n\t\t\t// the `setAttributes` call will not have taken effect. If we're\n\t\t\t// rendering responsive content, setting the responsive classes\n\t\t\t// after the preview has been rendered can result in unwanted\n\t\t\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t\t\t// that `getMergedAttributes` uses is memoized so that we're not\n\t\t\t// calculating them on every render.\n\t\t\tsetAttributes( getMergedAttributes() );\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tprops,\n\t\t\t\t\tgetMergedAttributes()\n\t\t\t\t);\n\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tonReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [ preview, isEditingURL ] );\n\n\tif ( fetching ) {\n\t\treturn <EmbedLoading />;\n\t}\n\n\t// translators: %s: type of embed e.g: \"YouTube\", \"Twitter\", etc. \"Embed\" is used when no specific type exists\n\tconst label = sprintf( __( '%s URL' ), title );\n\n\t// No preview, or we can't embed the current URL, or we've clicked the edit button.\n\tconst showEmbedPlaceholder = ! preview || cannotEmbed || isEditingURL;\n\tif ( showEmbedPlaceholder ) {\n\t\treturn (\n\t\t\t<EmbedPlaceholder\n\t\t\t\ticon={ icon }\n\t\t\t\tlabel={ label }\n\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\tif ( event ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\n\t\t\t\t\tsetIsEditingURL( false );\n\t\t\t\t\tsetAttributes( { url } );\n\t\t\t\t} }\n\t\t\t\tvalue={ url }\n\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\tonChange={ ( event ) => setURL( event.target.value ) }\n\t\t\t\tfallback={ () => fallback( url, onReplace ) }\n\t\t\t\ttryAgain={ () => {\n\t\t\t\t\tinvalidateResolution( 'core', 'getEmbedPreview', [ url ] );\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Even though we set attributes that get derived from the preview,\n\t// we don't access them directly because for the initial render,\n\t// the `setAttributes` call will not have taken effect. If we're\n\t// rendering responsive content, setting the responsive classes\n\t// after the preview has been rendered can result in unwanted\n\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t// that `getMergedAttributes` uses is memoized so that we're not\n\tconst {\n\t\tcaption,\n\t\ttype,\n\t\tallowResponsive,\n\t\tclassName: classFromPreview,\n\t} = getMergedAttributes();\n\tconst className = classnames( classFromPreview, props.className );\n\n\treturn (\n\t\t<>\n\t\t\t<EmbedControls\n\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\tthemeSupportsResponsive={ themeSupportsResponsive }\n\t\t\t\tblockSupportsResponsive={ responsive }\n\t\t\t\tallowResponsive={ allowResponsive }\n\t\t\t\tgetResponsiveHelp={ getResponsiveHelp }\n\t\t\t\ttoggleResponsive={ toggleResponsive }\n\t\t\t\tswitchBackToURLInput={ () => setIsEditingURL( true ) }\n\t\t\t/>\n\t\t\t<EmbedPreview\n\t\t\t\tpreview={ preview }\n\t\t\t\tpreviewable={ previewable }\n\t\t\t\tclassName={ className }\n\t\t\t\turl={ url }\n\t\t\t\ttype={ type }\n\t\t\t\tcaption={ caption }\n\t\t\t\tonCaptionChange={ ( value ) =>\n\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t}\n\t\t\t\tisSelected={ isSelected }\n\t\t\t\ticon={ icon }\n\t\t\t\tlabel={ label }\n\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default EmbedEdit;\n"]}