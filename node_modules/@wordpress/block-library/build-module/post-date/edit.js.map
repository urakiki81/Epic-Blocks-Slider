{"version":3,"sources":["@wordpress/block-library/src/post-date/edit.js"],"names":["classnames","useEntityProp","useState","__experimentalGetSettings","dateI18n","AlignmentToolbar","BlockControls","InspectorControls","__experimentalBlock","Block","ToolbarGroup","ToolbarButton","Popover","DateTimePicker","PanelBody","CustomSelectControl","__","PostDateEdit","attributes","context","setAttributes","textAlign","format","postId","postType","siteFormat","date","setDate","isPickerOpen","setIsPickerOpen","settings","is12Hour","test","formats","time","toLowerCase","replace","split","reverse","join","formatOptions","Object","values","map","formatOption","key","name","resolvedFormat","nextAlign","_isPickerOpen","selectedItem","find","option","bind"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\nimport { __experimentalGetSettings, dateI18n } from '@wordpress/date';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\nimport {\n\tToolbarGroup,\n\tToolbarButton,\n\tPopover,\n\tDateTimePicker,\n\tPanelBody,\n\tCustomSelectControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nexport default function PostDateEdit( { attributes, context, setAttributes } ) {\n\tconst { textAlign, format } = attributes;\n\tconst { postId, postType } = context;\n\n\tconst [ siteFormat ] = useEntityProp( 'root', 'site', 'date_format' );\n\tconst [ date, setDate ] = useEntityProp(\n\t\t'postType',\n\t\tpostType,\n\t\t'date',\n\t\tpostId\n\t);\n\tconst [ isPickerOpen, setIsPickerOpen ] = useState( false );\n\tconst settings = __experimentalGetSettings();\n\t// To know if the current time format is a 12 hour time, look for \"a\".\n\t// Also make sure this \"a\" is not escaped by a \"/\".\n\tconst is12Hour = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only for the lower case \"a\".\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\tconst formatOptions = Object.values( settings.formats ).map(\n\t\t( formatOption ) => ( {\n\t\t\tkey: formatOption,\n\t\t\tname: dateI18n( formatOption, date ),\n\t\t} )\n\t);\n\tconst resolvedFormat = format || siteFormat || settings.formats.date;\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t{ date && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\ttitle={ __( 'Change Date' ) }\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tsetIsPickerOpen(\n\t\t\t\t\t\t\t\t\t( _isPickerOpen ) => ! _isPickerOpen\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Format settings' ) }>\n\t\t\t\t\t<CustomSelectControl\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\tlabel={ __( 'Date Format' ) }\n\t\t\t\t\t\toptions={ formatOptions }\n\t\t\t\t\t\tonChange={ ( { selectedItem } ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tformat: selectedItem.key,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ formatOptions.find(\n\t\t\t\t\t\t\t( option ) => option.key === resolvedFormat\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<Block.div\n\t\t\t\tclassName={ classnames( {\n\t\t\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ date && (\n\t\t\t\t\t<time dateTime={ dateI18n( 'c', date ) }>\n\t\t\t\t\t\t{ dateI18n( resolvedFormat, date ) }\n\n\t\t\t\t\t\t{ isPickerOpen && (\n\t\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\t\tonClose={ setIsPickerOpen.bind( null, false ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\t\tcurrentDate={ date }\n\t\t\t\t\t\t\t\t\tonChange={ setDate }\n\t\t\t\t\t\t\t\t\tis12Hour={ is12Hour }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</time>\n\t\t\t\t) }\n\t\t\t\t{ ! date && __( 'No Date' ) }\n\t\t\t</Block.div>\n\t\t</>\n\t);\n}\n"]}