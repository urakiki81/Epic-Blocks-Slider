{"version":3,"sources":["@wordpress/block-library/src/html/edit.js"],"names":["__","Component","BlockControls","PlainText","transformStyles","ToolbarButton","Disabled","SandBox","ToolbarGroup","withSelect","HTMLEdit","arguments","state","isPreview","styles","switchToHTML","bind","switchToPreview","props","defaultStyles","setState","attributes","setAttributes","isDisabled","content","isSelected","select","getSettings"],"mappings":";;;;;;;;;;;;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SACCC,aADD,EAECC,SAFD,EAGCC,eAHD,QAIO,yBAJP;AAKA,SACCC,aADD,EAECC,QAFD,EAGCC,OAHD,EAICC,YAJD,QAKO,uBALP;AAMA,SAASC,UAAT,QAA2B,iBAA3B;;IAEMC,Q;;;;;AACL,sBAAc;AAAA;;AAAA;;AACb,+BAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,+BAAvB;AAPa;AAQb;;;;wCAEmB;AAAA,UACXF,MADW,GACA,KAAKI,KADL,CACXJ,MADW,EAGnB;AACA;;AACA,UAAMK,aAAa,yLAAnB;AASA,WAAKC,QAAL,CAAe;AACdN,QAAAA,MAAM,GAAIK,aAAJ,4BAAsBf,eAAe,CAAEU,MAAF,CAArC;AADQ,OAAf;AAGA;;;sCAEiB;AACjB,WAAKM,QAAL,CAAe;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAf;AACA;;;mCAEc;AACd,WAAKO,QAAL,CAAe;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAf;AACA;;;6BAEQ;AAAA;;AAAA,wBAC8B,KAAKK,KADnC;AAAA,UACAG,UADA,eACAA,UADA;AAAA,UACYC,aADZ,eACYA,aADZ;AAAA,wBAEsB,KAAKV,KAF3B;AAAA,UAEAC,SAFA,eAEAA,SAFA;AAAA,UAEWC,MAFX,eAEWA,MAFX;AAIR,aACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACC,cAAC,aAAD,QACC,cAAC,YAAD,QACC,cAAC,aAAD;AACC,QAAA,SAAS,EAAC,uBADX;AAEC,QAAA,SAAS,EAAG,CAAED,SAFf;AAGC,QAAA,OAAO,EAAG,KAAKE;AAHhB,SAKC,mCALD,CADD,EAQC,cAAC,aAAD;AACC,QAAA,SAAS,EAAC,uBADX;AAEC,QAAA,SAAS,EAAGF,SAFb;AAGC,QAAA,OAAO,EAAG,KAAKI;AAHhB,SAKC,4BAAQjB,EAAE,CAAE,SAAF,CAAV,CALD,CARD,CADD,CADD,EAmBC,cAAC,QAAD,CAAU,QAAV,QACG,UAAEuB,UAAF;AAAA,eACDV,SAAS,IAAIU,UAAb,GACC,8BACC,cAAC,OAAD;AACC,UAAA,IAAI,EAAGF,UAAU,CAACG,OADnB;AAEC,UAAA,MAAM,EAAGV;AAFV,UADD,EAUG,CAAE,MAAI,CAACI,KAAL,CAAWO,UAAb,IACD;AAAK,UAAA,SAAS,EAAC;AAAf,UAXF,CADD,GAgBC,cAAC,SAAD;AACC,UAAA,KAAK,EAAGJ,UAAU,CAACG,OADpB;AAEC,UAAA,QAAQ,EAAG,kBAAEA,OAAF;AAAA,mBACVF,aAAa,CAAE;AAAEE,cAAAA,OAAO,EAAPA;AAAF,aAAF,CADH;AAAA,WAFZ;AAKC,UAAA,WAAW,EAAGxB,EAAE,CAAE,aAAF,CALjB;AAMC,wBAAaA,EAAE,CAAE,MAAF;AANhB,UAjBA;AAAA,OADH,CAnBD,CADD;AAmDA;;;;EA7FqBC,S;;AA+FvB,eAAeQ,UAAU,CAAE,UAAEiB,MAAF,EAAc;AAAA,gBAChBA,MAAM,CAAE,mBAAF,CADU;AAAA,MAChCC,WADgC,WAChCA,WADgC;;AAExC,SAAO;AACNb,IAAAA,MAAM,EAAEa,WAAW,GAAGb;AADhB,GAAP;AAGA,CALwB,CAAV,CAKVJ,QALU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tPlainText,\n\ttransformStyles,\n} from '@wordpress/block-editor';\nimport {\n\tToolbarButton,\n\tDisabled,\n\tSandBox,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\nclass HTMLEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisPreview: false,\n\t\t\tstyles: [],\n\t\t};\n\t\tthis.switchToHTML = this.switchToHTML.bind( this );\n\t\tthis.switchToPreview = this.switchToPreview.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { styles } = this.props;\n\n\t\t// Default styles used to unset some of the styles\n\t\t// that might be inherited from the editor style.\n\t\tconst defaultStyles = `\n\t\t\thtml,body,:root {\n\t\t\t\tmargin: 0 !important;\n\t\t\t\tpadding: 0 !important;\n\t\t\t\toverflow: visible !important;\n\t\t\t\tmin-height: auto !important;\n\t\t\t}\n\t\t`;\n\n\t\tthis.setState( {\n\t\t\tstyles: [ defaultStyles, ...transformStyles( styles ) ],\n\t\t} );\n\t}\n\n\tswitchToPreview() {\n\t\tthis.setState( { isPreview: true } );\n\t}\n\n\tswitchToHTML() {\n\t\tthis.setState( { isPreview: false } );\n\t}\n\n\trender() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { isPreview, styles } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"wp-block-html\">\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tclassName=\"components-tab-button\"\n\t\t\t\t\t\t\tisPressed={ ! isPreview }\n\t\t\t\t\t\t\tonClick={ this.switchToHTML }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>HTML</span>\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tclassName=\"components-tab-button\"\n\t\t\t\t\t\t\tisPressed={ isPreview }\n\t\t\t\t\t\t\tonClick={ this.switchToPreview }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>{ __( 'Preview' ) }</span>\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t\t<Disabled.Consumer>\n\t\t\t\t\t{ ( isDisabled ) =>\n\t\t\t\t\t\tisPreview || isDisabled ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<SandBox\n\t\t\t\t\t\t\t\t\thtml={ attributes.content }\n\t\t\t\t\t\t\t\t\tstyles={ styles }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{ /*\t\n\t\t\t\t\t\t\t\t\tAn overlay is added when the block is not selected in order to register click events. \n\t\t\t\t\t\t\t\t\tSome browsers do not bubble up the clicks from the sandboxed iframe, which makes it \n\t\t\t\t\t\t\t\t\tdifficult to reselect the block. \n\t\t\t\t\t\t\t\t*/ }\n\t\t\t\t\t\t\t\t{ ! this.props.isSelected && (\n\t\t\t\t\t\t\t\t\t<div className=\"block-library-html__preview-overlay\"></div>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<PlainText\n\t\t\t\t\t\t\t\tvalue={ attributes.content }\n\t\t\t\t\t\t\t\tonChange={ ( content ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( { content } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder={ __( 'Write HTMLâ€¦' ) }\n\t\t\t\t\t\t\t\taria-label={ __( 'HTML' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Disabled.Consumer>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withSelect( ( select ) => {\n\tconst { getSettings } = select( 'core/block-editor' );\n\treturn {\n\t\tstyles: getSettings().styles,\n\t};\n} )( HTMLEdit );\n"]}