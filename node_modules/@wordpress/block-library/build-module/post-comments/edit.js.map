{"version":3,"sources":["@wordpress/block-library/src/post-comments/edit.js"],"names":["classnames","useSelect","AlignmentToolbar","BlockControls","Warning","__experimentalBlock","Block","__","RawHTML","PostCommentsDisplay","postId","select","comments","getEntityRecords","post","length","map","comment","id","content","rendered","PostCommentsEdit","attributes","setAttributes","context","postType","textAlign","nextAlign"],"mappings":";;;AAAA;;;AAGA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;;;;AAGA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACCC,gBADD,EAECC,aAFD,EAGCC,OAHD,EAICC,mBAAmB,IAAIC,KAJxB,QAKO,yBALP;AAMA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,mBAAT,OAA2C;AAAA,MAAXC,MAAW,QAAXA,MAAW;AAC1C,SAAOT,SAAS,CACf,UAAEU,MAAF,EAAc;AACb,QAAMC,QAAQ,GAAGD,MAAM,CAAE,MAAF,CAAN,CAAiBE,gBAAjB,CAChB,MADgB,EAEhB,SAFgB,EAGhB;AACCC,MAAAA,IAAI,EAAEJ;AADP,KAHgB,CAAjB,CADa,CAQb;;AACA,WAAOE,QAAQ,IAAIA,QAAQ,CAACG,MAArB,GACJH,QAAQ,CAACI,GAAT,CAAc,UAAEC,OAAF;AAAA,aACd,cAAC,OAAD;AACC,QAAA,SAAS,EAAC,iCADX;AAEC,QAAA,GAAG,EAAGA,OAAO,CAACC;AAFf,SAIGD,OAAO,CAACE,OAAR,CAAgBC,QAJnB,CADc;AAAA,KAAd,CADI,GASJb,EAAE,CAAE,cAAF,CATL;AAUA,GApBc,EAqBf,CAAEG,MAAF,CArBe,CAAhB;AAuBA;;AAED,eAAe,SAASW,gBAAT,QAIX;AAAA,MAHHC,UAGG,SAHHA,UAGG;AAAA,MAFHC,aAEG,SAFHA,aAEG;AAAA,MADHC,OACG,SADHA,OACG;AAAA,MACKC,QADL,GAC0BD,OAD1B,CACKC,QADL;AAAA,MACef,MADf,GAC0Bc,OAD1B,CACed,MADf;AAAA,MAEKgB,SAFL,GAEmBJ,UAFnB,CAEKI,SAFL;;AAIH,MAAK,CAAED,QAAF,IAAc,CAAEf,MAArB,EAA8B;AAC7B,WACC,cAAC,OAAD,QAAWH,EAAE,CAAE,qCAAF,CAAb,CADD;AAGA;;AAED,SACC,8BACC,cAAC,aAAD,QACC,cAAC,gBAAD;AACC,IAAA,KAAK,EAAGmB,SADT;AAEC,IAAA,QAAQ,EAAG,kBAAEC,SAAF,EAAiB;AAC3BJ,MAAAA,aAAa,CAAE;AAAEG,QAAAA,SAAS,EAAEC;AAAb,OAAF,CAAb;AACA;AAJF,IADD,CADD,EAUC,cAAC,KAAD,CAAO,GAAP;AACC,IAAA,SAAS,EAAG3B,UAAU,8CACA0B,SADA,GACgBA,SADhB;AADvB,KAKC,cAAC,mBAAD;AAAqB,IAAA,MAAM,EAAGhB;AAA9B,IALD,CAVD,CADD;AAoBA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tWarning,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { RawHTML } from '@wordpress/element';\n\nfunction PostCommentsDisplay( { postId } ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst comments = select( 'core' ).getEntityRecords(\n\t\t\t\t'root',\n\t\t\t\t'comment',\n\t\t\t\t{\n\t\t\t\t\tpost: postId,\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO: \"No Comments\" placeholder should be editable.\n\t\t\treturn comments && comments.length\n\t\t\t\t? comments.map( ( comment ) => (\n\t\t\t\t\t\t<RawHTML\n\t\t\t\t\t\t\tclassName=\"wp-block-post-comments__comment\"\n\t\t\t\t\t\t\tkey={ comment.id }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ comment.content.rendered }\n\t\t\t\t\t\t</RawHTML>\n\t\t\t\t  ) )\n\t\t\t\t: __( 'No comments.' );\n\t\t},\n\t\t[ postId ]\n\t);\n}\n\nexport default function PostCommentsEdit( {\n\tattributes,\n\tsetAttributes,\n\tcontext,\n} ) {\n\tconst { postType, postId } = context;\n\tconst { textAlign } = attributes;\n\n\tif ( ! postType || ! postId ) {\n\t\treturn (\n\t\t\t<Warning>{ __( 'Post comments block: no post found.' ) }</Warning>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<Block.div\n\t\t\t\tclassName={ classnames( {\n\t\t\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<PostCommentsDisplay postId={ postId } />\n\t\t\t</Block.div>\n\t\t</>\n\t);\n}\n"]}