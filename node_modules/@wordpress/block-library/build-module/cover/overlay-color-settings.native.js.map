{"version":3,"sources":["@wordpress/block-library/src/cover/overlay-color-settings.native.js"],"names":["__","useSelect","getColorObjectByColorValue","getColorObjectByAttributeValues","getGradientValueBySlug","getGradientSlugByValue","__experimentalPanelColorGradientSettings","PanelColorGradientSettings","OverlayColorSettings","attributes","setAttributes","select","getSettings","colors","gradients","overlayColor","customOverlayColor","gradient","customGradient","gradientValue","colorValue","color","setOverlayAttribute","attributeName","value","undefined","onColorChange","colorObject","slug","onGradientChange","label"],"mappings":";;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;;;;AAGA,SACCC,0BADD,EAECC,+BAFD,EAGCC,sBAHD,EAICC,sBAJD,EAKCC,wCAAwC,IAAIC,0BAL7C,QAMO,yBANP;;AAQA,SAASC,oBAAT,OAA+D;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;;AAAA,mBAChCT,SAAS,CAAE,UAAEU,MAAF,EAAc;AACtD,WAAOA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAAP;AACA,GAFsC,EAEpC,EAFoC,CADuB;AAAA,MACtDC,MADsD,cACtDA,MADsD;AAAA,MAC9CC,SAD8C,cAC9CA,SAD8C;;AAAA,MAM7DC,YAN6D,GAU1DN,UAV0D,CAM7DM,YAN6D;AAAA,MAO7DC,kBAP6D,GAU1DP,UAV0D,CAO7DO,kBAP6D;AAAA,MAQ7DC,QAR6D,GAU1DR,UAV0D,CAQ7DQ,QAR6D;AAAA,MAS7DC,cAT6D,GAU1DT,UAV0D,CAS7DS,cAT6D;AAY9D,MAAMC,aAAa,GAClBD,cAAc,IAAId,sBAAsB,CAAEU,SAAF,EAAaG,QAAb,CADzC;AAGA,MAAMG,UAAU,GAAGjB,+BAA+B,CACjDU,MADiD,EAEjDE,YAFiD,EAGjDC,kBAHiD,CAA/B,CAIjBK,KAJF;;AAMA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEC,aAAF,EAAiBC,KAAjB,EAA4B;AACvDd,IAAAA,aAAa;AACZ;AACAK,MAAAA,YAAY,EAAEU,SAFF;AAGZT,MAAAA,kBAAkB,EAAES,SAHR;AAIZR,MAAAA,QAAQ,EAAEQ,SAJE;AAKZP,MAAAA,cAAc,EAAEO;AALJ,OAMVF,aANU,EAMOC,KANP,EAAb;AAQA,GATD;;AAWA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAEF,KAAF,EAAa;AAClC;AACA,QAAK,CAAEA,KAAP,EAAe;AACd;AACA;;AACD,QAAMG,WAAW,GAAGzB,0BAA0B,CAAEW,MAAF,EAAUW,KAAV,CAA9C;;AACA,QAAKG,WAAL,aAAKA,WAAL,uBAAKA,WAAW,CAAEC,IAAlB,EAAyB;AACxBN,MAAAA,mBAAmB,CAAE,cAAF,EAAkBK,WAAW,CAACC,IAA9B,CAAnB;AACA,KAFD,MAEO;AACNN,MAAAA,mBAAmB,CAAE,oBAAF,EAAwBE,KAAxB,CAAnB;AACA;AACD,GAXD;;AAaA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEL,KAAF,EAAa;AACrC;AACA,QAAK,CAAEA,KAAP,EAAe;AACd;AACA;;AACD,QAAMI,IAAI,GAAGvB,sBAAsB,CAAES,SAAF,EAAaU,KAAb,CAAnC;;AACA,QAAKI,IAAL,EAAY;AACXN,MAAAA,mBAAmB,CAAE,UAAF,EAAcM,IAAd,CAAnB;AACA,KAFD,MAEO;AACNN,MAAAA,mBAAmB,CAAE,gBAAF,EAAoBE,KAApB,CAAnB;AACA;AACD,GAXD;;AAaA,SACC,cAAC,0BAAD;AACC,IAAA,KAAK,EAAGxB,EAAE,CAAE,SAAF,CADX;AAEC,IAAA,WAAW,EAAG,KAFf;AAGC,IAAA,QAAQ,EAAG,CACV;AACC8B,MAAAA,KAAK,EAAE9B,EAAE,CAAE,OAAF,CADV;AAEC0B,MAAAA,aAAa,EAAbA,aAFD;AAGCN,MAAAA,UAAU,EAAVA,UAHD;AAICD,MAAAA,aAAa,EAAbA,aAJD;AAKCU,MAAAA,gBAAgB,EAAhBA;AALD,KADU;AAHZ,IADD;AAeA;;AAED,eAAerB,oBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetColorObjectByColorValue,\n\tgetColorObjectByAttributeValues,\n\tgetGradientValueBySlug,\n\tgetGradientSlugByValue,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n} from '@wordpress/block-editor';\n\nfunction OverlayColorSettings( { attributes, setAttributes } ) {\n\tconst { colors, gradients } = useSelect( ( select ) => {\n\t\treturn select( 'core/block-editor' ).getSettings();\n\t}, [] );\n\n\tconst {\n\t\toverlayColor,\n\t\tcustomOverlayColor,\n\t\tgradient,\n\t\tcustomGradient,\n\t} = attributes;\n\n\tconst gradientValue =\n\t\tcustomGradient || getGradientValueBySlug( gradients, gradient );\n\n\tconst colorValue = getColorObjectByAttributeValues(\n\t\tcolors,\n\t\toverlayColor,\n\t\tcustomOverlayColor\n\t).color;\n\n\tconst setOverlayAttribute = ( attributeName, value ) => {\n\t\tsetAttributes( {\n\t\t\t// clear all related attributes (only one should be set)\n\t\t\toverlayColor: undefined,\n\t\t\tcustomOverlayColor: undefined,\n\t\t\tgradient: undefined,\n\t\t\tcustomGradient: undefined,\n\t\t\t[ attributeName ]: value,\n\t\t} );\n\t};\n\n\tconst onColorChange = ( value ) => {\n\t\t// do nothing for falsy values\n\t\tif ( ! value ) {\n\t\t\treturn;\n\t\t}\n\t\tconst colorObject = getColorObjectByColorValue( colors, value );\n\t\tif ( colorObject?.slug ) {\n\t\t\tsetOverlayAttribute( 'overlayColor', colorObject.slug );\n\t\t} else {\n\t\t\tsetOverlayAttribute( 'customOverlayColor', value );\n\t\t}\n\t};\n\n\tconst onGradientChange = ( value ) => {\n\t\t// do nothing for falsy values\n\t\tif ( ! value ) {\n\t\t\treturn;\n\t\t}\n\t\tconst slug = getGradientSlugByValue( gradients, value );\n\t\tif ( slug ) {\n\t\t\tsetOverlayAttribute( 'gradient', slug );\n\t\t} else {\n\t\t\tsetOverlayAttribute( 'customGradient', value );\n\t\t}\n\t};\n\n\treturn (\n\t\t<PanelColorGradientSettings\n\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\tinitialOpen={ false }\n\t\t\tsettings={ [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Color' ),\n\t\t\t\t\tonColorChange,\n\t\t\t\t\tcolorValue,\n\t\t\t\t\tgradientValue,\n\t\t\t\t\tonGradientChange,\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n\nexport default OverlayColorSettings;\n"]}