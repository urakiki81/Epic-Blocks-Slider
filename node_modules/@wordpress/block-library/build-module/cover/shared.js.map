{"version":3,"sources":["@wordpress/block-library/src/cover/shared.js"],"names":["POSITION_CLASSNAMES","center","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","COVER_MIN_HEIGHT","backgroundImageStyles","url","backgroundImage","CSS_UNITS","value","label","default","dimRatioToClass","ratio","Math","round","attributesFromMedia","setAttributes","media","undefined","id","mediaType","media_type","type","backgroundType","focalPoint","hasParallax","getPositionClassName","contentPosition","isContentPositionCenter"],"mappings":"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","sourcesContent":["const POSITION_CLASSNAMES = {\n\t'top left': 'is-position-top-left',\n\t'top center': 'is-position-top-center',\n\t'top right': 'is-position-top-right',\n\t'center left': 'is-position-center-left',\n\t'center center': 'is-position-center-center',\n\tcenter: 'is-position-center-center',\n\t'center right': 'is-position-center-right',\n\t'bottom left': 'is-position-bottom-left',\n\t'bottom center': 'is-position-bottom-center',\n\t'bottom right': 'is-position-bottom-right',\n};\n\nexport const IMAGE_BACKGROUND_TYPE = 'image';\nexport const VIDEO_BACKGROUND_TYPE = 'video';\nexport const COVER_MIN_HEIGHT = 50;\nexport function backgroundImageStyles( url ) {\n\treturn url ? { backgroundImage: `url(${ url })` } : {};\n}\n\nexport const CSS_UNITS = [\n\t{ value: 'px', label: 'px', default: 430 },\n\t{ value: 'em', label: 'em', default: 20 },\n\t{ value: 'rem', label: 'rem', default: 20 },\n\t{ value: 'vw', label: 'vw', default: 20 },\n\t{ value: 'vh', label: 'vh', default: 50 },\n];\n\nexport function dimRatioToClass( ratio ) {\n\treturn ratio === 0 || ratio === 50 || ! ratio\n\t\t? null\n\t\t: 'has-background-dim-' + 10 * Math.round( ratio / 10 );\n}\n\nexport function attributesFromMedia( setAttributes ) {\n\treturn ( media ) => {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( { url: undefined, id: undefined } );\n\t\t\treturn;\n\t\t}\n\t\tlet mediaType;\n\t\t// for media selections originated from a file upload.\n\t\tif ( media.media_type ) {\n\t\t\tif ( media.media_type === IMAGE_BACKGROUND_TYPE ) {\n\t\t\t\tmediaType = IMAGE_BACKGROUND_TYPE;\n\t\t\t} else {\n\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t// Videos contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\tmediaType = VIDEO_BACKGROUND_TYPE;\n\t\t\t}\n\t\t} else {\n\t\t\t// for media selections originated from existing files in the media library.\n\t\t\tif (\n\t\t\t\tmedia.type !== IMAGE_BACKGROUND_TYPE &&\n\t\t\t\tmedia.type !== VIDEO_BACKGROUND_TYPE\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmediaType = media.type;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: media.url,\n\t\t\tid: media.id,\n\t\t\tbackgroundType: mediaType,\n\t\t\t...( mediaType === VIDEO_BACKGROUND_TYPE\n\t\t\t\t? { focalPoint: undefined, hasParallax: undefined }\n\t\t\t\t: {} ),\n\t\t} );\n\t};\n}\n\nexport function getPositionClassName( contentPosition ) {\n\tif ( contentPosition === undefined ) return '';\n\n\treturn POSITION_CLASSNAMES[ contentPosition ];\n}\n\nexport function isContentPositionCenter( contentPosition ) {\n\treturn (\n\t\t! contentPosition ||\n\t\tcontentPosition === 'center center' ||\n\t\tcontentPosition === 'center'\n\t);\n}\n"]}