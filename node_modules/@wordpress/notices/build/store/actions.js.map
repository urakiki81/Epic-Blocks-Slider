{"version":3,"sources":["@wordpress/notices/src/store/actions.js"],"names":["createNotice","status","DEFAULT_STATUS","content","options","speak","isDismissible","context","DEFAULT_CONTEXT","id","actions","type","__unstableHTML","String","notice","spokenMessage","createSuccessNotice","createInfoNotice","createErrorNotice","createWarningNotice","removeNotice"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AARA;;;;AAKA;;;;AAKA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAwBO,SAASA,YAAT,GAAwE;AAAA,MAAjDC,MAAiD,uEAAxCC,yBAAwC;AAAA,MAAxBC,OAAwB;AAAA,MAAfC,OAAe,uEAAL,EAAK;AAAA,uBAS1EA,OAT0E,CAE7EC,KAF6E;AAAA,MAE7EA,KAF6E,+BAErE,IAFqE;AAAA,8BAS1ED,OAT0E,CAG7EE,aAH6E;AAAA,MAG7EA,aAH6E,sCAG7D,IAH6D;AAAA,yBAS1EF,OAT0E,CAI7EG,OAJ6E;AAAA,MAI7EA,OAJ6E,iCAInEC,0BAJmE;AAAA,oBAS1EJ,OAT0E,CAK7EK,EAL6E;AAAA,MAK7EA,EAL6E,4BAKxE,sBAAUF,OAAV,CALwE;AAAA,yBAS1EH,OAT0E,CAM7EM,OAN6E;AAAA,MAM7EA,OAN6E,iCAMnE,EANmE;AAAA,sBAS1EN,OAT0E,CAO7EO,IAP6E;AAAA,MAO7EA,IAP6E,8BAOtE,SAPsE;AAAA,MAQ7EC,cAR6E,GAS1ER,OAT0E,CAQ7EQ,cAR6E,EAW9E;AACA;AACA;;AACAT,EAAAA,OAAO,GAAGU,MAAM,CAAEV,OAAF,CAAhB;AAEA,SAAO;AACNQ,IAAAA,IAAI,EAAE,eADA;AAENJ,IAAAA,OAAO,EAAPA,OAFM;AAGNO,IAAAA,MAAM,EAAE;AACPL,MAAAA,EAAE,EAAFA,EADO;AAEPR,MAAAA,MAAM,EAANA,MAFO;AAGPE,MAAAA,OAAO,EAAPA,OAHO;AAIPY,MAAAA,aAAa,EAAEV,KAAK,GAAGF,OAAH,GAAa,IAJ1B;AAKPS,MAAAA,cAAc,EAAdA,cALO;AAMPN,MAAAA,aAAa,EAAbA,aANO;AAOPI,MAAAA,OAAO,EAAPA,OAPO;AAQPC,MAAAA,IAAI,EAAJA;AARO;AAHF,GAAP;AAcA;AAED;;;;;;;;;;;;;AAWO,SAASK,mBAAT,CAA8Bb,OAA9B,EAAuCC,OAAvC,EAAiD;AACvD,SAAOJ,YAAY,CAAE,SAAF,EAAaG,OAAb,EAAsBC,OAAtB,CAAnB;AACA;AAED;;;;;;;;;;;;;AAWO,SAASa,gBAAT,CAA2Bd,OAA3B,EAAoCC,OAApC,EAA8C;AACpD,SAAOJ,YAAY,CAAE,MAAF,EAAUG,OAAV,EAAmBC,OAAnB,CAAnB;AACA;AAED;;;;;;;;;;;;;AAWO,SAASc,iBAAT,CAA4Bf,OAA5B,EAAqCC,OAArC,EAA+C;AACrD,SAAOJ,YAAY,CAAE,OAAF,EAAWG,OAAX,EAAoBC,OAApB,CAAnB;AACA;AAED;;;;;;;;;;;;;AAWO,SAASe,mBAAT,CAA8BhB,OAA9B,EAAuCC,OAAvC,EAAiD;AACvD,SAAOJ,YAAY,CAAE,SAAF,EAAaG,OAAb,EAAsBC,OAAtB,CAAnB;AACA;AAED;;;;;;;;;;;AASO,SAASgB,YAAT,CAAuBX,EAAvB,EAAuD;AAAA,MAA5BF,OAA4B,uEAAlBC,0BAAkB;AAC7D,SAAO;AACNG,IAAAA,IAAI,EAAE,eADA;AAENF,IAAAA,EAAE,EAAFA,EAFM;AAGNF,IAAAA,OAAO,EAAPA;AAHM,GAAP;AAKA","sourcesContent":["/**\n * External dependencies\n */\nimport { uniqueId } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { DEFAULT_CONTEXT, DEFAULT_STATUS } from './constants';\n\n/**\n * @typedef {Object} WPNoticeAction Object describing a user action option associated with a notice.\n *\n * @property {string}    label    Message to use as action label.\n * @property {?string}   url      Optional URL of resource if action incurs\n *                                browser navigation.\n * @property {?Function} onClick  Optional function to invoke when action is\n *                                triggered by user.\n *\n */\n\n/**\n * Returns an action object used in signalling that a notice is to be created.\n *\n * @param {string}                [status='info']              Notice status.\n * @param {string}                content                      Notice message.\n * @param {Object}                [options]                    Notice options.\n * @param {string}                [options.context='global']   Context under which to\n *                                                             group notice.\n * @param {string}                [options.id]                 Identifier for notice.\n *                                                             Automatically assigned\n *                                                             if not specified.\n * @param {boolean}               [options.isDismissible=true] Whether the notice can\n *                                                             be dismissed by user.\n * @param {string}                [options.type='default']     Type of notice, one of\n *                                                             `default`, or `snackbar`.\n * @param {boolean}               [options.speak=true]         Whether the notice\n *                                                             content should be\n *                                                             announced to screen\n *                                                             readers.\n * @param {Array<WPNoticeAction>} [options.actions]            User actions to be\n *                                                             presented with notice.\n *\n * @return {Object} Action object.\n */\nexport function createNotice( status = DEFAULT_STATUS, content, options = {} ) {\n\tconst {\n\t\tspeak = true,\n\t\tisDismissible = true,\n\t\tcontext = DEFAULT_CONTEXT,\n\t\tid = uniqueId( context ),\n\t\tactions = [],\n\t\ttype = 'default',\n\t\t__unstableHTML,\n\t} = options;\n\n\t// The supported value shape of content is currently limited to plain text\n\t// strings. To avoid setting expectation that e.g. a WPElement could be\n\t// supported, cast to a string.\n\tcontent = String( content );\n\n\treturn {\n\t\ttype: 'CREATE_NOTICE',\n\t\tcontext,\n\t\tnotice: {\n\t\t\tid,\n\t\t\tstatus,\n\t\t\tcontent,\n\t\t\tspokenMessage: speak ? content : null,\n\t\t\t__unstableHTML,\n\t\t\tisDismissible,\n\t\t\tactions,\n\t\t\ttype,\n\t\t},\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a success notice is to be\n * created. Refer to `createNotice` for options documentation.\n *\n * @see createNotice\n *\n * @param {string} content   Notice message.\n * @param {Object} [options] Optional notice options.\n *\n * @return {Object} Action object.\n */\nexport function createSuccessNotice( content, options ) {\n\treturn createNotice( 'success', content, options );\n}\n\n/**\n * Returns an action object used in signalling that an info notice is to be\n * created. Refer to `createNotice` for options documentation.\n *\n * @see createNotice\n *\n * @param {string} content   Notice message.\n * @param {Object} [options] Optional notice options.\n *\n * @return {Object} Action object.\n */\nexport function createInfoNotice( content, options ) {\n\treturn createNotice( 'info', content, options );\n}\n\n/**\n * Returns an action object used in signalling that an error notice is to be\n * created. Refer to `createNotice` for options documentation.\n *\n * @see createNotice\n *\n * @param {string} content   Notice message.\n * @param {Object} [options] Optional notice options.\n *\n * @return {Object} Action object.\n */\nexport function createErrorNotice( content, options ) {\n\treturn createNotice( 'error', content, options );\n}\n\n/**\n * Returns an action object used in signalling that a warning notice is to be\n * created. Refer to `createNotice` for options documentation.\n *\n * @see createNotice\n *\n * @param {string} content   Notice message.\n * @param {Object} [options] Optional notice options.\n *\n * @return {Object} Action object.\n */\nexport function createWarningNotice( content, options ) {\n\treturn createNotice( 'warning', content, options );\n}\n\n/**\n * Returns an action object used in signalling that a notice is to be removed.\n *\n * @param {string} id                 Notice unique identifier.\n * @param {string} [context='global'] Optional context (grouping) in which the notice is\n *                                    intended to appear. Defaults to default context.\n *\n * @return {Object} Action object.\n */\nexport function removeNotice( id, context = DEFAULT_CONTEXT ) {\n\treturn {\n\t\ttype: 'REMOVE_NOTICE',\n\t\tid,\n\t\tcontext,\n\t};\n}\n"]}