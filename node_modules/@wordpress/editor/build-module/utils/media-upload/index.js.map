{"version":3,"sources":["@wordpress/editor/src/utils/media-upload/index.js"],"names":["noop","select","uploadMedia","mediaUpload","additionalData","allowedTypes","filesList","maxUploadFileSize","onError","onFileChange","getCurrentPostId","getEditorSettings","wpAllowedMimeTypes","allowedMimeTypes","post","message"],"mappings":";;;;;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA;;;;;;;;;;;;;AAYA,eAAe,SAASC,WAAT,OAOX;AAAA,iCANHC,cAMG;AAAA,MANHA,cAMG,oCANc,EAMd;AAAA,MALHC,YAKG,QALHA,YAKG;AAAA,MAJHC,SAIG,QAJHA,SAIG;AAAA,MAHHC,iBAGG,QAHHA,iBAGG;AAAA,0BAFHC,OAEG;AAAA,MAFHA,QAEG,6BAFOR,IAEP;AAAA,MADHS,YACG,QADHA,YACG;;AAAA,gBAC6CR,MAAM,CAAE,aAAF,CADnD;AAAA,MACKS,gBADL,WACKA,gBADL;AAAA,MACuBC,iBADvB,WACuBA,iBADvB;;AAEH,MAAMC,kBAAkB,GAAGD,iBAAiB,GAAGE,gBAA/C;AACAN,EAAAA,iBAAiB,GAChBA,iBAAiB,IAAII,iBAAiB,GAAGJ,iBAD1C;AAGAL,EAAAA,WAAW,CAAE;AACZG,IAAAA,YAAY,EAAZA,YADY;AAEZC,IAAAA,SAAS,EAATA,SAFY;AAGZG,IAAAA,YAAY,EAAZA,YAHY;AAIZL,IAAAA,cAAc;AACbU,MAAAA,IAAI,EAAEJ,gBAAgB;AADT,OAEVN,cAFU,CAJF;AAQZG,IAAAA,iBAAiB,EAAjBA,iBARY;AASZC,IAAAA,OAAO,EAAE;AAAA,UAAIO,OAAJ,SAAIA,OAAJ;AAAA,aAAmBP,QAAO,CAAEO,OAAF,CAA1B;AAAA,KATG;AAUZH,IAAAA,kBAAkB,EAAlBA;AAVY,GAAF,CAAX;AAYA","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n\n/**\n * Upload a media file when the file upload button is activated.\n * Wrapper around mediaUpload() that injects the current post ID.\n *\n * @param   {Object}   $0                   Parameters object passed to the function.\n * @param   {?Object}  $0.additionalData    Additional data to include in the request.\n * @param   {string}   $0.allowedTypes      Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param   {Array}    $0.filesList         List of files.\n * @param   {?number}  $0.maxUploadFileSize Maximum upload size in bytes allowed for the site.\n * @param   {Function} $0.onError           Function called when an error happens.\n * @param   {Function} $0.onFileChange      Function called each time a file or a temporary representation of the file is available.\n */\nexport default function mediaUpload( {\n\tadditionalData = {},\n\tallowedTypes,\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError = noop,\n\tonFileChange,\n} ) {\n\tconst { getCurrentPostId, getEditorSettings } = select( 'core/editor' );\n\tconst wpAllowedMimeTypes = getEditorSettings().allowedMimeTypes;\n\tmaxUploadFileSize =\n\t\tmaxUploadFileSize || getEditorSettings().maxUploadFileSize;\n\n\tuploadMedia( {\n\t\tallowedTypes,\n\t\tfilesList,\n\t\tonFileChange,\n\t\tadditionalData: {\n\t\t\tpost: getCurrentPostId(),\n\t\t\t...additionalData,\n\t\t},\n\t\tmaxUploadFileSize,\n\t\tonError: ( { message } ) => onError( message ),\n\t\twpAllowedMimeTypes,\n\t} );\n}\n"]}