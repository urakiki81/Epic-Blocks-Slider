{"version":3,"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"names":["some","groupBy","Button","__","sprintf","_n","useSelect","useDispatch","useState","useCallback","close","closeIcon","EntityTypeList","ENTITY_NAMES","wp_template_part","number","wp_template","post","page","site","PLACEHOLDER_PHRASES","EntitiesSavedStates","isOpen","select","dirtyEntityRecords","__experimentalGetDirtyEntityRecords","saveEditedEntityRecord","partitionedSavables","Object","values","entityNamesForPrompt","forEach","list","name","push","length","placeholderPhrase","promptPhrase","unselectedEntities","_setUnselectedEntities","setUnselectedEntities","checked","kind","key","filter","elt","saveCheckedEntities","entitiesToSave","isReviewing","setIsReviewing","toggleIsReviewing","value","dismissPanel","map"],"mappings":";;;;AAAA;;;AAGA,SAASA,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA;;;;AAGA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,EAAtB,QAAgC,iBAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,kBAAnC;AAEA;;;;AAGA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,gBAAgB,EAAE,0BAAEC,MAAF;AAAA,WACjBV,EAAE,CAAE,eAAF,EAAmB,gBAAnB,EAAqCU,MAArC,CADe;AAAA,GADE;AAGpBC,EAAAA,WAAW,EAAE,qBAAED,MAAF;AAAA,WAAcV,EAAE,CAAE,UAAF,EAAc,WAAd,EAA2BU,MAA3B,CAAhB;AAAA,GAHO;AAIpBE,EAAAA,IAAI,EAAE,cAAEF,MAAF;AAAA,WAAcV,EAAE,CAAE,MAAF,EAAU,OAAV,EAAmBU,MAAnB,CAAhB;AAAA,GAJc;AAKpBG,EAAAA,IAAI,EAAE,cAAEH,MAAF;AAAA,WAAcV,EAAE,CAAE,MAAF,EAAU,OAAV,EAAmBU,MAAnB,CAAhB;AAAA,GALc;AAMpBI,EAAAA,IAAI,EAAE,cAAEJ,MAAF;AAAA,WAAcV,EAAE,CAAE,MAAF,EAAU,OAAV,EAAmBU,MAAnB,CAAhB;AAAA;AANc,CAArB;AASA,IAAMK,mBAAmB,GAAG;AAC3B;AACA,KAAGjB,EAAE,CAAE,uBAAF,CAFsB;;AAG3B;AACA,KAAGA,EAAE,CAAE,oCAAF,CAJsB;;AAK3B;AACA,KAAGA,EAAE,CAAE,+CAAF,CANsB;;AAO3B;AACA,KAAGA,EAAE,CAAE,sDAAF,CARsB;;AAS3B;AACA,KAAGA,EAAE,CAAE,4DAAF,CAVsB;;AAW3B;AACA,KAAGA,EAAE,CAAE,kEAAF;AAZsB,CAA5B;AAeA,eAAe,SAASkB,mBAAT,OAAkD;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVZ,KAAU,QAAVA,KAAU;;AAAA,mBACjCJ,SAAS,CAAE,UAAEiB,MAAF,EAAc;AACvD,WAAO;AACNC,MAAAA,kBAAkB,EAAED,MAAM,CACzB,MADyB,CAAN,CAElBE,mCAFkB;AADd,KAAP;AAKA,GANuC,EAMrC,EANqC,CADwB;AAAA,MACxDD,kBADwD,cACxDA,kBADwD;;AAAA,qBAQ7BjB,WAAW,CAAE,MAAF,CARkB;AAAA,MAQxDmB,sBARwD,gBAQxDA,sBARwD,EAUhE;;;AACA,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAC3B5B,OAAO,CAAEuB,kBAAF,EAAsB,MAAtB,CADoB,CAA5B,CAXgE,CAehE;;AACA,MAAMM,oBAAoB,GAAG,EAA7B;AACAH,EAAAA,mBAAmB,CAACI,OAApB,CAA6B,UAAEC,IAAF,EAAY;AACxC,QAAKnB,YAAY,CAAEmB,IAAI,CAAE,CAAF,CAAJ,CAAUC,IAAZ,CAAjB,EAAsC;AACrCH,MAAAA,oBAAoB,CAACI,IAArB,CACCrB,YAAY,CAAEmB,IAAI,CAAE,CAAF,CAAJ,CAAUC,IAAZ,CAAZ,CAAgCD,IAAI,CAACG,MAArC,CADD;AAGA;AACD,GAND,EAjBgE,CAwBhE;;AACA,MAAMC,iBAAiB,GACtBhB,mBAAmB,CAAEU,oBAAoB,CAACK,MAAvB,CAAnB,IACA;AACAhC,EAAAA,EAAE,CAAE,kDAAF,CAHH,CAzBgE,CA6BhE;;;AACA,MAAMkC,YAAY,GAAGjC,OAAO,MAAP,UAASgC,iBAAT,SAA+BN,oBAA/B,EAArB,CA9BgE,CAgChE;;AAhCgE,kBAiCTtB,QAAQ,CAAE,EAAF,CAjCC;AAAA;AAAA,MAiCxD8B,kBAjCwD;AAAA,MAiCpCC,sBAjCoC;;AAmChE,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,QAAuBC,OAAvB,EAAoC;AAAA,QAAhCC,IAAgC,SAAhCA,IAAgC;AAAA,QAA1BT,IAA0B,SAA1BA,IAA0B;AAAA,QAApBU,GAAoB,SAApBA,GAAoB;;AACjE,QAAKF,OAAL,EAAe;AACdF,MAAAA,sBAAsB,CACrBD,kBAAkB,CAACM,MAAnB,CACC,UAAEC,GAAF;AAAA,eACCA,GAAG,CAACH,IAAJ,KAAaA,IAAb,IACAG,GAAG,CAACZ,IAAJ,KAAaA,IADb,IAEAY,GAAG,CAACF,GAAJ,KAAYA,GAHb;AAAA,OADD,CADqB,CAAtB;AAQA,KATD,MASO;AACNJ,MAAAA,sBAAsB,8BAClBD,kBADkB,IAErB;AAAEI,QAAAA,IAAI,EAAJA,IAAF;AAAQT,QAAAA,IAAI,EAAJA,IAAR;AAAcU,QAAAA,GAAG,EAAHA;AAAd,OAFqB,GAAtB;AAIA;AACD,GAhBD;;AAkBA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACjC,QAAMC,cAAc,GAAGvB,kBAAkB,CAACoB,MAAnB,CACtB,iBAA2B;AAAA,UAAvBF,IAAuB,SAAvBA,IAAuB;AAAA,UAAjBT,IAAiB,SAAjBA,IAAiB;AAAA,UAAXU,GAAW,SAAXA,GAAW;AAC1B,aAAO,CAAE3C,IAAI,CACZsC,kBADY,EAEZ,UAAEO,GAAF;AAAA,eACCA,GAAG,CAACH,IAAJ,KAAaA,IAAb,IACAG,GAAG,CAACZ,IAAJ,KAAaA,IADb,IAEAY,GAAG,CAACF,GAAJ,KAAYA,GAHb;AAAA,OAFY,CAAb;AAOA,KATqB,CAAvB;AAYAjC,IAAAA,KAAK,CAAEqC,cAAF,CAAL;AAEAA,IAAAA,cAAc,CAAChB,OAAf,CAAwB,iBAA2B;AAAA,UAAvBW,IAAuB,SAAvBA,IAAuB;AAAA,UAAjBT,IAAiB,SAAjBA,IAAiB;AAAA,UAAXU,GAAW,SAAXA,GAAW;AAClDjB,MAAAA,sBAAsB,CAAEgB,IAAF,EAAQT,IAAR,EAAcU,GAAd,CAAtB;AACA,KAFD;AAGA,GAlBD;;AArDgE,mBAyExBnC,QAAQ,CAAE,KAAF,CAzEgB;AAAA;AAAA,MAyExDwC,WAzEwD;AAAA,MAyE3CC,cAzE2C;;AA0EhE,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAMD,cAAc,CAAE,UAAEE,KAAF;AAAA,aAAa,CAAEA,KAAf;AAAA,KAAF,CAApB;AAAA,GAA1B,CA1EgE,CA4EhE;AACA;;;AACA,MAAMC,YAAY,GAAG3C,WAAW,CAAE;AAAA,WAAMC,KAAK,EAAX;AAAA,GAAF,EAAiB,CAAEA,KAAF,CAAjB,CAAhC;AAEA,SAAOY,MAAM,GACZ;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,MAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,QAAQ,EACPE,kBAAkB,CAACW,MAAnB,GACCG,kBAAkB,CAACH,MADpB,KAEA,CALF;AAOC,IAAA,OAAO,EAAGW,mBAPX;AAQC,IAAA,SAAS,EAAC;AARX,KAUG3C,EAAE,CAAE,MAAF,CAVL,CADD,EAaC,cAAC,MAAD;AACC,IAAA,OAAO,EAAGiD,YADX;AAEC,IAAA,IAAI,EAAGzC,SAFR;AAGC,IAAA,KAAK,EAAGR,EAAE,CAAE,aAAF;AAHX,IAbD,CADD,EAqBC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,8BAAUA,EAAE,CAAE,wBAAF,CAAZ,CADD,EAEC,yBAAKkC,YAAL,CAFD,EAGC,yBACC,cAAC,MAAD;AACC,IAAA,OAAO,EAAGa,iBADX;AAEC,IAAA,MAAM,MAFP;AAGC,IAAA,SAAS,EAAC;AAHX,KAKGF,WAAW,GACV7C,EAAE,CAAE,eAAF,CADQ,GAEVA,EAAE,CAAE,iBAAF,CAPN,CADD,CAHD,CArBD,EAqCG6C,WAAW,IACZrB,mBAAmB,CAAC0B,GAApB,CAAyB,UAAErB,IAAF,EAAY;AACpC,WACC,cAAC,cAAD;AACC,MAAA,GAAG,EAAGA,IAAI,CAAE,CAAF,CAAJ,CAAUC,IADjB;AAEC,MAAA,IAAI,EAAGD,IAFR;AAGC,MAAA,UAAU,EAAGoB,YAHd;AAIC,MAAA,kBAAkB,EAAGd,kBAJtB;AAKC,MAAA,qBAAqB,EAAGE;AALzB,MADD;AASA,GAVD,CAtCF,CADY,GAmDT,IAnDJ;AAoDA","sourcesContent":["/**\n * External dependencies\n */\nimport { some, groupBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { __, sprintf, _n } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useCallback } from '@wordpress/element';\nimport { close as closeIcon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\n\nconst ENTITY_NAMES = {\n\twp_template_part: ( number ) =>\n\t\t_n( 'template part', 'template parts', number ),\n\twp_template: ( number ) => _n( 'template', 'templates', number ),\n\tpost: ( number ) => _n( 'post', 'posts', number ),\n\tpage: ( number ) => _n( 'page', 'pages', number ),\n\tsite: ( number ) => _n( 'site', 'sites', number ),\n};\n\nconst PLACEHOLDER_PHRASES = {\n\t// 0 is a back up, but should never be observed.\n\t0: __( 'There are no changes.' ),\n\t/* translators: placeholders represent pre-translated singular/plural entity names (page, post, template, site, etc.) */\n\t1: __( 'Changes have been made to your %s.' ),\n\t/* translators: placeholders represent pre-translated singular/plural entity names (page, post, template, site, etc.) */\n\t2: __( 'Changes have been made to your %1$s and %2$s.' ),\n\t/* translators: placeholders represent pre-translated singular/plural entity names (page, post, template, site, etc.) */\n\t3: __( 'Changes have been made to your %1$s, %2$s, and %3$s.' ),\n\t/* translators: placeholders represent pre-translated singular/plural entity names (page, post, template, site, etc.) */\n\t4: __( 'Changes have been made to your %1$s, %2$s, %3$s, and %4$s.' ),\n\t/* translators: placeholders represent pre-translated singular/plural entity names (page, post, template, site, etc.) */\n\t5: __( 'Changes have been made to your %1$s, %2$s, %3$s, %4$s, and %5$s.' ),\n};\n\nexport default function EntitiesSavedStates( { isOpen, close } ) {\n\tconst { dirtyEntityRecords } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tdirtyEntityRecords: select(\n\t\t\t\t'core'\n\t\t\t).__experimentalGetDirtyEntityRecords(),\n\t\t};\n\t}, [] );\n\tconst { saveEditedEntityRecord } = useDispatch( 'core' );\n\n\t// To group entities by type.\n\tconst partitionedSavables = Object.values(\n\t\tgroupBy( dirtyEntityRecords, 'name' )\n\t);\n\n\t// Get labels for text-prompt phrase.\n\tconst entityNamesForPrompt = [];\n\tpartitionedSavables.forEach( ( list ) => {\n\t\tif ( ENTITY_NAMES[ list[ 0 ].name ] ) {\n\t\t\tentityNamesForPrompt.push(\n\t\t\t\tENTITY_NAMES[ list[ 0 ].name ]( list.length )\n\t\t\t);\n\t\t}\n\t} );\n\t// Get text-prompt phrase based on number of entity types changed.\n\tconst placeholderPhrase =\n\t\tPLACEHOLDER_PHRASES[ entityNamesForPrompt.length ] ||\n\t\t// Fallback for edge case that should not be observed (more than 5 entity types edited).\n\t\t__( 'Changes have been made to multiple entity types.' );\n\t// eslint-disable-next-line @wordpress/valid-sprintf\n\tconst promptPhrase = sprintf( placeholderPhrase, ...entityNamesForPrompt );\n\n\t// Unchecked entities to be ignored by save function.\n\tconst [ unselectedEntities, _setUnselectedEntities ] = useState( [] );\n\n\tconst setUnselectedEntities = ( { kind, name, key }, checked ) => {\n\t\tif ( checked ) {\n\t\t\t_setUnselectedEntities(\n\t\t\t\tunselectedEntities.filter(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind !== kind ||\n\t\t\t\t\t\telt.name !== name ||\n\t\t\t\t\t\telt.key !== key\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t_setUnselectedEntities( [\n\t\t\t\t...unselectedEntities,\n\t\t\t\t{ kind, name, key },\n\t\t\t] );\n\t\t}\n\t};\n\n\tconst saveCheckedEntities = () => {\n\t\tconst entitiesToSave = dirtyEntityRecords.filter(\n\t\t\t( { kind, name, key } ) => {\n\t\t\t\treturn ! some(\n\t\t\t\t\tunselectedEntities,\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === kind &&\n\t\t\t\t\t\telt.name === name &&\n\t\t\t\t\t\telt.key === key\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tclose( entitiesToSave );\n\n\t\tentitiesToSave.forEach( ( { kind, name, key } ) => {\n\t\t\tsaveEditedEntityRecord( kind, name, key );\n\t\t} );\n\t};\n\n\tconst [ isReviewing, setIsReviewing ] = useState( false );\n\tconst toggleIsReviewing = () => setIsReviewing( ( value ) => ! value );\n\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\treturn isOpen ? (\n\t\t<div className=\"entities-saved-states__panel\">\n\t\t\t<div className=\"entities-saved-states__panel-header\">\n\t\t\t\t<Button\n\t\t\t\t\tisPrimary\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tdirtyEntityRecords.length -\n\t\t\t\t\t\t\tunselectedEntities.length ===\n\t\t\t\t\t\t0\n\t\t\t\t\t}\n\t\t\t\t\tonClick={ saveCheckedEntities }\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ dismissPanel }\n\t\t\t\t\ticon={ closeIcon }\n\t\t\t\t\tlabel={ __( 'Close panel' ) }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<strong>{ __( 'Are you ready to save?' ) }</strong>\n\t\t\t\t<p>{ promptPhrase }</p>\n\t\t\t\t<p>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ toggleIsReviewing }\n\t\t\t\t\t\tisLink\n\t\t\t\t\t\tclassName=\"entities-saved-states__review-changes-button\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isReviewing\n\t\t\t\t\t\t\t? __( 'Hide changes.' )\n\t\t\t\t\t\t\t: __( 'Review changes.' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{ isReviewing &&\n\t\t\t\tpartitionedSavables.map( ( list ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\t\tclosePanel={ dismissPanel }\n\t\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t</div>\n\t) : null;\n}\n"]}