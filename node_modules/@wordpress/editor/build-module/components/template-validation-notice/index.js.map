{"version":3,"sources":["@wordpress/editor/src/components/template-validation-notice/index.js"],"names":["Notice","__","withSelect","withDispatch","compose","TemplateValidationNotice","isValid","props","confirmSynchronization","window","confirm","synchronizeTemplate","label","onClick","resetTemplateValidity","isPrimary","select","isValidTemplate","dispatch","setTemplateValidity"],"mappings":";;;AAAA;;;AAGA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,wBAAT,OAA2D;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAVC,KAAU;;AAC1D,MAAKD,OAAL,EAAe;AACd,WAAO,IAAP;AACA;;AAED,MAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACpC,SACC;AACAC,IAAAA,MAAM,CAACC,OAAP,CACCT,EAAE,CACD,gFADC,CADH,CAFD,EAOE;AACDM,MAAAA,KAAK,CAACI,mBAAN;AACA;AACD,GAXD;;AAaA,SACC,cAAC,MAAD;AACC,IAAA,SAAS,EAAC,mCADX;AAEC,IAAA,aAAa,EAAG,KAFjB;AAGC,IAAA,MAAM,EAAC,SAHR;AAIC,IAAA,OAAO,EAAG,CACT;AACCC,MAAAA,KAAK,EAAEX,EAAE,CAAE,eAAF,CADV;AAECY,MAAAA,OAAO,EAAEN,KAAK,CAACO;AAFhB,KADS,EAKT;AACCF,MAAAA,KAAK,EAAEX,EAAE,CAAE,oBAAF,CADV;AAECY,MAAAA,OAAO,EAAEL,sBAFV;AAGCO,MAAAA,SAAS,EAAE;AAHZ,KALS;AAJX,KAgBGd,EAAE,CACH,iFADG,CAhBL,CADD;AAsBA;;AAED,eAAeG,OAAO,CAAE,CACvBF,UAAU,CAAE,UAAEc,MAAF;AAAA,SAAgB;AAC3BV,IAAAA,OAAO,EAAEU,MAAM,CAAE,mBAAF,CAAN,CAA8BC,eAA9B;AADkB,GAAhB;AAAA,CAAF,CADa,EAIvBd,YAAY,CAAE,UAAEe,QAAF,EAAgB;AAAA,kBACwBA,QAAQ,CAC5D,mBAD4D,CADhC;AAAA,MACrBC,mBADqB,aACrBA,mBADqB;AAAA,MACAR,mBADA,aACAA,mBADA;;AAI7B,SAAO;AACNG,IAAAA,qBAAqB,EAAE;AAAA,aAAMK,mBAAmB,CAAE,IAAF,CAAzB;AAAA,KADjB;AAENR,IAAAA,mBAAmB,EAAnBA;AAFM,GAAP;AAIA,CARW,CAJW,CAAF,CAAP,CAaVN,wBAbU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Notice } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\nfunction TemplateValidationNotice( { isValid, ...props } ) {\n\tif ( isValid ) {\n\t\treturn null;\n\t}\n\n\tconst confirmSynchronization = () => {\n\t\tif (\n\t\t\t// eslint-disable-next-line no-alert\n\t\t\twindow.confirm(\n\t\t\t\t__(\n\t\t\t\t\t'Resetting the template may result in loss of content, do you want to continue?'\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\tprops.synchronizeTemplate();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Notice\n\t\t\tclassName=\"editor-template-validation-notice\"\n\t\t\tisDismissible={ false }\n\t\t\tstatus=\"warning\"\n\t\t\tactions={ [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Keep it as is' ),\n\t\t\t\t\tonClick: props.resetTemplateValidity,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Reset the template' ),\n\t\t\t\t\tonClick: confirmSynchronization,\n\t\t\t\t\tisPrimary: true,\n\t\t\t\t},\n\t\t\t] }\n\t\t>\n\t\t\t{ __(\n\t\t\t\t'The content of your post doesnâ€™t match the template assigned to your post type.'\n\t\t\t) }\n\t\t</Notice>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tisValid: select( 'core/block-editor' ).isValidTemplate(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { setTemplateValidity, synchronizeTemplate } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\t\treturn {\n\t\t\tresetTemplateValidity: () => setTemplateValidity( true ),\n\t\t\tsynchronizeTemplate,\n\t\t};\n\t} ),\n] )( TemplateValidationNotice );\n"]}