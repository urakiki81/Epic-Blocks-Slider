{"version":3,"sources":["@wordpress/editor/src/components/convert-to-group-buttons/index.js"],"names":["MenuItem","_x","switchToBlockType","withSelect","withDispatch","compose","BlockSettingsMenuControls","ConvertToGroupButton","onConvertToGroup","onConvertFromGroup","isGroupable","isUngroupable","onClose","select","getBlockRootClientId","getBlocksByClientId","canInsertBlockType","getSelectedBlockClientIds","getGroupingBlockName","clientIds","groupingBlockName","rootClientId","length","undefined","groupingBlockAvailable","blocksSelection","isSingleGroupingBlock","name","innerBlocks","dispatch","replaceBlocks","newBlocks"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\nexport function ConvertToGroupButton( {\n\tonConvertToGroup,\n\tonConvertFromGroup,\n\tisGroupable = false,\n\tisUngroupable = false,\n} ) {\n\tif ( ! isGroupable && ! isUngroupable ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t{ isGroupable && (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonConvertToGroup();\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x( 'Group', 'verb' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isUngroupable && (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonConvertFromGroup();\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'Ungroup',\n\t\t\t\t\t\t\t\t'Ungrouping blocks from within a Group block back into individual blocks within the Editor '\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlocksByClientId,\n\t\t\tcanInsertBlockType,\n\t\t\tgetSelectedBlockClientIds,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst { getGroupingBlockName } = select( 'core/blocks' );\n\n\t\tconst clientIds = getSelectedBlockClientIds();\n\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\tconst rootClientId =\n\t\t\tclientIds && clientIds.length > 0\n\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t: undefined;\n\n\t\tconst groupingBlockAvailable = canInsertBlockType(\n\t\t\tgroupingBlockName,\n\t\t\trootClientId\n\t\t);\n\n\t\tconst blocksSelection = getBlocksByClientId( clientIds );\n\n\t\tconst isSingleGroupingBlock =\n\t\t\tblocksSelection.length === 1 &&\n\t\t\tblocksSelection[ 0 ] &&\n\t\t\tblocksSelection[ 0 ].name === groupingBlockName;\n\n\t\t// Do we have\n\t\t// 1. Grouping block available to be inserted?\n\t\t// 2. One or more blocks selected\n\t\t// (we allow single Blocks to become groups unless\n\t\t// they are a soltiary group block themselves)\n\t\tconst isGroupable =\n\t\t\tgroupingBlockAvailable &&\n\t\t\tblocksSelection.length &&\n\t\t\t! isSingleGroupingBlock;\n\n\t\t// Do we have a single Group Block selected and does that group have inner blocks?\n\t\tconst isUngroupable =\n\t\t\tisSingleGroupingBlock && !! blocksSelection[ 0 ].innerBlocks.length;\n\n\t\treturn {\n\t\t\tclientIds,\n\t\t\tisGroupable,\n\t\t\tisUngroupable,\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName,\n\t\t};\n\t} ),\n\twithDispatch(\n\t\t(\n\t\t\tdispatch,\n\t\t\t{ clientIds, blocksSelection = [], groupingBlockName }\n\t\t) => {\n\t\t\tconst { replaceBlocks } = dispatch( 'core/block-editor' );\n\n\t\t\treturn {\n\t\t\t\tonConvertToGroup() {\n\t\t\t\t\t// Activate the `transform` on the Grouping Block which does the conversion\n\t\t\t\t\tconst newBlocks = switchToBlockType(\n\t\t\t\t\t\tblocksSelection,\n\t\t\t\t\t\tgroupingBlockName\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( newBlocks ) {\n\t\t\t\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonConvertFromGroup() {\n\t\t\t\t\tconst innerBlocks = blocksSelection[ 0 ].innerBlocks;\n\n\t\t\t\t\tif ( ! innerBlocks.length ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treplaceBlocks( clientIds, innerBlocks );\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t),\n] )( ConvertToGroupButton );\n"]}