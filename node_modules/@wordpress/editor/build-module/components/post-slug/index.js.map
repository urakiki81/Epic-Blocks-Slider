{"version":3,"sources":["@wordpress/editor/src/components/post-slug/index.js"],"names":["withDispatch","withSelect","Component","__","withInstanceId","compose","safeDecodeURIComponent","PostSlugCheck","cleanForSlug","PostSlug","postSlug","postTitle","postID","arguments","state","editedSlug","setSlug","bind","event","props","onUpdateSlug","value","target","instanceId","inputId","setState","select","getCurrentPost","getEditedPostAttribute","id","dispatch","editPost","slug"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { safeDecodeURIComponent } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport PostSlugCheck from './check';\nimport { cleanForSlug } from '../../utils/url';\n\nexport class PostSlug extends Component {\n\tconstructor( { postSlug, postTitle, postID } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\teditedSlug:\n\t\t\t\tsafeDecodeURIComponent( postSlug ) ||\n\t\t\t\tcleanForSlug( postTitle ) ||\n\t\t\t\tpostID,\n\t\t};\n\n\t\tthis.setSlug = this.setSlug.bind( this );\n\t}\n\n\tsetSlug( event ) {\n\t\tconst { postSlug, onUpdateSlug } = this.props;\n\t\tconst { value } = event.target;\n\n\t\tconst editedSlug = cleanForSlug( value );\n\n\t\tif ( editedSlug === postSlug ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonUpdateSlug( editedSlug );\n\t}\n\n\trender() {\n\t\tconst { instanceId } = this.props;\n\t\tconst { editedSlug } = this.state;\n\n\t\tconst inputId = 'editor-post-slug-' + instanceId;\n\n\t\treturn (\n\t\t\t<PostSlugCheck>\n\t\t\t\t<label htmlFor={ inputId }>{ __( 'Slug' ) }</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid={ inputId }\n\t\t\t\t\tvalue={ editedSlug }\n\t\t\t\t\tonChange={ ( event ) =>\n\t\t\t\t\t\tthis.setState( { editedSlug: event.target.value } )\n\t\t\t\t\t}\n\t\t\t\t\tonBlur={ this.setSlug }\n\t\t\t\t\tclassName=\"editor-post-slug__input\"\n\t\t\t\t/>\n\t\t\t</PostSlugCheck>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getCurrentPost, getEditedPostAttribute } = select(\n\t\t\t'core/editor'\n\t\t);\n\n\t\tconst { id } = getCurrentPost();\n\t\treturn {\n\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\tpostTitle: getEditedPostAttribute( 'title' ),\n\t\t\tpostID: id,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonUpdateSlug( slug ) {\n\t\t\t\teditPost( { slug } );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostSlug );\n"]}