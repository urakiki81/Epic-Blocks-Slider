{"version":3,"sources":["@wordpress/editor/src/components/reusable-blocks-buttons/reusable-block-delete-button.js"],"names":["compose","MenuItem","__","isReusableBlock","withSelect","withDispatch","BlockSettingsMenuControls","ReusableBlockDeleteButton","isVisible","isDisabled","onDelete","onClose","hasConfirmed","select","clientId","getBlock","canUser","getReusableBlock","__experimentalGetReusableBlock","block","reusableBlock","attributes","ref","isTemporary","id","dispatch","deleteReusableBlock","__experimentalDeleteReusableBlock","window","confirm"],"mappings":";;AAAA;;;AAGA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AAEA,OAAO,SAASC,yBAAT,OAIH;AAAA,MAHHC,SAGG,QAHHA,SAGG;AAAA,MAFHC,UAEG,QAFHA,UAEG;AAAA,MADHC,QACG,QADHA,QACG;;AACH,MAAK,CAAEF,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,SACC,cAAC,yBAAD,QACG;AAAA,QAAIG,OAAJ,SAAIA,OAAJ;AAAA,WACD,cAAC,QAAD;AACC,MAAA,QAAQ,EAAGF,UADZ;AAEC,MAAA,OAAO,EAAG,mBAAM;AACf,YAAMG,YAAY,GAAGF,QAAQ,EAA7B;;AACA,YAAKE,YAAL,EAAoB;AACnBD,UAAAA,OAAO;AACP;AACD;AAPF,OASGT,EAAE,CAAE,6BAAF,CATL,CADC;AAAA,GADH,CADD;AAiBA;AAED,eAAeF,OAAO,CAAE,CACvBI,UAAU,CAAE,UAAES,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBAClBD,MAAM,CAAE,mBAAF,CADY;AAAA,MAC/BE,QAD+B,WAC/BA,QAD+B;;AAAA,iBAEnBF,MAAM,CAAE,MAAF,CAFa;AAAA,MAE/BG,OAF+B,YAE/BA,OAF+B;;AAAA,iBAGsBH,MAAM,CAClE,aADkE,CAH5B;AAAA,MAGCI,gBAHD,YAG/BC,8BAH+B;;AAMvC,MAAMC,KAAK,GAAGJ,QAAQ,CAAED,QAAF,CAAtB;AAEA,MAAMM,aAAa,GAClBD,KAAK,IAAIhB,eAAe,CAAEgB,KAAF,CAAxB,GACGF,gBAAgB,CAAEE,KAAK,CAACE,UAAN,CAAiBC,GAAnB,CADnB,GAEG,IAHJ;AAKA,SAAO;AACNd,IAAAA,SAAS,EACR,CAAC,CAAEY,aAAH,KACEA,aAAa,CAACG,WAAd,IACD,CAAC,CAAEP,OAAO,CAAE,QAAF,EAAY,QAAZ,EAAsBI,aAAa,CAACI,EAApC,CAFX,CAFK;AAKNf,IAAAA,UAAU,EAAEW,aAAa,IAAIA,aAAa,CAACG;AALrC,GAAP;AAOA,CApBS,CADa,EAsBvBlB,YAAY,CAAE,UAAEoB,QAAF,gBAA0C;AAAA,MAA5BX,QAA4B,SAA5BA,QAA4B;AAAA,MAAdD,MAAc,SAAdA,MAAc;;AAAA,kBAGnDY,QAAQ,CAAE,aAAF,CAH2C;AAAA,MAEnBC,mBAFmB,aAEtDC,iCAFsD;;AAAA,iBAIlCd,MAAM,CAAE,mBAAF,CAJ4B;AAAA,MAI/CE,QAJ+C,YAI/CA,QAJ+C;;AAMvD,SAAO;AACNL,IAAAA,QADM,sBACK;AACV;AACA;AACA,UAAME,YAAY,GAAGgB,MAAM,CAACC,OAAP,EACpB;AACA3B,MAAAA,EAAE,CACD,6DACC,sEAFA,CAFkB,CAArB;;AAQA,UAAKU,YAAL,EAAoB;AACnB,YAAMO,KAAK,GAAGJ,QAAQ,CAAED,QAAF,CAAtB;AACAY,QAAAA,mBAAmB,CAAEP,KAAK,CAACE,UAAN,CAAiBC,GAAnB,CAAnB;AACA;;AAED,aAAOV,YAAP;AACA;AAlBK,GAAP;AAoBA,CA1BW,CAtBW,CAAF,CAAP,CAiDVL,yBAjDU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\nexport function ReusableBlockDeleteButton( {\n\tisVisible,\n\tisDisabled,\n\tonDelete,\n} ) {\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<MenuItem\n\t\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tconst hasConfirmed = onDelete();\n\t\t\t\t\t\tif ( hasConfirmed ) {\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Remove from Reusable blocks' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlock } = select( 'core/block-editor' );\n\t\tconst { canUser } = select( 'core' );\n\t\tconst { __experimentalGetReusableBlock: getReusableBlock } = select(\n\t\t\t'core/editor'\n\t\t);\n\t\tconst block = getBlock( clientId );\n\n\t\tconst reusableBlock =\n\t\t\tblock && isReusableBlock( block )\n\t\t\t\t? getReusableBlock( block.attributes.ref )\n\t\t\t\t: null;\n\n\t\treturn {\n\t\t\tisVisible:\n\t\t\t\t!! reusableBlock &&\n\t\t\t\t( reusableBlock.isTemporary ||\n\t\t\t\t\t!! canUser( 'delete', 'blocks', reusableBlock.id ) ),\n\t\t\tisDisabled: reusableBlock && reusableBlock.isTemporary,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId }, { select } ) => {\n\t\tconst {\n\t\t\t__experimentalDeleteReusableBlock: deleteReusableBlock,\n\t\t} = dispatch( 'core/editor' );\n\t\tconst { getBlock } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonDelete() {\n\t\t\t\t// TODO: Make this a <Confirm /> component or similar\n\t\t\t\t// eslint-disable-next-line no-alert\n\t\t\t\tconst hasConfirmed = window.confirm(\n\t\t\t\t\t// eslint-disable-next-line @wordpress/i18n-no-collapsible-whitespace\n\t\t\t\t\t__(\n\t\t\t\t\t\t'Are you sure you want to delete this Reusable Block?\\n\\n' +\n\t\t\t\t\t\t\t'It will be permanently removed from all posts and pages that use it.'\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif ( hasConfirmed ) {\n\t\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\t\tdeleteReusableBlock( block.attributes.ref );\n\t\t\t\t}\n\n\t\t\t\treturn hasConfirmed;\n\t\t\t},\n\t\t};\n\t} ),\n] )( ReusableBlockDeleteButton );\n"]}