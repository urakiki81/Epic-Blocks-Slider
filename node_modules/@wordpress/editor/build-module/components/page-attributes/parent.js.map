{"version":3,"sources":["@wordpress/editor/src/components/page-attributes/parent.js"],"names":["get","__","TreeSelect","compose","withSelect","withDispatch","buildTermsTree","PageAttributesParent","parent","postType","items","onUpdateParent","isHierarchical","parentPageLabel","pageItems","length","pagesTree","map","item","id","name","title","raw","applyWithSelect","select","getPostType","getEntityRecords","getCurrentPostId","getEditedPostAttribute","postTypeSlug","postId","query","per_page","exclude","parent_exclude","orderby","order","_fields","applyWithDispatch","dispatch","editPost"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { TreeSelect } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\n\nexport function PageAttributesParent( {\n\tparent,\n\tpostType,\n\titems,\n\tonUpdateParent,\n} ) {\n\tconst isHierarchical = get( postType, [ 'hierarchical' ], false );\n\tconst parentPageLabel = get( postType, [ 'labels', 'parent_item_colon' ] );\n\tconst pageItems = items || [];\n\tif ( ! isHierarchical || ! parentPageLabel || ! pageItems.length ) {\n\t\treturn null;\n\t}\n\n\tconst pagesTree = buildTermsTree(\n\t\tpageItems.map( ( item ) => ( {\n\t\t\tid: item.id,\n\t\t\tparent: item.parent,\n\t\t\tname:\n\t\t\t\titem.title && item.title.raw\n\t\t\t\t\t? item.title.raw\n\t\t\t\t\t: `#${ item.id } (${ __( 'no title' ) })`,\n\t\t} ) )\n\t);\n\treturn (\n\t\t<TreeSelect\n\t\t\tclassName=\"editor-page-attributes__parent\"\n\t\t\tlabel={ parentPageLabel }\n\t\t\tnoOptionLabel={ `(${ __( 'no parent' ) })` }\n\t\t\ttree={ pagesTree }\n\t\t\tselectedId={ parent }\n\t\t\tonChange={ onUpdateParent }\n\t\t/>\n\t);\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getPostType, getEntityRecords } = select( 'core' );\n\tconst { getCurrentPostId, getEditedPostAttribute } = select(\n\t\t'core/editor'\n\t);\n\tconst postTypeSlug = getEditedPostAttribute( 'type' );\n\tconst postType = getPostType( postTypeSlug );\n\tconst postId = getCurrentPostId();\n\tconst isHierarchical = get( postType, [ 'hierarchical' ], false );\n\tconst query = {\n\t\tper_page: -1,\n\t\texclude: postId,\n\t\tparent_exclude: postId,\n\t\torderby: 'menu_order',\n\t\torder: 'asc',\n\t\t_fields: 'id,title,parent',\n\t};\n\n\treturn {\n\t\tparent: getEditedPostAttribute( 'parent' ),\n\t\titems: isHierarchical\n\t\t\t? getEntityRecords( 'postType', postTypeSlug, query )\n\t\t\t: [],\n\t\tpostType,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\tconst { editPost } = dispatch( 'core/editor' );\n\treturn {\n\t\tonUpdateParent( parent ) {\n\t\t\teditPost( { parent: parent || 0 } );\n\t\t},\n\t};\n} );\n\nexport default compose( [ applyWithSelect, applyWithDispatch ] )(\n\tPageAttributesParent\n);\n"]}