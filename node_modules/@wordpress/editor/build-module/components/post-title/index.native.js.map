{"version":3,"sources":["@wordpress/editor/src/components/post-title/index.native.js"],"names":["View","isEmpty","Component","__experimentalRichText","RichText","create","insert","decodeEntities","withDispatch","withSelect","withFocusOutside","withInstanceId","compose","__","sprintf","pasteHandler","styles","PostTitle","props","setRef","bind","prevProps","isSelected","isAnyBlockSelected","richTextRef","blur","onUnselect","innerRef","onSelect","value","onChange","plainText","content","mode","tagName","valueToInsert","html","richText","title","postType","placeholder","style","focusedBorderColor","borderStyle","isDimmed","decodedPlaceholder","borderColor","titleContainer","dimmed","getTitle","onBlur","onUpdate","onPaste","onEnterPress","select","isPostTitleSelected","getEditedPostAttribute","getSelectedBlockClientId","getBlockRootClientId","selectedId","selectionIsNested","dispatch","undo","redo","togglePostTitleSelection","clearSelectedBlock","insertDefaultBlock","undefined","onUndo","onRedo"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\nimport { isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\t__experimentalRichText as RichText,\n\tcreate,\n\tinsert,\n} from '@wordpress/rich-text';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withFocusOutside } from '@wordpress/components';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { pasteHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nclass PostTitle extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.setRef = this.setRef.bind( this );\n\t}\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Unselect if any other block is selected and blur the RichText\n\t\tif (\n\t\t\tthis.props.isSelected &&\n\t\t\t! prevProps.isAnyBlockSelected &&\n\t\t\tthis.props.isAnyBlockSelected\n\t\t) {\n\t\t\tif ( this.richTextRef ) {\n\t\t\t\tthis.richTextRef.blur();\n\t\t\t}\n\t\t\tthis.props.onUnselect();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.innerRef ) {\n\t\t\tthis.props.innerRef( this );\n\t\t}\n\t}\n\n\thandleFocusOutside() {\n\t\tthis.props.onUnselect();\n\t}\n\n\tfocus() {\n\t\tthis.props.onSelect();\n\t}\n\n\tonPaste( { value, onChange, plainText } ) {\n\t\tconst content = pasteHandler( {\n\t\t\tplainText,\n\t\t\tmode: 'INLINE',\n\t\t\ttagName: 'p',\n\t\t} );\n\n\t\tif ( typeof content === 'string' ) {\n\t\t\tconst valueToInsert = create( { html: content } );\n\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t}\n\t}\n\n\tsetRef( richText ) {\n\t\tthis.richTextRef = richText;\n\t}\n\n\tgetTitle( title, postType ) {\n\t\tif ( 'page' === postType ) {\n\t\t\treturn isEmpty( title )\n\t\t\t\t? /* translators: accessibility text. empty page title. */\n\t\t\t\t  __( 'Page title. Empty' )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t/* translators: accessibility text. %s: text content of the page title. */\n\t\t\t\t\t\t__( 'Page title. %s' ),\n\t\t\t\t\t\ttitle\n\t\t\t\t  );\n\t\t}\n\n\t\treturn isEmpty( title )\n\t\t\t? /* translators: accessibility text. empty post title. */\n\t\t\t  __( 'Post title. Empty' )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: accessibility text. %s: text content of the post title. */\n\t\t\t\t\t__( 'Post title. %s' ),\n\t\t\t\t\ttitle\n\t\t\t  );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tplaceholder,\n\t\t\tstyle,\n\t\t\ttitle,\n\t\t\tfocusedBorderColor,\n\t\t\tborderStyle,\n\t\t\tisDimmed,\n\t\t\tpostType,\n\t\t} = this.props;\n\n\t\tconst decodedPlaceholder = decodeEntities( placeholder );\n\t\tconst borderColor = this.props.isSelected\n\t\t\t? focusedBorderColor\n\t\t\t: 'transparent';\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.titleContainer,\n\t\t\t\t\tborderStyle,\n\t\t\t\t\t{ borderColor },\n\t\t\t\t\tisDimmed && styles.dimmed,\n\t\t\t\t] }\n\t\t\t\taccessible={ ! this.props.isSelected }\n\t\t\t\taccessibilityLabel={ this.getTitle( title, postType ) }\n\t\t\t\taccessibilityHint={ __( 'Updates the title.' ) }\n\t\t\t>\n\t\t\t\t<RichText\n\t\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t\taccessibilityLabel={ this.getTitle( title, postType ) }\n\t\t\t\t\ttagName={ 'p' }\n\t\t\t\t\ttagsToEliminate={ [ 'strong' ] }\n\t\t\t\t\tunstableOnFocus={ this.props.onSelect }\n\t\t\t\t\tonBlur={ this.props.onBlur } // always assign onBlur as a props\n\t\t\t\t\tmultiline={ false }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t\tstyles={ styles }\n\t\t\t\t\tfontSize={ 24 }\n\t\t\t\t\tfontWeight={ 'bold' }\n\t\t\t\t\tdeleteEnter={ true }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tthis.props.onUpdate( value );\n\t\t\t\t\t} }\n\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\tplaceholder={ decodedPlaceholder }\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonSelectionChange={ () => {} }\n\t\t\t\t\tonEnter={ this.props.onEnterPress }\n\t\t\t\t\tdisableEditingMenu={ true }\n\t\t\t\t\t__unstableIsSelected={ this.props.isSelected }\n\t\t\t\t\t__unstableOnCreateUndoLevel={ () => {} }\n\t\t\t\t></RichText>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst { isPostTitleSelected, getEditedPostAttribute } = select(\n\t\t\t'core/editor'\n\t\t);\n\n\t\tconst { getSelectedBlockClientId, getBlockRootClientId } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\tconst selectedId = getSelectedBlockClientId();\n\t\tconst selectionIsNested = !! getBlockRootClientId( selectedId );\n\n\t\treturn {\n\t\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\t\tisAnyBlockSelected: !! selectedId,\n\t\t\tisSelected: isPostTitleSelected(),\n\t\t\tisDimmed: selectionIsNested,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { undo, redo, togglePostTitleSelection } = dispatch(\n\t\t\t'core/editor'\n\t\t);\n\n\t\tconst { clearSelectedBlock, insertDefaultBlock } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\treturn {\n\t\t\tonEnterPress() {\n\t\t\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t\t\t},\n\t\t\tonUndo: undo,\n\t\t\tonRedo: redo,\n\t\t\tonSelect() {\n\t\t\t\ttogglePostTitleSelection( true );\n\t\t\t\tclearSelectedBlock();\n\t\t\t},\n\t\t\tonUnselect() {\n\t\t\t\ttogglePostTitleSelection( false );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithFocusOutside\n)( PostTitle );\n"]}