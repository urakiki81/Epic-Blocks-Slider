/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { useEffect } from '@wordpress/element';
import { useSelect } from '@wordpress/data';
/**
 * Warns the user if there are unsaved changes before leaving the editor.
 * Compatible with Post Editor and Site Editor.
 *
 * @return {WPComponent} The component.
 */

export default function UnsavedChangesWarning() {
  var isDirty = useSelect(function (select) {
    return function () {
      var _select = select('core'),
          __experimentalGetDirtyEntityRecords = _select.__experimentalGetDirtyEntityRecords;

      var dirtyEntityRecords = __experimentalGetDirtyEntityRecords();

      return dirtyEntityRecords.length > 0;
    };
  }, []);
  /**
   * Warns the user if there are unsaved changes before leaving the editor.
   *
   * @param {Event} event `beforeunload` event.
   *
   * @return {?string} Warning prompt message, if unsaved changes exist.
   */

  var warnIfUnsavedChanges = function warnIfUnsavedChanges(event) {
    // We need to call the selector directly in the listener to avoid race
    // conditions with `BrowserURL` where `componentDidUpdate` gets the
    // new value of `isEditedPostDirty` before this component does,
    // causing this component to incorrectly think a trashed post is still dirty.
    if (isDirty()) {
      event.returnValue = __('You have unsaved changes. If you proceed, they will be lost.');
      return event.returnValue;
    }
  };

  useEffect(function () {
    window.addEventListener('beforeunload', warnIfUnsavedChanges);
    return function () {
      window.removeEventListener('beforeunload', warnIfUnsavedChanges);
    };
  }, []);
  return null;
}
//# sourceMappingURL=index.js.map