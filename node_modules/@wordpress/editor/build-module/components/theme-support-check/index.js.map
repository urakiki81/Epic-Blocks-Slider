{"version":3,"sources":["@wordpress/editor/src/components/theme-support-check/index.js"],"names":["castArray","includes","isArray","get","some","withSelect","ThemeSupportCheck","themeSupports","children","postType","supportKeys","isSupported","key","supported","select","getThemeSupports","getEditedPostAttribute"],"mappings":"AAAA;;;AAGA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,QAAxD;AAEA;;;;AAGA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAO,SAASC,iBAAT,OAKH;AAAA,MAJHC,aAIG,QAJHA,aAIG;AAAA,MAHHC,QAGG,QAHHA,QAGG;AAAA,MAFHC,QAEG,QAFHA,QAEG;AAAA,MADHC,WACG,QADHA,WACG;AACH,MAAMC,WAAW,GAAGP,IAAI,CAAEJ,SAAS,CAAEU,WAAF,CAAX,EAA4B,UAAEE,GAAF,EAAW;AAC9D,QAAMC,SAAS,GAAGV,GAAG,CAAEI,aAAF,EAAiB,CAAEK,GAAF,CAAjB,EAA0B,KAA1B,CAArB,CAD8D,CAE9D;AACA;AACA;AACA;;AACA,QAAK,sBAAsBA,GAAtB,IAA6BV,OAAO,CAAEW,SAAF,CAAzC,EAAyD;AACxD,aAAOZ,QAAQ,CAAEY,SAAF,EAAaJ,QAAb,CAAf;AACA;;AACD,WAAOI,SAAP;AACA,GAVuB,CAAxB;;AAYA,MAAK,CAAEF,WAAP,EAAqB;AACpB,WAAO,IAAP;AACA;;AAED,SAAOH,QAAP;AACA;AAED,eAAeH,UAAU,CAAE,UAAES,MAAF,EAAc;AAAA,gBACXA,MAAM,CAAE,MAAF,CADK;AAAA,MAChCC,gBADgC,WAChCA,gBADgC;;AAAA,iBAELD,MAAM,CAAE,aAAF,CAFD;AAAA,MAEhCE,sBAFgC,YAEhCA,sBAFgC;;AAGxC,SAAO;AACNP,IAAAA,QAAQ,EAAEO,sBAAsB,CAAE,MAAF,CAD1B;AAENT,IAAAA,aAAa,EAAEQ,gBAAgB;AAFzB,GAAP;AAIA,CAPwB,CAAV,CAOVT,iBAPU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, includes, isArray, get, some } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\n\nexport function ThemeSupportCheck( {\n\tthemeSupports,\n\tchildren,\n\tpostType,\n\tsupportKeys,\n} ) {\n\tconst isSupported = some( castArray( supportKeys ), ( key ) => {\n\t\tconst supported = get( themeSupports, [ key ], false );\n\t\t// 'post-thumbnails' can be boolean or an array of post types.\n\t\t// In the latter case, we need to verify `postType` exists\n\t\t// within `supported`. If `postType` isn't passed, then the check\n\t\t// should fail.\n\t\tif ( 'post-thumbnails' === key && isArray( supported ) ) {\n\t\t\treturn includes( supported, postType );\n\t\t}\n\t\treturn supported;\n\t} );\n\n\tif ( ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getThemeSupports } = select( 'core' );\n\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\treturn {\n\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\tthemeSupports: getThemeSupports(),\n\t};\n} )( ThemeSupportCheck );\n"]}