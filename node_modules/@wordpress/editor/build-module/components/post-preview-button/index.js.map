{"version":3,"sources":["@wordpress/editor/src/components/post-preview-button/index.js"],"names":["get","classnames","Component","createRef","renderToString","Button","Path","SVG","VisuallyHidden","__","_x","withSelect","withDispatch","ifCondition","compose","applyFilters","writeInterstitialMessage","targetDocument","markup","write","title","close","PostPreviewButton","arguments","buttonRef","openPreviewWindow","bind","prevProps","previewLink","props","setPreviewWindowLink","url","previewWindow","closed","location","current","focus","postId","event","preventDefault","window","open","getWindowTarget","isAutosaveable","target","href","isDraft","savePost","isPreview","autosave","document","currentPostLink","isSaveable","role","classNames","className","textContent","select","forcePreviewLink","forceIsAutosaveable","getCurrentPostId","getCurrentPostAttribute","getEditedPostAttribute","isEditedPostSaveable","isEditedPostAutosaveable","getEditedPostPreviewLink","getPostType","postType","undefined","isViewable","indexOf","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component, createRef, renderToString } from '@wordpress/element';\nimport { Button, Path, SVG, VisuallyHidden } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { ifCondition, compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\n\nfunction writeInterstitialMessage( targetDocument ) {\n\tlet markup = renderToString(\n\t\t<div className=\"editor-post-preview-button__interstitial-message\">\n\t\t\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"outer\"\n\t\t\t\t\td=\"M48 12c19.9 0 36 16.1 36 36S67.9 84 48 84 12 67.9 12 48s16.1-36 36-36\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"inner\"\n\t\t\t\t\td=\"M69.5 46.4c0-3.9-1.4-6.7-2.6-8.8-1.6-2.6-3.1-4.9-3.1-7.5 0-2.9 2.2-5.7 5.4-5.7h.4C63.9 19.2 56.4 16 48 16c-11.2 0-21 5.7-26.7 14.4h2.1c3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3L40 67.5l7-20.9L42 33c-1.7-.1-3.3-.3-3.3-.3-1.7-.1-1.5-2.7.2-2.6 0 0 5.3.4 8.4.4 3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3l11.5 34.3 3.3-10.4c1.6-4.5 2.4-7.8 2.4-10.5zM16.1 48c0 12.6 7.3 23.5 18 28.7L18.8 35c-1.7 4-2.7 8.4-2.7 13zm32.5 2.8L39 78.6c2.9.8 5.9 1.3 9 1.3 3.7 0 7.3-.6 10.6-1.8-.1-.1-.2-.3-.2-.4l-9.8-26.9zM76.2 36c0 3.2-.6 6.9-2.4 11.4L64 75.6c9.5-5.5 15.9-15.8 15.9-27.6 0-5.5-1.4-10.8-3.9-15.3.1 1 .2 2.1.2 3.3z\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</SVG>\n\t\t\t<p>{ __( 'Generating preview…' ) }</p>\n\t\t</div>\n\t);\n\n\tmarkup += `\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\twidth: 100vw;\n\t\t\t}\n\t\t\t@-webkit-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-moz-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-o-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg {\n\t\t\t\twidth: 192px;\n\t\t\t\theight: 192px;\n\t\t\t\tstroke: #555d66;\n\t\t\t\tstroke-width: 0.75;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg .outer,\n\t\t\t.editor-post-preview-button__interstitial-message svg .inner {\n\t\t\t\tstroke-dasharray: 280;\n\t\t\t\tstroke-dashoffset: 280;\n\t\t\t\t-webkit-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-moz-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-o-animation: paint 1.5s ease infinite alternate;\n\t\t\t\tanimation: paint 1.5s ease infinite alternate;\n\t\t\t}\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t\t\t}\n\t\t</style>\n\t`;\n\n\t/**\n\t * Filters the interstitial message shown when generating previews.\n\t *\n\t * @param {string} markup The preview interstitial markup.\n\t */\n\tmarkup = applyFilters( 'editor.PostPreview.interstitialMarkup', markup );\n\n\ttargetDocument.write( markup );\n\ttargetDocument.title = __( 'Generating preview…' );\n\ttargetDocument.close();\n}\n\nexport class PostPreviewButton extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.buttonRef = createRef();\n\n\t\tthis.openPreviewWindow = this.openPreviewWindow.bind( this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { previewLink } = this.props;\n\t\t// This relies on the window being responsible to unset itself when\n\t\t// navigation occurs or a new preview window is opened, to avoid\n\t\t// unintentional forceful redirects.\n\t\tif ( previewLink && ! prevProps.previewLink ) {\n\t\t\tthis.setPreviewWindowLink( previewLink );\n\t\t}\n\t}\n\n\t/**\n\t * Sets the preview window's location to the given URL, if a preview window\n\t * exists and is not closed.\n\t *\n\t * @param {string} url URL to assign as preview window location.\n\t */\n\tsetPreviewWindowLink( url ) {\n\t\tconst { previewWindow } = this;\n\n\t\tif ( previewWindow && ! previewWindow.closed ) {\n\t\t\tpreviewWindow.location = url;\n\t\t\tif ( this.buttonRef.current ) {\n\t\t\t\tthis.buttonRef.current.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetWindowTarget() {\n\t\tconst { postId } = this.props;\n\t\treturn `wp-preview-${ postId }`;\n\t}\n\n\topenPreviewWindow( event ) {\n\t\t// Our Preview button has its 'href' and 'target' set correctly for a11y\n\t\t// purposes. Unfortunately, though, we can't rely on the default 'click'\n\t\t// handler since sometimes it incorrectly opens a new tab instead of reusing\n\t\t// the existing one.\n\t\t// https://github.com/WordPress/gutenberg/pull/8330\n\t\tevent.preventDefault();\n\n\t\t// Open up a Preview tab if needed. This is where we'll show the preview.\n\t\tif ( ! this.previewWindow || this.previewWindow.closed ) {\n\t\t\tthis.previewWindow = window.open( '', this.getWindowTarget() );\n\t\t}\n\n\t\t// Focus the Preview tab. This might not do anything, depending on the browser's\n\t\t// and user's preferences.\n\t\t// https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\n\t\tthis.previewWindow.focus();\n\n\t\t// If we don't need to autosave the post before previewing, then we simply\n\t\t// load the Preview URL in the Preview tab.\n\t\tif ( ! this.props.isAutosaveable ) {\n\t\t\tthis.setPreviewWindowLink( event.target.href );\n\t\t\treturn;\n\t\t}\n\n\t\t// Request an autosave. This happens asynchronously and causes the component\n\t\t// to update when finished.\n\t\tif ( this.props.isDraft ) {\n\t\t\tthis.props.savePost( { isPreview: true } );\n\t\t} else {\n\t\t\tthis.props.autosave( { isPreview: true } );\n\t\t}\n\n\t\t// Display a 'Generating preview' message in the Preview tab while we wait for the\n\t\t// autosave to finish.\n\t\twriteInterstitialMessage( this.previewWindow.document );\n\t}\n\n\trender() {\n\t\tconst { previewLink, currentPostLink, isSaveable, role } = this.props;\n\n\t\t// Link to the `?preview=true` URL if we have it, since this lets us see\n\t\t// changes that were autosaved since the post was last published. Otherwise,\n\t\t// just link to the post's URL.\n\t\tconst href = previewLink || currentPostLink;\n\n\t\tconst classNames = classnames(\n\t\t\t{\n\t\t\t\t'editor-post-preview': ! this.props.className,\n\t\t\t},\n\t\t\tthis.props.className\n\t\t);\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tisTertiary={ ! this.props.className }\n\t\t\t\tclassName={ classNames }\n\t\t\t\thref={ href }\n\t\t\t\ttarget={ this.getWindowTarget() }\n\t\t\t\tdisabled={ ! isSaveable }\n\t\t\t\tonClick={ this.openPreviewWindow }\n\t\t\t\tref={ this.buttonRef }\n\t\t\t\trole={ role }\n\t\t\t>\n\t\t\t\t{ this.props.textContent ? (\n\t\t\t\t\tthis.props.textContent\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ _x( 'Preview', 'imperative verb' ) }\n\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { forcePreviewLink, forceIsAutosaveable } ) => {\n\t\tconst {\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostAttribute,\n\t\t\tgetEditedPostAttribute,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostAutosaveable,\n\t\t\tgetEditedPostPreviewLink,\n\t\t} = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\n\t\tconst previewLink = getEditedPostPreviewLink();\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tcurrentPostLink: getCurrentPostAttribute( 'link' ),\n\t\t\tpreviewLink:\n\t\t\t\tforcePreviewLink !== undefined ? forcePreviewLink : previewLink,\n\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\tisAutosaveable: forceIsAutosaveable || isEditedPostAutosaveable(),\n\t\t\tisViewable: get( postType, [ 'viewable' ], false ),\n\t\t\tisDraft:\n\t\t\t\t[ 'draft', 'auto-draft' ].indexOf(\n\t\t\t\t\tgetEditedPostAttribute( 'status' )\n\t\t\t\t) !== -1,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tautosave: dispatch( 'core/editor' ).autosave,\n\t\tsavePost: dispatch( 'core/editor' ).savePost,\n\t} ) ),\n\tifCondition( ( { isViewable } ) => isViewable ),\n] )( PostPreviewButton );\n"]}