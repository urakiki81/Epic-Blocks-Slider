{"version":3,"sources":["@wordpress/editor/src/store/actions.native.js"],"names":["autosave","v4","uuid","RNReactNativeGutenbergBridge","togglePostTitleSelection","isSelected","type","editorDidAutosave","updateClipboard","clipboard","createInfoNotice","message","notice","status","content","id","removeAllNotices","removeNotice"],"mappings":";;oDA6BiBA,Q;;AA7BjB;;;AAGA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA;;;;AAGA,OAAOC,4BAAP,MAAyC,gCAAzC;AAEA,cAAc,cAAd;AAEA;;;;;;;;AAOA,OAAO,SAASC,wBAAT,GAAuD;AAAA,MAApBC,UAAoB,uEAAP,IAAO;AAC7D,SAAO;AACNC,IAAAA,IAAI,EAAE,6BADA;AAEND,IAAAA,UAAU,EAAVA;AAFM,GAAP;AAIA;AAED;;;;AAGA,OAAO,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AACNG,UAAAA,4BAA4B,CAACI,iBAA7B;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP;;;;;;;;AAOA,OAAO,SAASC,eAAT,CAA0BC,SAA1B,EAAsC;AAC5C,SAAO;AACNH,IAAAA,IAAI,EAAE,kBADA;AAENG,IAAAA,SAAS,EAATA;AAFM,GAAP;AAIA;AAED;;;;;;;;AAOA,OAAO,SAASC,gBAAT,CAA2BC,OAA3B,EAAqC;AAC3C,MAAMC,MAAM,GAAG;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAEH,OAA3B;AAAoCI,IAAAA,EAAE,EAAEb,IAAI;AAA5C,GAAf;AACA,SAAO;AACNI,IAAAA,IAAI,EAAE,eADA;AAENM,IAAAA,MAAM,EAANA;AAFM,GAAP;AAIA;AAED;;;;;;AAKA,OAAO,SAASI,gBAAT,GAA4B;AAClC,SAAO;AACNV,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;;;;;;;;AAOA,OAAO,SAASW,YAAT,CAAuBF,EAAvB,EAA4B;AAClC,SAAO;AACNT,IAAAA,IAAI,EAAE,eADA;AAENS,IAAAA,EAAE,EAAFA;AAFM,GAAP;AAIA","sourcesContent":["/**\n * External dependencies\n */\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge from '@wordpress/react-native-bridge';\n\nexport * from './actions.js';\n\n/**\n * Returns an action object that enables or disables post title selection.\n *\n * @param {boolean} [isSelected=true] Whether post title is currently selected.\n *\n * @return {Object} Action object.\n */\nexport function togglePostTitleSelection( isSelected = true ) {\n\treturn {\n\t\ttype: 'TOGGLE_POST_TITLE_SELECTION',\n\t\tisSelected,\n\t};\n}\n\n/**\n * Action generator used in signalling that the post should autosave.\n */\nexport function* autosave() {\n\tRNReactNativeGutenbergBridge.editorDidAutosave();\n}\n\n/**\n * Returns an action object to set the clipboard data.\n *\n * @param {Object} clipboard Stored clipboard data.\n *\n * @return {Object} Action object.\n */\nexport function updateClipboard( clipboard ) {\n\treturn {\n\t\ttype: 'UPDATE_CLIPBOARD',\n\t\tclipboard,\n\t};\n}\n\n/**\n * Returns an action object to create an info notice.\n *\n * @param {Object} message The displayed message of the notice.\n *\n * @return {Object} Action object.\n */\nexport function createInfoNotice( message ) {\n\tconst notice = { status: 'info', content: message, id: uuid() };\n\treturn {\n\t\ttype: 'CREATE_NOTICE',\n\t\tnotice,\n\t};\n}\n\n/**\n * Returns an action object to remove all notices.\n *\n * @return {Object} Action object.\n */\nexport function removeAllNotices() {\n\treturn {\n\t\ttype: 'REMOVE_ALL_NOTICES',\n\t};\n}\n\n/**\n * Returns an action object to remove a notice by id.\n *\n * @param {Object} id The id of the notice to remove.\n *\n * @return {Object} Action object.\n */\nexport function removeNotice( id ) {\n\treturn {\n\t\ttype: 'REMOVE_NOTICE',\n\t\tid,\n\t};\n}\n"]}