{"version":3,"sources":["@wordpress/editor/src/components/global-keyboard-shortcuts/save-shortcut.js"],"names":["SaveShortcut","resetBlocksOnSave","resetEditorBlocks","savePost","select","_isEditedPostDirty","isEditedPostDirty","_getPostEdits","getPostEdits","event","preventDefault","postEdits","content","blocks","bindGlobal"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AALA;;;AAOA,SAASA,YAAT,OAA+C;AAAA,MAAtBC,iBAAsB,QAAtBA,iBAAsB;;AAAA,qBACN,uBAAa,aAAb,CADM;AAAA,MACtCC,iBADsC,gBACtCA,iBADsC;AAAA,MACnBC,QADmB,gBACnBA,QADmB;;AAAA,mBAEF,qBAAW,UAAEC,MAAF,EAAc;AAAA,kBAIhEA,MAAM,CAAE,aAAF,CAJ0D;AAAA,QAEhDC,kBAFgD,WAEnEC,iBAFmE;AAAA,QAGrDC,aAHqD,WAGnEC,YAHmE;;AAMpE,WAAO;AACNF,MAAAA,iBAAiB,EAAED,kBADb;AAENG,MAAAA,YAAY,EAAED;AAFR,KAAP;AAIA,GAV2C,EAUzC,EAVyC,CAFE;AAAA,MAEtCD,iBAFsC,cAEtCA,iBAFsC;AAAA,MAEnBE,YAFmB,cAEnBA,YAFmB;;AAc9C,sCACC,kBADD,EAEC,UAAEC,KAAF,EAAa;AACZA,IAAAA,KAAK,CAACC,cAAN,GADY,CAGZ;AACA;AACA;AACA;AACA;;AACA,QAAK,CAAEJ,iBAAiB,EAAxB,EAA6B;AAC5B;AACA,KAVW,CAYZ;AACA;AACA;AACA;;;AACA,QAAKL,iBAAL,EAAyB;AACxB,UAAMU,SAAS,GAAGH,YAAY,EAA9B;;AACA,UACCG,SAAS,CAACC,OAAV,IACA,OAAOD,SAAS,CAACC,OAAjB,KAA6B,QAF9B,EAGE;AACD,YAAMC,MAAM,GAAG,mBAAOF,SAAS,CAACC,OAAjB,CAAf;AACAV,QAAAA,iBAAiB,CAAEW,MAAF,CAAjB;AACA;AACD;;AAEDV,IAAAA,QAAQ;AACR,GA9BF,EA+BC;AAAEW,IAAAA,UAAU,EAAE;AAAd,GA/BD;AAkCA,SAAO,IAAP;AACA;;eAEcd,Y","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { parse } from '@wordpress/blocks';\n\nfunction SaveShortcut( { resetBlocksOnSave } ) {\n\tconst { resetEditorBlocks, savePost } = useDispatch( 'core/editor' );\n\tconst { isEditedPostDirty, getPostEdits } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditedPostDirty: _isEditedPostDirty,\n\t\t\tgetPostEdits: _getPostEdits,\n\t\t} = select( 'core/editor' );\n\n\t\treturn {\n\t\t\tisEditedPostDirty: _isEditedPostDirty,\n\t\t\tgetPostEdits: _getPostEdits,\n\t\t};\n\t}, [] );\n\n\tuseShortcut(\n\t\t'core/editor/save',\n\t\t( event ) => {\n\t\t\tevent.preventDefault();\n\n\t\t\t// TODO: This should be handled in the `savePost` effect in\n\t\t\t// considering `isSaveable`. See note on `isEditedPostSaveable`\n\t\t\t// selector about dirtiness and meta-boxes.\n\t\t\t//\n\t\t\t// See: `isEditedPostSaveable`\n\t\t\tif ( ! isEditedPostDirty() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The text editor requires that editor blocks are updated for a\n\t\t\t// save to work correctly. Usually this happens when the textarea\n\t\t\t// for the code editors blurs, but the shortcut can be used without\n\t\t\t// blurring the textarea.\n\t\t\tif ( resetBlocksOnSave ) {\n\t\t\t\tconst postEdits = getPostEdits();\n\t\t\t\tif (\n\t\t\t\t\tpostEdits.content &&\n\t\t\t\t\ttypeof postEdits.content === 'string'\n\t\t\t\t) {\n\t\t\t\t\tconst blocks = parse( postEdits.content );\n\t\t\t\t\tresetEditorBlocks( blocks );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsavePost();\n\t\t},\n\t\t{ bindGlobal: true }\n\t);\n\n\treturn null;\n}\n\nexport default SaveShortcut;\n"]}