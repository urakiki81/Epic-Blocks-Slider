{"version":3,"sources":["@wordpress/editor/src/components/post-locked-modal/index.js"],"names":["PostLockedModal","arguments","sendPostLock","bind","receivePostLock","releasePostLock","hookName","getHookName","instanceId","props","data","isLocked","activePostLock","postId","lock","post_id","autosave","updatePostLock","received","lock_error","isTakeover","user","avatar","avatar_src","new_lock","postLockUtils","window","FormData","append","unlockNonce","navigator","sendBeacon","ajaxUrl","xhr","XMLHttpRequest","open","send","postType","userDisplayName","name","userAvatar","unlockUrl","lockKey","post","action","_wpnonce","nonce","allPostsUrl","post_type","allPostsLabel","Component","select","isPostLocked","isPostLockTakeover","getPostLockUser","getCurrentPostId","getActivePostLock","getEditedPostAttribute","getEditorSettings","getPostType","dispatch","withInstanceId","beforeunload"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Modal, Button } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Component } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\nimport { compose, withGlobalEvents, withInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getWPAdminURL } from '../../utils/url';\nimport PostPreviewButton from '../post-preview-button';\n\nclass PostLockedModal extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.sendPostLock = this.sendPostLock.bind( this );\n\t\tthis.receivePostLock = this.receivePostLock.bind( this );\n\t\tthis.releasePostLock = this.releasePostLock.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst hookName = this.getHookName();\n\n\t\t// Details on these events on the Heartbeat API docs\n\t\t// https://developer.wordpress.org/plugins/javascript/heartbeat-api/\n\t\taddAction( 'heartbeat.send', hookName, this.sendPostLock );\n\t\taddAction( 'heartbeat.tick', hookName, this.receivePostLock );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst hookName = this.getHookName();\n\n\t\tremoveAction( 'heartbeat.send', hookName );\n\t\tremoveAction( 'heartbeat.tick', hookName );\n\t}\n\n\t/**\n\t * Returns a `@wordpress/hooks` hook name specific to the instance of the\n\t * component.\n\t *\n\t * @return {string} Hook name prefix.\n\t */\n\tgetHookName() {\n\t\tconst { instanceId } = this.props;\n\t\treturn 'core/editor/post-locked-modal-' + instanceId;\n\t}\n\n\t/**\n\t * Keep the lock refreshed.\n\t *\n\t * When the user does not send a heartbeat in a heartbeat-tick\n\t * the user is no longer editing and another user can start editing.\n\t *\n\t * @param {Object} data Data to send in the heartbeat request.\n\t */\n\tsendPostLock( data ) {\n\t\tconst { isLocked, activePostLock, postId } = this.props;\n\t\tif ( isLocked ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdata[ 'wp-refresh-post-lock' ] = {\n\t\t\tlock: activePostLock,\n\t\t\tpost_id: postId,\n\t\t};\n\t}\n\n\t/**\n\t * Refresh post locks: update the lock string or show the dialog if somebody has taken over editing.\n\t *\n\t * @param {Object} data Data received in the heartbeat request\n\t */\n\treceivePostLock( data ) {\n\t\tif ( ! data[ 'wp-refresh-post-lock' ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { autosave, updatePostLock } = this.props;\n\t\tconst received = data[ 'wp-refresh-post-lock' ];\n\t\tif ( received.lock_error ) {\n\t\t\t// Auto save and display the takeover modal.\n\t\t\tautosave();\n\t\t\tupdatePostLock( {\n\t\t\t\tisLocked: true,\n\t\t\t\tisTakeover: true,\n\t\t\t\tuser: {\n\t\t\t\t\tavatar: received.lock_error.avatar_src,\n\t\t\t\t},\n\t\t\t} );\n\t\t} else if ( received.new_lock ) {\n\t\t\tupdatePostLock( {\n\t\t\t\tisLocked: false,\n\t\t\t\tactivePostLock: received.new_lock,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Unlock the post before the window is exited.\n\t */\n\treleasePostLock() {\n\t\tconst { isLocked, activePostLock, postLockUtils, postId } = this.props;\n\t\tif ( isLocked || ! activePostLock ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = new window.FormData();\n\t\tdata.append( 'action', 'wp-remove-post-lock' );\n\t\tdata.append( '_wpnonce', postLockUtils.unlockNonce );\n\t\tdata.append( 'post_ID', postId );\n\t\tdata.append( 'active_post_lock', activePostLock );\n\n\t\tif ( window.navigator.sendBeacon ) {\n\t\t\twindow.navigator.sendBeacon( postLockUtils.ajaxUrl, data );\n\t\t} else {\n\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\txhr.open( 'POST', postLockUtils.ajaxUrl, false );\n\t\t\txhr.send( data );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tuser,\n\t\t\tpostId,\n\t\t\tisLocked,\n\t\t\tisTakeover,\n\t\t\tpostLockUtils,\n\t\t\tpostType,\n\t\t} = this.props;\n\t\tif ( ! isLocked ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst userDisplayName = user.name;\n\t\tconst userAvatar = user.avatar;\n\n\t\tconst unlockUrl = addQueryArgs( 'post.php', {\n\t\t\t'get-post-lock': '1',\n\t\t\tlockKey: true,\n\t\t\tpost: postId,\n\t\t\taction: 'edit',\n\t\t\t_wpnonce: postLockUtils.nonce,\n\t\t} );\n\t\tconst allPostsUrl = getWPAdminURL( 'edit.php', {\n\t\t\tpost_type: get( postType, [ 'slug' ] ),\n\t\t} );\n\t\tconst allPostsLabel = __( 'Exit the Editor' );\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle={\n\t\t\t\t\tisTakeover\n\t\t\t\t\t\t? __( 'Someone else has taken over this post.' )\n\t\t\t\t\t\t: __( 'This post is already being edited.' )\n\t\t\t\t}\n\t\t\t\tfocusOnMount={ true }\n\t\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\t\tshouldCloseOnEsc={ false }\n\t\t\t\tisDismissible={ false }\n\t\t\t\tclassName=\"editor-post-locked-modal\"\n\t\t\t>\n\t\t\t\t{ !! userAvatar && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={ userAvatar }\n\t\t\t\t\t\talt={ __( 'Avatar' ) }\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__avatar\"\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ !! isTakeover && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ userDisplayName\n\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t'%s now has editing control of this post. Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t'Another user now has editing control of this post. Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t  ) }\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editor-post-locked-modal__buttons\">\n\t\t\t\t\t\t\t<Button isPrimary href={ allPostsUrl }>\n\t\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ userDisplayName\n\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t'%s is currently working on this post, which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t'Another user is currently working on this post, which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t  ) }\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editor-post-locked-modal__buttons\">\n\t\t\t\t\t\t\t<Button isSecondary href={ allPostsUrl }>\n\t\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<PostPreviewButton />\n\t\t\t\t\t\t\t<Button isPrimary href={ unlockUrl }>\n\t\t\t\t\t\t\t\t{ __( 'Take Over' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisPostLocked,\n\t\t\tisPostLockTakeover,\n\t\t\tgetPostLockUser,\n\t\t\tgetCurrentPostId,\n\t\t\tgetActivePostLock,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditorSettings,\n\t\t} = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\t\treturn {\n\t\t\tisLocked: isPostLocked(),\n\t\t\tisTakeover: isPostLockTakeover(),\n\t\t\tuser: getPostLockUser(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostLockUtils: getEditorSettings().postLockUtils,\n\t\t\tactivePostLock: getActivePostLock(),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { autosave, updatePostLock } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tautosave,\n\t\t\tupdatePostLock,\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithGlobalEvents( {\n\t\tbeforeunload: 'releasePostLock',\n\t} )\n)( PostLockedModal );\n"]}