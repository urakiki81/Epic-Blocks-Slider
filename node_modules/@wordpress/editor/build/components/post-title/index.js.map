{"version":3,"sources":["@wordpress/editor/src/components/post-title/index.js"],"names":["REGEXP_NEWLINES","PostTitle","arguments","onChange","bind","onSelect","onUnselect","onKeyDown","onPaste","state","isSelected","setState","props","clearSelectedBlock","event","newTitle","target","value","replace","onUpdate","keyCode","ENTER","preventDefault","onEnterPress","title","onInsertBlockAfter","clipboardData","plainText","html","getData","error1","error2","window","console","log","content","HTML","length","firstBlock","name","attributes","slice","hasFixedToolbar","isCleanNewPost","isFocusMode","instanceId","placeholder","className","decodedPlaceholder","document","body","activeElement","Component","applyWithSelect","select","getEditedPostAttribute","getSettings","titlePlaceholder","focusMode","applyWithDispatch","dispatch","insertDefaultBlock","insertBlocks","editPost","undefined","blocks","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { ENTER } from '@wordpress/keycodes';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { pasteHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\n\n/**\n * Constants\n */\nconst REGEXP_NEWLINES = /[\\r\\n]+/g;\n\nclass PostTitle extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onSelect = this.onSelect.bind( this );\n\t\tthis.onUnselect = this.onUnselect.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\n\t\tthis.state = {\n\t\t\tisSelected: false,\n\t\t};\n\t}\n\n\tonSelect() {\n\t\tthis.setState( { isSelected: true } );\n\t\tthis.props.clearSelectedBlock();\n\t}\n\n\tonUnselect() {\n\t\tthis.setState( { isSelected: false } );\n\t}\n\n\tonChange( event ) {\n\t\tconst newTitle = event.target.value.replace( REGEXP_NEWLINES, ' ' );\n\t\tthis.props.onUpdate( newTitle );\n\t}\n\n\tonKeyDown( event ) {\n\t\tif ( event.keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.onEnterPress();\n\t\t}\n\t}\n\n\tonPaste( event ) {\n\t\tconst { title, onInsertBlockAfter, onUpdate } = this.props;\n\t\tconst clipboardData = event.clipboardData;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst content = pasteHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t} );\n\n\t\tif ( typeof content !== 'string' && content.length ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst [ firstBlock ] = content;\n\n\t\t\tif (\n\t\t\t\t! title &&\n\t\t\t\t( firstBlock.name === 'core/heading' ||\n\t\t\t\t\tfirstBlock.name === 'core/paragraph' )\n\t\t\t) {\n\t\t\t\tonUpdate( firstBlock.attributes.content );\n\t\t\t\tonInsertBlockAfter( content.slice( 1 ) );\n\t\t\t} else {\n\t\t\t\tonInsertBlockAfter( content );\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\thasFixedToolbar,\n\t\t\tisCleanNewPost,\n\t\t\tisFocusMode,\n\t\t\tinstanceId,\n\t\t\tplaceholder,\n\t\t\ttitle,\n\t\t} = this.props;\n\t\tconst { isSelected } = this.state;\n\n\t\t// The wp-block className is important for editor styles.\n\t\t// This same block is used in both the visual and the code editor.\n\t\tconst className = classnames(\n\t\t\t'wp-block editor-post-title editor-post-title__block',\n\t\t\t{\n\t\t\t\t'is-selected': isSelected,\n\t\t\t\t'is-focus-mode': isFocusMode,\n\t\t\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t\t}\n\t\t);\n\t\tconst decodedPlaceholder = decodeEntities( placeholder );\n\n\t\treturn (\n\t\t\t<PostTypeSupportCheck supportKeys=\"title\">\n\t\t\t\t<div className={ className }>\n\t\t\t\t\t<VisuallyHidden\n\t\t\t\t\t\tas=\"label\"\n\t\t\t\t\t\thtmlFor={ `post-title-${ instanceId }` }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tid={ `post-title-${ instanceId }` }\n\t\t\t\t\t\tclassName=\"editor-post-title__input\"\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\tplaceholder={ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t\t\tonFocus={ this.onSelect }\n\t\t\t\t\t\tonBlur={ this.onUnselect }\n\t\t\t\t\t\tonKeyDown={ this.onKeyDown }\n\t\t\t\t\t\tonKeyPress={ this.onUnselect }\n\t\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tOnly autofocus the title when the post is entirely empty.\n\t\t\t\t\t\t\tThis should only happen for a new post, which means we\n\t\t\t\t\t\t\tfocus the title on new post so the author can start typing\n\t\t\t\t\t\t\tright away, without needing to click anything.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\t/* eslint-disable jsx-a11y/no-autofocus */\n\t\t\t\t\t\tautoFocus={\n\t\t\t\t\t\t\t( document.body === document.activeElement ||\n\t\t\t\t\t\t\t\t! document.activeElement ) &&\n\t\t\t\t\t\t\tisCleanNewPost\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* eslint-enable jsx-a11y/no-autofocus */\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</PostTypeSupportCheck>\n\t\t);\n\t}\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getEditedPostAttribute, isCleanNewPost } = select( 'core/editor' );\n\tconst { getSettings } = select( 'core/block-editor' );\n\tconst { titlePlaceholder, focusMode, hasFixedToolbar } = getSettings();\n\n\treturn {\n\t\tisCleanNewPost: isCleanNewPost(),\n\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\tplaceholder: titlePlaceholder,\n\t\tisFocusMode: focusMode,\n\t\thasFixedToolbar,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\tconst { insertDefaultBlock, clearSelectedBlock, insertBlocks } = dispatch(\n\t\t'core/block-editor'\n\t);\n\tconst { editPost } = dispatch( 'core/editor' );\n\n\treturn {\n\t\tonEnterPress() {\n\t\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t\t},\n\t\tonInsertBlockAfter( blocks ) {\n\t\t\tinsertBlocks( blocks, 0 );\n\t\t},\n\t\tonUpdate( title ) {\n\t\t\teditPost( { title } );\n\t\t},\n\t\tclearSelectedBlock,\n\t};\n} );\n\nexport default compose(\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithInstanceId\n)( PostTitle );\n"]}