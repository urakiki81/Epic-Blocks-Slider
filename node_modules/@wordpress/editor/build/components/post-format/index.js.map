{"version":3,"sources":["@wordpress/editor/src/components/post-format/index.js"],"names":["POST_FORMATS","id","caption","PostFormat","onUpdatePostFormat","postFormat","supportedFormats","suggestedFormat","instanceId","postFormatSelectorId","formats","filter","format","suggestion","map","label","value","select","getEditedPostAttribute","getSuggestedPostFormat","themeSupports","getThemeSupports","dispatch","editPost","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find, get, includes, union } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, SelectControl } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostFormatCheck from './check';\n\nexport const POST_FORMATS = [\n\t{ id: 'aside', caption: __( 'Aside' ) },\n\t{ id: 'gallery', caption: __( 'Gallery' ) },\n\t{ id: 'link', caption: __( 'Link' ) },\n\t{ id: 'image', caption: __( 'Image' ) },\n\t{ id: 'quote', caption: __( 'Quote' ) },\n\t{ id: 'standard', caption: __( 'Standard' ) },\n\t{ id: 'status', caption: __( 'Status' ) },\n\t{ id: 'video', caption: __( 'Video' ) },\n\t{ id: 'audio', caption: __( 'Audio' ) },\n\t{ id: 'chat', caption: __( 'Chat' ) },\n];\n\nfunction PostFormat( {\n\tonUpdatePostFormat,\n\tpostFormat = 'standard',\n\tsupportedFormats,\n\tsuggestedFormat,\n\tinstanceId,\n} ) {\n\tconst postFormatSelectorId = 'post-format-selector-' + instanceId;\n\tconst formats = POST_FORMATS.filter( ( format ) =>\n\t\tincludes( supportedFormats, format.id )\n\t);\n\tconst suggestion = find(\n\t\tformats,\n\t\t( format ) => format.id === suggestedFormat\n\t);\n\n\t// Disable reason: We need to change the value immiediately to show/hide the suggestion if needed\n\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<div className=\"editor-post-format\">\n\t\t\t\t<div className=\"editor-post-format__content\">\n\t\t\t\t\t<label htmlFor={ postFormatSelectorId }>\n\t\t\t\t\t\t{ __( 'Post Format' ) }\n\t\t\t\t\t</label>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tvalue={ postFormat }\n\t\t\t\t\t\tonChange={ ( format ) => onUpdatePostFormat( format ) }\n\t\t\t\t\t\tid={ postFormatSelectorId }\n\t\t\t\t\t\toptions={ formats.map( ( format ) => ( {\n\t\t\t\t\t\t\tlabel: format.caption,\n\t\t\t\t\t\t\tvalue: format.id,\n\t\t\t\t\t\t} ) ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{ suggestion && suggestion.id !== postFormat && (\n\t\t\t\t\t<div className=\"editor-post-format__suggestion\">\n\t\t\t\t\t\t{ __( 'Suggestion:' ) }{ ' ' }\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tonUpdatePostFormat( suggestion.id )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ suggestion.caption }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PostFormatCheck>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } = select(\n\t\t\t'core/editor'\n\t\t);\n\t\tconst postFormat = getEditedPostAttribute( 'format' );\n\t\tconst themeSupports = select( 'core' ).getThemeSupports();\n\t\t// Ensure current format is always in the set.\n\t\t// The current format may not be a format supported by the theme.\n\t\tconst supportedFormats = union(\n\t\t\t[ postFormat ],\n\t\t\tget( themeSupports, [ 'formats' ], [] )\n\t\t);\n\t\treturn {\n\t\t\tpostFormat,\n\t\t\tsupportedFormats,\n\t\t\tsuggestedFormat: getSuggestedPostFormat(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonUpdatePostFormat( postFormat ) {\n\t\t\tdispatch( 'core/editor' ).editPost( { format: postFormat } );\n\t\t},\n\t} ) ),\n\twithInstanceId,\n] )( PostFormat );\n"]}