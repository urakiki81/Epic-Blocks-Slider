{"version":3,"sources":["@wordpress/editor/src/components/unsaved-changes-warning/index.js"],"names":["UnsavedChangesWarning","isDirty","select","__experimentalGetDirtyEntityRecords","dirtyEntityRecords","length","warnIfUnsavedChanges","event","returnValue","window","addEventListener","removeEventListener"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AALA;;;;AAOA;;;;;;AAMe,SAASA,qBAAT,GAAiC;AAC/C,MAAMC,OAAO,GAAG,qBAAW,UAAEC,MAAF,EAAc;AACxC,WAAO,YAAM;AAAA,oBACoCA,MAAM,CAAE,MAAF,CAD1C;AAAA,UACJC,mCADI,WACJA,mCADI;;AAEZ,UAAMC,kBAAkB,GAAGD,mCAAmC,EAA9D;;AACA,aAAOC,kBAAkB,CAACC,MAAnB,GAA4B,CAAnC;AACA,KAJD;AAKA,GANe,EAMb,EANa,CAAhB;AAQA;;;;;;;;AAOA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAEC,KAAF,EAAa;AACzC;AACA;AACA;AACA;AACA,QAAKN,OAAO,EAAZ,EAAiB;AAChBM,MAAAA,KAAK,CAACC,WAAN,GAAoB,cACnB,8DADmB,CAApB;AAGA,aAAOD,KAAK,CAACC,WAAb;AACA;AACD,GAXD;;AAaA,0BAAW,YAAM;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAyB,cAAzB,EAAyCJ,oBAAzC;AAEA,WAAO,YAAM;AACZG,MAAAA,MAAM,CAACE,mBAAP,CAA4B,cAA5B,EAA4CL,oBAA5C;AACA,KAFD;AAGA,GAND,EAMG,EANH;AAQA,SAAO,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Warns the user if there are unsaved changes before leaving the editor.\n * Compatible with Post Editor and Site Editor.\n *\n * @return {WPComponent} The component.\n */\nexport default function UnsavedChangesWarning() {\n\tconst isDirty = useSelect( ( select ) => {\n\t\treturn () => {\n\t\t\tconst { __experimentalGetDirtyEntityRecords } = select( 'core' );\n\t\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\n\t\t\treturn dirtyEntityRecords.length > 0;\n\t\t};\n\t}, [] );\n\n\t/**\n\t * Warns the user if there are unsaved changes before leaving the editor.\n\t *\n\t * @param {Event} event `beforeunload` event.\n\t *\n\t * @return {?string} Warning prompt message, if unsaved changes exist.\n\t */\n\tconst warnIfUnsavedChanges = ( event ) => {\n\t\t// We need to call the selector directly in the listener to avoid race\n\t\t// conditions with `BrowserURL` where `componentDidUpdate` gets the\n\t\t// new value of `isEditedPostDirty` before this component does,\n\t\t// causing this component to incorrectly think a trashed post is still dirty.\n\t\tif ( isDirty() ) {\n\t\t\tevent.returnValue = __(\n\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t);\n\t\t\treturn event.returnValue;\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\n\t\t};\n\t}, [] );\n\n\treturn null;\n}\n"]}