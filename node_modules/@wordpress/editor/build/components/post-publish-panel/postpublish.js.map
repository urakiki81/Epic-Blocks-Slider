{"version":3,"sources":["@wordpress/editor/src/components/post-publish-panel/postpublish.js"],"names":["POSTNAME","getFuturePostUrl","post","slug","permalink_template","includes","replace","PostPublishPanelPostpublish","arguments","state","showCopyConfirmation","onCopy","bind","onSelectInput","postLink","props","focusOnMount","current","focus","clearTimeout","dismissCopyConfirmation","setState","setTimeout","event","target","select","children","isScheduled","postType","postLabel","viewPostLabel","link","status","postPublishNonLinkHeader","title","Component","getEditedPostAttribute","getCurrentPost","isCurrentPostScheduled","getPostType"],"mappings":";;;;;;;;;AAeA;;;;;;;;;;;;;;AAZA;;AAKA;;AAMA;;AAEA;;AACA;;AACA;;AAKA;;;;;;AAEA,IAAMA,QAAQ,GAAG,YAAjB;AAEA;;;;;;;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEC,IAAF,EAAY;AAAA,MAC5BC,IAD4B,GACnBD,IADmB,CAC5BC,IAD4B;;AAGpC,MAAKD,IAAI,CAACE,kBAAL,CAAwBC,QAAxB,CAAkCL,QAAlC,CAAL,EAAoD;AACnD,WAAOE,IAAI,CAACE,kBAAL,CAAwBE,OAAxB,CAAiCN,QAAjC,EAA2CG,IAA3C,CAAP;AACA;;AAED,SAAOD,IAAI,CAACE,kBAAZ;AACA,CARD;;IAUMG,2B;;;;;AACL,yCAAc;AAAA;;AAAA;AACb,+BAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,oBAAoB,EAAE;AADV,KAAb;AAGA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,6CAAd;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,6CAArB;AACA,UAAKE,QAAL,GAAgB,yBAAhB;AAPa;AAQb;;;;wCAEmB;AACnB,UAAK,KAAKC,KAAL,CAAWC,YAAhB,EAA+B;AAC9B,aAAKF,QAAL,CAAcG,OAAd,CAAsBC,KAAtB;AACA;AACD;;;2CAEsB;AACtBC,MAAAA,YAAY,CAAE,KAAKC,uBAAP,CAAZ;AACA;;;6BAEQ;AAAA;;AACR,WAAKC,QAAL,CAAe;AACdX,QAAAA,oBAAoB,EAAE;AADR,OAAf;AAIAS,MAAAA,YAAY,CAAE,KAAKC,uBAAP,CAAZ;AACA,WAAKA,uBAAL,GAA+BE,UAAU,CAAE,YAAM;AAChD,QAAA,MAAI,CAACD,QAAL,CAAe;AACdX,UAAAA,oBAAoB,EAAE;AADR,SAAf;AAGA,OAJwC,EAItC,IAJsC,CAAzC;AAKA;;;kCAEca,K,EAAQ;AACtBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb;AACA;;;6BAEQ;AAAA,wBAC0C,KAAKV,KAD/C;AAAA,UACAW,QADA,eACAA,QADA;AAAA,UACUC,WADV,eACUA,WADV;AAAA,UACuBzB,IADvB,eACuBA,IADvB;AAAA,UAC6B0B,QAD7B,eAC6BA,QAD7B;AAER,UAAMC,SAAS,GAAG,iBAAKD,QAAL,EAAe,CAAE,QAAF,EAAY,eAAZ,CAAf,CAAlB;AACA,UAAME,aAAa,GAAG,iBAAKF,QAAL,EAAe,CAAE,QAAF,EAAY,WAAZ,CAAf,CAAtB;AACA,UAAMG,IAAI,GACT7B,IAAI,CAAC8B,MAAL,KAAgB,QAAhB,GAA2B/B,gBAAgB,CAAEC,IAAF,CAA3C,GAAsDA,IAAI,CAAC6B,IAD5D;AAGA,UAAME,wBAAwB,GAAGN,WAAW,GAC3C,qDACG,cAAI,sCAAJ,CADH,EACmD,GADnD,EAEC,4BAAC,cAAD,OAFD,MAD2C,GAM3C,cAAI,cAAJ,CAND;AASA,aACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACC,4BAAC,qBAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACC;AAAG,QAAA,GAAG,EAAG,KAAKb,QAAd;AAAyB,QAAA,IAAI,EAAGiB;AAAhC,SACG,kCAAgB7B,IAAI,CAACgC,KAArB,KAAgC,cAAI,YAAJ,CADnC,CADD,EAGO,GAHP,EAIGD,wBAJH,CADD,EAOC,4BAAC,qBAAD,QACC;AAAG,QAAA,SAAS,EAAC;AAAb,SACC,4CAAU,cAAI,cAAJ,CAAV,CADD,CADD,EAIC,4BAAC,uBAAD;AACC,QAAA,SAAS,EAAC,8CADX;AAEC,QAAA,QAAQ,MAFT;AAGC,QAAA,KAAK,EAAG;AACP;AACA,sBAAI,YAAJ,CAFO,EAGPJ,SAHO,CAHT;AAQC,QAAA,KAAK,EAAG,iCAAwBE,IAAxB,CART;AASC,QAAA,OAAO,EAAG,KAAKlB;AAThB,QAJD,EAeC;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,CAAEc,WAAF,IACD,4BAAC,kBAAD;AAAQ,QAAA,WAAW,MAAnB;AAAoB,QAAA,IAAI,EAAGI;AAA3B,SACGD,aADH,CAFF,EAOC,4BAAC,2BAAD;AACC,QAAA,WAAW,MADZ;AAEC,QAAA,IAAI,EAAGC,IAFR;AAGC,QAAA,MAAM,EAAG,KAAKpB;AAHf,SAKG,KAAKF,KAAL,CAAWC,oBAAX,GACC,cAAI,SAAJ,CADD,GAEC,cAAI,WAAJ,CAPJ,CAPD,CAfD,CAPD,EAwCGgB,QAxCH,CADD;AA4CA;;;EAlGwCS,kB;;eAqG3B,sBAAY,UAAEV,MAAF,EAAc;AAAA,gBAKpCA,MAAM,CAAE,aAAF,CAL8B;AAAA,MAEvCW,sBAFuC,WAEvCA,sBAFuC;AAAA,MAGvCC,cAHuC,WAGvCA,cAHuC;AAAA,MAIvCC,sBAJuC,WAIvCA,sBAJuC;;AAAA,iBAMhBb,MAAM,CAAE,MAAF,CANU;AAAA,MAMhCc,WANgC,YAMhCA,WANgC;;AAQxC,SAAO;AACNrC,IAAAA,IAAI,EAAEmC,cAAc,EADd;AAENT,IAAAA,QAAQ,EAAEW,WAAW,CAAEH,sBAAsB,CAAE,MAAF,CAAxB,CAFf;AAGNT,IAAAA,WAAW,EAAEW,sBAAsB;AAH7B,GAAP;AAKA,CAbc,EAaV/B,2BAbU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tButton,\n\tClipboardButton,\n\tTextControl,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { safeDecodeURIComponent } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\n\nconst POSTNAME = '%postname%';\n\n/**\n * Returns URL for a future post.\n *\n * @param {Object} post         Post object.\n *\n * @return {string} PostPublish URL.\n */\n\nconst getFuturePostUrl = ( post ) => {\n\tconst { slug } = post;\n\n\tif ( post.permalink_template.includes( POSTNAME ) ) {\n\t\treturn post.permalink_template.replace( POSTNAME, slug );\n\t}\n\n\treturn post.permalink_template;\n};\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = get( postType, [ 'labels', 'singular_name' ] );\n\t\tconst viewPostLabel = get( postType, [ 'labels', 'view_item' ] );\n\t\tconst link =\n\t\t\tpost.status === 'future' ? getFuturePostUrl( post ) : post.link;\n\n\t\tconst postPublishNonLinkHeader = isScheduled ? (\n\t\t\t<>\n\t\t\t\t{ __( 'is now scheduled. It will go live on' ) }{ ' ' }\n\t\t\t\t<PostScheduleLabel />.\n\t\t\t</>\n\t\t) : (\n\t\t\t__( 'is now live.' )\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ link }>\n\t\t\t\t\t\t{ decodeEntities( post.title ) || __( '(no title)' ) }\n\t\t\t\t\t</a>{ ' ' }\n\t\t\t\t\t{ postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'Whatâ€™s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t__( '%s address' ),\n\t\t\t\t\t\t\tpostLabel\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ safeDecodeURIComponent( link ) }\n\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button isSecondary href={ link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<ClipboardButton\n\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\ttext={ link }\n\t\t\t\t\t\t\tonCopy={ this.onCopy }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ this.state.showCopyConfirmation\n\t\t\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t\t\t: __( 'Copy Link' ) }\n\t\t\t\t\t\t</ClipboardButton>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetEditedPostAttribute,\n\t\tgetCurrentPost,\n\t\tisCurrentPostScheduled,\n\t} = select( 'core/editor' );\n\tconst { getPostType } = select( 'core' );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n"]}