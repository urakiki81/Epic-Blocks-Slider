{"version":3,"sources":["@wordpress/editor/src/store/reducer.native.js"],"names":["EDITOR_SETTINGS_DEFAULTS","autosaveInterval","postTitle","isSelected","state","action","type","clipboard","notices","notice","filter","id","postId","postType","preferences","saving","postLock","postSavingLock","reusableBlocks","template","isReady","editorSettings"],"mappings":";;;;;;;;;;;;;;;;;;AAGA;;AAKA;;AAKA;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AA1BA;;;;AAKA;;;;AAKA;;;AAkBAA,mCAAyBC,gBAAzB,GAA4C,CAA5C,C,CAA+C;;AAI/C;;;;;;;;AAQO,IAAMC,SAAS,GAAG,2BAAiB;AACzCC,EAAAA,UADyC,wBACL;AAAA,QAAxBC,KAAwB,uEAAhB,KAAgB;AAAA,QAATC,MAAS;;AACnC,YAASA,MAAM,CAACC,IAAhB;AACC,WAAK,6BAAL;AACC,eAAOD,MAAM,CAACF,UAAd;AAFF;;AAKA,WAAOC,KAAP;AACA;AARwC,CAAjB,CAAlB;AAWP;;;;;;;;;;;AAQO,SAASG,SAAT,GAA2C;AAAA,MAAvBH,KAAuB,uEAAf,IAAe;AAAA,MAATC,MAAS;;AACjD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,kBAAL;AACC,aAAOD,MAAM,CAACE,SAAd;AAFF;;AAKA,SAAOH,KAAP;AACA;AAED;;;;;;;;;;AAQO,SAASI,OAAT,GAAuC;AAAA,MAArBJ,KAAqB,uEAAb,EAAa;AAAA,MAATC,MAAS;;AAC7C,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,eAAL;AACC,wDAAYF,KAAZ,IAAmBC,MAAM,CAACI,MAA1B;;AACD,SAAK,oBAAL;AACC,aAAO,EAAP;;AACD,SAAK,eAAL;AACC,aAAOL,KAAK,CAACM,MAAN,CAAc,UAAED,MAAF;AAAA,eAAcA,MAAM,CAACE,EAAP,KAAcN,MAAM,CAACM,EAAnC;AAAA,OAAd,CAAP;AANF;;AAQA,SAAOP,KAAP;AACA;;eAEc,4BACd,2BAAiB;AAChBQ,EAAAA,MAAM,EAANA,eADgB;AAEhBC,EAAAA,QAAQ,EAARA,iBAFgB;AAGhBX,EAAAA,SAAS,EAATA,SAHgB;AAIhBY,EAAAA,WAAW,EAAXA,oBAJgB;AAKhBC,EAAAA,MAAM,EAANA,eALgB;AAMhBC,EAAAA,QAAQ,EAARA,iBANgB;AAOhBC,EAAAA,cAAc,EAAdA,uBAPgB;AAQhBC,EAAAA,cAAc,EAAdA,uBARgB;AAShBC,EAAAA,QAAQ,EAARA,iBATgB;AAUhBC,EAAAA,OAAO,EAAPA,gBAVgB;AAWhBC,EAAAA,cAAc,EAAdA,uBAXgB;AAYhBd,EAAAA,SAAS,EAATA,SAZgB;AAahBC,EAAAA,OAAO,EAAPA;AAbgB,CAAjB,CADc,C","sourcesContent":["/**\n * External dependencies\n */\nimport optimist from 'redux-optimist';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tpostId,\n\tpostType,\n\tpreferences,\n\tsaving,\n\tpostLock,\n\tpostSavingLock,\n\treusableBlocks,\n\ttemplate,\n\tisReady,\n\teditorSettings,\n} from './reducer.js';\n\nimport { EDITOR_SETTINGS_DEFAULTS } from './defaults.js';\n\nEDITOR_SETTINGS_DEFAULTS.autosaveInterval = 1; // This is a way to override default behavior on mobile, and make it ping the native save every second as long as something changed\n\nexport * from './reducer.js';\n\n/**\n * Reducer returning the post title state.\n *\n * @param {Object}  state  Current state.\n * @param {Object}  action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const postTitle = combineReducers( {\n\tisSelected( state = false, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'TOGGLE_POST_TITLE_SELECTION':\n\t\t\t\treturn action.isSelected;\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer returning the clipboard state.\n *\n * @param {Object}  state  Current state.\n * @param {Object}  action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function clipboard( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_CLIPBOARD':\n\t\t\treturn action.clipboard;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the notices state.\n *\n * @param {Object}  state  Current state.\n * @param {Object}  action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function notices( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'CREATE_NOTICE':\n\t\t\treturn [ ...state, action.notice ];\n\t\tcase 'REMOVE_ALL_NOTICES':\n\t\t\treturn [];\n\t\tcase 'REMOVE_NOTICE':\n\t\t\treturn state.filter( ( notice ) => notice.id !== action.id );\n\t}\n\treturn state;\n}\n\nexport default optimist(\n\tcombineReducers( {\n\t\tpostId,\n\t\tpostType,\n\t\tpostTitle,\n\t\tpreferences,\n\t\tsaving,\n\t\tpostLock,\n\t\tpostSavingLock,\n\t\treusableBlocks,\n\t\ttemplate,\n\t\tisReady,\n\t\teditorSettings,\n\t\tclipboard,\n\t\tnotices,\n\t} )\n);\n"]}